<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">

<taglib>
    <tlib-version>1.0</tlib-version>
    <jsp-version>1.2</jsp-version>
    <short-name>WLI Console Tags</short-name>
    <uri>/WEB-INF/lib/taglib.tld</uri>
    <description>
        Tags used by the WLI management console.
    </description>



    <!-- page structure tags -->

    <tag>
        <name>simple-form</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.SimpleFormTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>title</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>action</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>method</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonLabel</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>closeonsubmit</name>
            <required>no</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>align</name>
            <required>no</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onSubmit</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The exact that goes into the onSubmit attribute of the &lt;form&gt; element
            </description>
        </attribute>
        <attribute>
            <name>isIncludeFwdURL</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                whether to include the special "fllw" input field (See ParamId.FOLLOWUP_URL) in the submit request
                automatically. This attribute is provided for convenience, to facilitate passing the value
                of the FOLLOWUP_URL parameter to the submit page. The page then can extract this value and
                transition into that page. The default is false.
            </description>
        </attribute>
        <attribute>
            <name>initialDisabled</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String[]</type>
            <description>
                array of parameter (element) names for input fields that should be initially disabled.
                These are generally input fields that are enabled/disabled based on the value of a
                checkbox or radio button. default value is null, indicating no fields are initially disabled.
                It is programmers responsibility to keep in sync, the initially disabled fields, and
                the initial values of buttons/checkboxes that enable/disable those fields. Important notes:
                - THIS ELEMENT ONLY WORKS IF JAVASCRIPT IS ENABLED.
                - YOU MUST SUPPLY FORM NAME IF THIS ATTRIBUTE IS SPECIFIED
            </description>
        </attribute>
        <attribute>
            <name>enctype</name>
            <required>no</required>
            <type>boolean</type>
            <description>
                When enctype is true the following line is added to the form tag "enctype='multipart/form-data'".
                This is required when the form contains an input of type=file. This will then instruct
                the browser to upload the contents of the file rather than just the filename.
                This attribute is required for pages using the file input element. On the server
                side you will also need to use the com.bea.alsb.console.oam.core.MultipartRequest object rather
                than simply the HttpServletRequest.
            </description>
        </attribute>
    </tag>


    <tag>
        <name>simple-table</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.table.SimpleTableTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                id for this table unique within the page. This is an optional attribute. However
                you are encouraged to have ids for tables if they will be more than one table
                in a page. simple ids, such as "1", "a", "Z" are perfectly ok, as long as two
                page in the *same* page do not share the same id. If there is one table in a page
                you need not specify this attribute.
            </description>
        </attribute>
        <attribute>
            <name>collection</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                The list that will supply the rows. Either this or array attribute must be supplied.
            </description>
        </attribute>
        <attribute>
            <name>array</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The array that will supply the rows. Either this or list attribute must be supplied.
            </description>
        </attribute>
        <attribute>
            <name>maxrows</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                This specifies the maximum number of rows in a table to display before
                pagination occurs. Default is 20 rows.
            </description>
        </attribute>
        <attribute>
            <name>nullOrEmptyString</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The string value to be displayed if the column value is null or empty collection.
                If one is not supplied, then the header for all the sub-columns will be
                printed, but no rows will be printed.
            </description>
        </attribute>
        <attribute>
            <name>isCompact</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                if true, no column lines will be displayed. The table will look simpler and more compact.
                Also it will not expand to fill the width of the screen. Default is false.
            </description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the width of the table.
            </description>
        </attribute>
    </tag>


    <tag>
        <name>simple-column</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.table.SimpleColumnTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>attribute</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the attribute that will be displayed by this column.
                This attribute name is used to derive the name of the getter method
                if one is not provided by the "getter" attribute. attribute is also
                used as the column header if one is not provided by the "header"
                attribute. If "linkURL" attribute is present and "linkAttribute"
                attribute is not present, the "attribute" is used in place of "linkAttribute".
            </description>
        </attribute>
        <attribute>
            <name>header</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The column header to be displayed
            </description>
        </attribute>
        <attribute>
            <name>constantValue</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                provides a constant value for the column.
            </description>
        </attribute>
        <attribute>
            <name>delegate</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.oam.taglibs.table.SimpleTableColumn$Delegate</type>
            <description>
                when present, indicates an object that will supply the value for the column,
                instead of the row object.
            </description>
        </attribute>
        <attribute>
            <name>getter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The getter method to be invoked on the row object to obtain the value of
                the column. If "getter" attribute is not specified the getter method is
                computed by first making the first letter of the attribute upper-case and
                then prepending it with the word "get". For example, the getter for
                the "logLevel" attribute would be "getLogLevel". The boolean attributes
                whose names start with "is..." are treated in the same way. So the getter
                for "isSuspended" attribute would be "getIsSuspended" unless a getter
                is expicitly specified.
            </description>
        </attribute>
        <attribute>
            <name>nullOrEmptyString</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The string value to be displayed if the column value is null or empty collection.
                If one is not supplied, the following will be written: If the column value is
                null, then &lt;null&gt; will be displayed. If the column value is an empty string
                nothing will be displayed.
            </description>
        </attribute>
        <attribute>
            <name>linkURL</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                This attribute is used to specify the base URL, when this column is linkified,
                so that it could be clicked on.  The full URL is computed by appending either
                the "?[a]=[val]" or "&amp;[a]=[val] depending
                on whether the base URL has other parameters as well. [a] is found as follows:
                if "parameter" attribute is present the value of that attribute is used
                as the parameter name. Otherwise, the value of "attribute" attribute is
                used. [val] represents the value of the parameter. It is found as follows:
                if the "parameterValueMethod" attribute is present, its value indicates a
                method on the row object, and is called to obtain the parameter value. If
                "parameterValueMethod" is not present the value is the same as the column
                value. In any case the parameter value is transformed by using the
                "java.net.URLEncoder.encode(val, "UTF-8")" method to encode spaces and other
                special characters correctly.
            </description>
        </attribute>
        <attribute>
            <name>parameter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                name of the parameter to be used if this column is linkified.
            </description>
        </attribute>
        <attribute>
            <name>parameterValueMethod</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                name of the method (of the rowobject) to be called to obtain the
                parameter value.
            </description>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                the maximum width of the column in number of characters. if the column contents
                is an array or a collection, the size applies to individual elements.
            </description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                the maximum width of the column in number of pixels. Used as in "width='100'".
                Provides a constant width for a cell for cases like checkboxes.
            </description>
        </attribute>
        <attribute>
            <name>sorting</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Specifies whether the column is sortable, and what the default sorting is.
                the value can be one of the following:
                        - na    (this column is not sortable)
                        - asc   (this column is sortable, default ordering is ascending)
                        - desc  (this column is sortable, default ordering is descending)
                The default is "na", i.e. the column is assumed to be non-sortable.

                This attribute effectively causes the header to be linkified, which will sort
                this column when clicked. The sorting order toggles between ascending and descending
                each time it is clicked.

                The actual sorting logic is done by the table that owns this column. This
                attribute only declares that a column is sortable.

                Columns that delegate cannot be sorted. Their sort attribute will be ignored.

                When the table is initially displayed, the first column that has sorting enabled
                will determine the initial sorting order of the rows.
            </description>
        </attribute>
        <attribute>
            <name>sortValueGetter</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the name of the method that will supply the value which the sorting of this column
                will be based on. If this attribute is not specified the default (column) value
                will be used (i.e., as returned by the value getter). THis attribute makes sense
                only if this column is sortable.
            </description>
        </attribute>
        <attribute>
            <name>noRepeat</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Indicates whether the contents for this column should be displayed if the same column in the previous
                row has the same value. For instance if a row has the values ("value_col1", "value_col2") and the next
                row has values ("value_col1", "value_col2_different") and if noRepeat is set to true, the "value_col1"
                for the second row will not be displayed, and it will be empty. Default is false. i.e., the values
                will be displayed even if they are repeated. The first row in a page will always have its value displayed
                regardless of the values of the previous row (which happen to be in the previous page).
                Notice that this attribute only affects the html generated by the table. It does not affect the actual
                attribute value that is returned, or the sorting value.
            </description>
        </attribute>
        <attribute>
            <name>align</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                horizontal alignment. The valid values are left/center/right, case insensitive.
                The default is left.
            </description>
        </attribute>
        <attribute>
            <name>valign</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                vertical alignment. The valid values are top/center/bottom, case insensitive. The default
                is top.
            </description>
        </attribute>


    </tag>


    <tag>
        <name>link</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.Link</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>href</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.oam.support.HRef</type>
            <description>
                The Href object which will be used to construct the link
            </description>
        </attribute>
        <attribute>
            <name>hrefs</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.List</type>
            <description>
                A collection of HRef objects
            </description>
        </attribute>
        <attribute>
            <name>numCols</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                Relevant only if 'hrefs' attribute is defined. When greater than 0 the
                links will be displayed in a grid. describes the number of columns of the grid.
                default is 1. i.e, not grid.
            </description>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                max number of characters of text to display. If the text is longer than this size
                ellipses (...) are appended. a value less than or equal to 0 indicates no limit.
                Default is 256
            </description>
        </attribute>
    </tag>

    <tag>
        <name>element</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.Element</tag-class>
        <body-content>JSP</body-content>
        <description>
            Element of a form. Complements work done by Tolga.
            NOTE:
                The html generated for these element tags are encapsulated in a single
                table cell, that is between an opening TD and closing TD. This allows for
                a little more flexibility in organizing the input elements.
        </description>

        <attribute>
            <name>type</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Type specifies the element or input type. Currently the following
                types are supported -   null,
                                        newrow,
                                        textbox,
                                        file,
                                        label,
                                        include,
                                        includetable,
                                        button,
                                        submit,
                                        reset,
                                        cancel,
                                        menu,
                                        multiline,
                                        checkbox,
                                        password,
                                        link,
                                        info,
                                        error,
                                        banner,
                                        radiolist,
                                        checklist,
                                        info,
                                        submitarray
                                        embedded,
                                        menuchanger,
                                        scheduler,
                                        tasklist,
                                        links
                                        icon.
            </description>
        </attribute>
        <attribute>
            <name>noencode</name>
            <required>false</required>
            <rtexprvalue>false</rtexprvalue>
            <type>boolean</type>
        </attribute>

        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The id of the elements. Is actually required for most of the elements
                with the following exceptions: label, null, newrow. No default.
            </description>
        </attribute>

        <attribute>
            <name>commandId</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.oam.support.CommandId</type>
            <description>
                Used only with button types. This is the commandId which gets executed
                when the button is clicked. Allows us to know ahead of time whether the
                user has appropriate permissions or not for it.
            </description>
        </attribute>

        <attribute>
            <name>message</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Used in conjunction with the tasklist element type. The tasklist type is comprised
                of a label, a menu of commands and an execute button. It is intended that it should
                only be used to execute commands on a table. So the user selects one or more rows
                from a table (via checkboxes) and selects a command from the list and executes it.
                The message attribute specifies the JavaScript warning message when the user has not
                selected a row.
            </description>
        </attribute>

        <attribute>
            <name>bold</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Really only for label types. Specifies if the label should be rendered in bold text.
            </description>
        </attribute>

        <attribute>
            <name>value</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                This is what gets returned to the server when the form is submitted. Can also
                be used to specify the default value for the element when it is first rendered.
                Used only for the following types: textbox, checkbox, button, submit.
            </description>
        </attribute>

        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
        </attribute>

        <attribute>
            <name>class</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Currently used only with when the tag type is "include". Allows a way to
                specify the class with either horizontal padding only or both.
            </description>
        </attribute>

        <attribute>
            <name>list</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                A java.util.Collection of objects. The usage of this attribute is somewhat overloaded.
                It is used to provide a list of values, or name/value pairs.
                Depending on the type of the element the usage and semantics are different.
                This attribute is only used for the following types: list, menu, radio. No defaults

                ==== For Radio element type :
                each element in the collection is a pair of values (ie., instance of support.Pair class).
                Each radio element has three main properties, name, value, and the text.
                Radio elements share the same name. Each pair represents a value and the corresponding text.

                === For checkbox element type:
                each element in the collection is a pair of values (ie, instance of support.Pair class).
                The firs element of the pair determines the value of the checkbox and the second determines
                the text value that is displayed near the box.

                === For Menu element type:
                each element in the collection is a name value pair (i.e., instance of support.NameValue class)
                The name is the string which appears on the UI and the value is what gets returned to
                the server in the event that that option is selected.

                === For submitarray element type:
                each element in the collection is a string
                The value of each submit button is obtained from these strings.

            </description>
        </attribute>

        <attribute>
            <name>checkedValues</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.List</type>
            <description>
                Values that should be checked by default in a radio button or check list. This value must be one of the
                values supplied with the list attribute

            </description>
        </attribute>

        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                similar to the colspan attribute in HTML and an addition to the null type element
                this allows the element to span multiple columns. Default is 1.
            </description>
        </attribute>

        <attribute>
            <name>maxlength</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                Used with textboxes to specify the maximum length of the input field.
            </description>
        </attribute>

        <attribute>
            <name>valign</name>
            <required>no</required>
            <type>java.lang.String</type>
            <description>
                determines the vertical alignment of the element within a TD cell.
                Permitted values are: top, middle, bottom. Default is middle.
            </description>
        </attribute>

        <attribute>
            <name>align</name>
            <required>no</required>
            <type>java.lang.String</type>
            <description>
                the horizontal alignment of elements within the table cell. Permitted
                values are left, right or center. Default is left.
            </description>
        </attribute>

        <attribute>
            <name>validator</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.oam.support.ValidationResult</type>
        </attribute>

        <attribute>
            <name>cols</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                Used in the multiline element. Replaces size.
            </description>
        </attribute>

        <attribute>
            <name>url</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                A url.
            </description>
        </attribute>

        <attribute>
            <name>menus</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description></description>
        </attribute>

        <attribute>
            <name>selectedmenu</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description></description>
        </attribute>

        <attribute>
            <name>rows</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                Used for the multiline element. Specifies the number of rows for the textarea.
            </description>
        </attribute>

        <attribute>
            <name>hidden</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Used with type="label". Can include an input of type hidden with the label.
            </description>
        </attribute>

        <attribute>
            <name>disabled</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Used with type="textbox". Can include an input of type disabled with the label.
            </description>
        </attribute>

        <attribute>
            <name>onClick</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The exact text that goes into onClick attribute of a submit button. If the element type
                is a single submit button then the value must be a java.lang.String. If the element type
                is submitarray then the value must be a List and each member must be a String, one for
                each button.
            </description>
        </attribute>

        <attribute>
            <name>event</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The event attribute handles all select element events like onchange, onblur, onfocus, etc.
                The format is like event="onchange='return myfunction(abc)'".
            </description>
        </attribute>

        <attribute>
            <name>childmenu</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description></description>
        </attribute>

        <attribute>
            <name>wrap</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Describes the text wrapping strategy for elements of type label. valid values are
                - yes|true: indicates wrapping is enabled. However if the text does not have any spaces
                    it will not be wrapped.
                - no|false: indicates wrapping is disabled. The text will not be wrapped even if it has spaces.
                - force|forced: forces wrapping of long text without spaces, by injecting zero-width spaces into the text.

                the default is no (do not wrap)
            </description>
        </attribute>

        <attribute>
            <name>newRow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Describes the element that it should be have an new row in the cell column
                - true: default value - indicates that new row is always inserted.
                - false: indicates the element would be aligned on the same row.
                the default is true (always on new row)
            </description>
        </attribute>

    </tag>


    <tag>
        <name>chooser-tag</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.ChooserTag</tag-class>
        <body-content>empty</body-content>
        <description>
            Implements a chooser element. A chooser contains two non-pulldown menus,
            one (the one on the left) containing a list of non-selected elements, and
            the other containing a list of selected elements. I.e., the potential values
            and the current (selected) values. The user can mark an
            element in either window and move it to the other one by using two arrows
            (left and right). This effectively selects or unselects elements. This element
            must be placed inside a form and should have a name. When the form is submitted
            the contents of the menu on the right are marshalled and sent as the value of the
            parameter. The marshalling simply appends all the values in the menu with a newline
            in between. The new line is composed of two characters : CR and LF. Use Utils class
            to extract the values properly.
        </description>
        <attribute>
            <name>leftCollection</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                initial contents of the menu on the left.
            </description>
        </attribute>
        <attribute>
            <name>rightCollection</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                initial contents of the menu on the right.
            </description>
        </attribute>
        <attribute>
            <name>formName</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the form.
            </description>
        </attribute>
        <attribute>
            <name>leftLabel</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the label on top of the menu on the left. Can be null
            </description>
        </attribute>
        <attribute>
            <name>rightLabel</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the label on top of the menu on the right. Can be null.
            </description>
        </attribute>
        <attribute>
            <name>name</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the name of this element. This will be used as the parameter name.
            </description>
        </attribute>
        <attribute>
            <name>isSorted</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                whether the elements in the menus are sorted. The default is true, i.e., sorted.
            </description>
        </attribute>
        <attribute>
            <name>isTableElement</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                indicates whether this entity is a part of the table and therefore should be surrounded with
                &lt;td&gt; and &lt;/td&gt; elements. The default is false, i.e., not surround this entity
                with those tags.
            </description>
        </attribute>
        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                The size of the menus. The default is 10.
            </description>
        </attribute>
    </tag>


    <tag>
        <name>input-radioelement</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.InputRadioElementTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the parameter name for this radio button.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the parameter value that will be submitted if this button is selected.
            </description>
        </attribute>
        <attribute>
            <name>text</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The text that will be displayed to the right of the radio button.
            </description>
        </attribute>
        <attribute>
            <name>checked</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Whether this radio button is checked. The default is false.
            </description>
        </attribute>
        <attribute>
            <name>onclick</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the contents of the 'onclick' attribute. This could be a call to javascript
            </description>
        </attribute>
    </tag>



    <tag>
        <name>input-checkbox</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.InputCheckboxTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the parameter name for this radio button.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the parameter value that will be submitted if this button is selected.
            </description>
        </attribute>
        <attribute>
            <name>text</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The text that will be displayed to the right of the radio button.
            </description>
        </attribute>
        <attribute>
            <name>checked</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Whether this radio button is checked. The default is false.
            </description>
        </attribute>
        <attribute>
            <name>onclick</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the contents of the 'onclick' attribute. This could be a call to javascript
            </description>
        </attribute>
    </tag>


    <tag>
        <name>input-duration</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.InputDurationTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>type</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                1- indicates simple duration input with one text box for the duration magnitude
                   and a pulldown menu containing time units (msecs, secs etc)
                2- indicates duration input with multiple input boxes/pulldown menus for each time unit.
            </description>
        </attribute>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the name of the input parameter to be used when the form is submitted
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.oam.support.Duration</type>
            <description>
                the duration value.
            </description>
        </attribute>
        <attribute>
            <name>minTimeUnit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                The minimum time unit allowed (e.g., msecs, secs, hours). The valid values are
                com.bea.alsb.console.oam.support.Duration.{MSECS|SECS|MINS|HOURS|DAYS}. The default is MSECS
            </description>
        </attribute>
        <attribute>
            <name>maxTimeUnit</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                The maximum time unit allowed (e.g., msecs, secs, hours). The valid values are
                com.bea.alsb.console.oam.support.Duration.{MSECS|SECS|MINS|HOURS|DAYS}. The default is DAYS
            </description>
        </attribute>
        <attribute>
            <name>secEvent</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Allows the association of a JavaScript event handler with the seconds drop-down menu.
                Ultimately will need this for all menus.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>input-timeofday</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.InputTimeOfDayTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>type</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                See com.bea.alsb.console.oam.taglibs.form.InputTimeOfDayTag.TYPE_XXX constants for valid values
            </description>
        </attribute>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the input parameter that will be used when the form is submitted.
                The same parameter name can be used with the input-dayofyear tag, if these two tags
                are used together. This is possible since the parameter name is modified with suffixes.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Date</type>
            <description>
                The time of day. Year, mont, and day components are ignored.
            </description>
        </attribute>
        <attribute>
            <name>minuteIncr</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                minute increment to be used when enumerating minutes in the pulldown menus. Default is 1.
                This value must be a positive divisor of 60, otherwise it will default to 1.
                If the increment value is less than 15 then the value of type attribute will default to 1,
                in order to avoid having too long a list of combined hours and minutes. A value of 60
                disables the minute input.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>input-dayofyear</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.InputDayOfYearTag</tag-class>
        <body-content>empty</body-content>
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the input parameter that will be used when the form is submitted.
                The same parameter name can be used with the input-timeofday tag, if these two tags
                are used together. This is possible since the parameter name is modified with suffixes.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Date</type>
            <description>
                The initial value. Hours, minutes, seconds, and msecs are ignored.
            </description>
        </attribute>
        <attribute>
            <name>numYears</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                The max number of years to display in the pulldown menu for the year input, starting from the year
                component of the value attribute.
                A value of 0 or less causes a textbox to be displayed instead of pulldown menu, so that any
                year can be entered.
                default is 0, causing a textbox to be displayed
            </description>
        </attribute>
    </tag>

    <tag>
        <name>move-option-updown</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.MoveOptionsTag</tag-class>
        <body-content>empty</body-content>
        <description>
            Implements a chooser element. A chooser contains two non-pulldown menus,
            one (the one on the left) containing a list of non-selected elements, and
            the other containing a list of selected elements. I.e., the potential values
            and the current (selected) values. The user can mark an
            element in either window and move it to the other one by using two arrows
            (left and right). This effectively selects or unselects elements. This element
            must be placed inside a form and should have a name. When the form is submitted
            the contents of the menu on the right are marshalled and sent as the value of the
            parameter. The marshalling simply appends all the values in the menu with a newline
            in between. The new line is composed of two characters : CR and LF. Use Utils class
            to extract the values properly.
        </description>
        <attribute>
            <name>leftCollection</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                initial contents of the menu on the left.
            </description>
        </attribute>
        <attribute>
            <name>formName</name>
            <required>true</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the name of the form.
            </description>
        </attribute>
        <attribute>
            <name>leftLabel</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the label on top of the menu on the left. Can be null
            </description>
        </attribute>
        <attribute>
            <name>name</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the name of this element. This will be used as the parameter name.
            </description>
        </attribute>
        <attribute>
            <name>isSorted</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                whether the elements in the menus are sorted. The default is true, i.e., sorted.
            </description>
        </attribute>
        <attribute>
            <name>isTableElement</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                indicates whether this entity is a part of the table and therefore should be surrounded with
                &lt;td&gt; and &lt;/td&gt; elements. The default is false, i.e., not surround this entity
                with those tags.
            </description>
        </attribute>
        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                The size of the menus. The default is 10.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>simple-spacer</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.form.SimpleSpacer</tag-class>
        <body-content>JSP</body-content>
        <description>
            Provides a simple spacer between consecutive forms. So this should not
            be used within a form (unless you know how to organize the HTML correctly.
        </description>
    </tag>

    <tag>
        <name>banner</name>
        <tag-class>com.bea.alsb.console.oam.taglibs.framework.Banner</tag-class>
        <body-content>JSP</body-content>
        <description>Simple banner type tag to help with the visual separation of complex screens</description>
        <attribute>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.messages.Text</type>
            <description></description>
        </attribute>
        <attribute>
            <name>description</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.messages.Text</type>
            <description>Optional string to present after banner is displayed</description>
        </attribute>
    </tag>

</taglib>

