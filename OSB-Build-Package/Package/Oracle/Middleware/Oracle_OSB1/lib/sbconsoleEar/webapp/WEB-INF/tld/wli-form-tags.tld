<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN" "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">

<taglib>
    <tlib-version>1.0</tlib-version>
    <jsp-version>1.2</jsp-version>
    <short-name>form</short-name>
    <uri>wli-form-tags</uri>
    <display-name>WLI Form Tags</display-name>
    <description>
        Tags used by the WLI and Service Bus management consoles.
    </description>

    <!--
        <form:action-button label="" action="" title=""
                           disabled=""
                           leftImage="" rightImage="" />
    -->
    <tag>
        <name>action-button</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.ActionButton</tag-class>
        <body-content>empty</body-content>
        <description>
            Button used to perform actions that are not linked to a form.
        </description>
        <attribute>
            <name>label</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Text displayed by the button.
            </description>
        </attribute>
        <attribute>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Tool-tip title displayed by the button.
            </description>
        </attribute>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Parameter name of the button, optional.
            </description>
        </attribute>
        <attribute>
            <name>action</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The action to execute. The action can be an HRef, commandId or String object.
                The string can be a url or a javascript call.
            </description>
        </attribute>
      <attribute>
          <name>actionURL</name>
          <required>false</required>
          <rtexprvalue>true</rtexprvalue>
          <type>java.lang.String</type>
          <description>
              The action to execute. The action can be an HRef, commandId or String object.
              The string can be a url or a javascript call.
          </description>
      </attribute>
        <attribute>
            <name>command</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The commandId to execute. 
            </description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Allow disabling this button.
            </description>
        </attribute>
        <attribute>
            <name>leftImage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                String or Icon of the image to display on the left of the value.
            </description>
        </attribute>
        <attribute>
            <name>rightImage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                String or Icon of the image to display on the right of the value.
            </description>
        </attribute>
        <attribute>
            <name>buttonOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                If true, renders only button. Default value is false
            </description>
        </attribute>
         <attribute>
            <name>buttonWidth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                specify the button width in px; if not specified, style class width will be applied.
            </description>
        </attribute>
    </tag>

    <!--
        <form:submit-button form="" label="" name="" value="" title=""
                           disabled=""
                           leftImage="" rightImage="" />
    -->
    <tag>
        <name>submit-button</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SubmitButton</tag-class>
        <body-content>empty</body-content>
        <description>
            Button used to submit a form.
        </description>
        <attribute>
            <name>form</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Name of the form to submit.
            </description>
        </attribute>
        <attribute>
            <name>command</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Command to associate with the submit-button.
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Text displayed by the button.
            </description>
        </attribute>
        <attribute>
            <name>title</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Tool-tip title displayed by the button.
            </description>
        </attribute>                
        <attribute>
            <name>name</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Parameter name of the button.
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Value for the submit action. If not specified, the name will be used.
            </description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Allow disabling this button.
            </description>
        </attribute>
        <attribute>
            <name>leftImage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                String or Icon of the image to display on the left of the value.
            </description>
        </attribute>
        <attribute>
            <name>rightImage</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                String or Icon of the image to display on the right of the value.
            </description>
        </attribute>
        <attribute>
            <name>waitwindowurl</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Url of the wait window.
            </description>
        </attribute>
        <attribute>
            <name>buttonOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                If true, renders only button. Default value is false
            </description>
        </attribute>
        <attribute>
            <name>buttonWidth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                specify the button width in px; if not specified, style class width will be applied.
            </description>
        </attribute>
    </tag>


    <!--
        <form:form-table validator="" required="" style=""/>
    -->
    <tag>
        <name>form-table</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.FormTable</tag-class>
        <body-content>JSP</body-content>
        <description>
            Table used to display form like configurations. This tag accepts only
            child tags extending the DefaultFormRow class.
            Each row correspond to a field of the form.
        </description>
        <attribute>
            <name>required</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Indicates to display or not the "required" description on the
                top of the table.
            </description>
        </attribute>
        <attribute>
            <name>validator</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.support.ValidationResult</type>
            <description>
                ValidationResult for the rows.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default style.
            </description>
        </attribute>
    </tag>

    <!--
        <form:form-row name="" colspan=""/>
    -->
    <tag>
        <name>form-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.DefaultFormRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            This row is a generic row, it can contains only form-cell child elements.
        </description>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the form field.
            </description>
        </attribute>
        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                Expected colspan for this row. The default is 3.
            </description>
        </attribute>
    </tag>

    <!--
        <form:simple-form-row  name="" label="" required="" description="" styleRow="" styleLabel="" labelOnly=""/>
    -->
    <tag>
        <name>simple-form-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleFormRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            A sinple-form-row is a 3 columns row. The first column displays the field label.
            The second column is used for vertical separator line.
            The third column is used for the field input definition.
            The body of this tag corresponds to the second column and is defined between &lt;tr>&lt;/tr>.
        </description>
        <attribute>
            <name>name</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the form row.
                This name is used to associate an error message with the row in the form-table validator.
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Name of the form field.
            </description>
        </attribute>
        <attribute>
            <name>labelwidth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The width of the label cell. Default is 20%.
            </description>
        </attribute>
        <attribute>
            <name>required</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Whether or not this field is required.
            </description>
        </attribute>
        <attribute>
            <name>requiredId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Either a String for required field
            </description>
        </attribute>
        <attribute>
            <name>showRequired</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                If it is a required field, we can choose to show or hide astarisk indicator
            </description>
        </attribute>
        <attribute>
            <name>description</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Either a String or a BaseText object. Description of the form field.
            </description>
        </attribute>
        <attribute>
            <name>styleRow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default row style.
            </description>
        </attribute>

        <attribute>
            <name>styleLabel</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default label style.
            </description>
        </attribute>
        <attribute>
            <name>labelOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                A value of true specifies that only the label cell is provided.
                By default two table cells are provided for both the label and an associated data cell.
                This is typically used for explicit tabular cell control using form-cell tags.
            </description>
        </attribute>
        <attribute>
            <name>wrap</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Whether the field value can wrap. default is FALSE
            </description>
        </attribute>
        <attribute>
            <name>verticalSeparator</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                By default vertical separator is allowed, if specified as "false" vertical separator will not be shown
            </description>
        </attribute>
        <attribute>
            <name>formRowLabelInfoTip</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.taglibs.form.IFormRowLabelInfoTip</type>
            <description>
                This attribute is used to show info tool tip next to label. By default, no info tooltip is shown.
                Implement this interface to show InfoToolTip.
            </description>
        </attribute>
    </tag>

    <!--
        <form:simple-form-button-row />
    -->
    <tag>
        <name>simple-form-button-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleFormButtonRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            The SimpleFormButtonRow is simply a row whose contents are rendered by the
            body-content JSP.
        </description>
        <attribute>
            <name>styleClass</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The style class to apply to this button row. Usually this class will define
                the top and/or bottom border for the table cell
            </description>
        </attribute>
    </tag>
    <!--
        <form:form-table-group id="" title="" help="" expand="" style="" icon="" />
    -->
    <tag>
        <name>form-table-group</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.FormTableGroup</tag-class>
        <body-content>JSP</body-content>
        <description>
            This tag is used with the form-table to partition the table into a group of rows.
            Each group can have its own banner title and its following rows can be expanded or collapsed.
            This tag is used in conjunction with javascript to dynamically expand/collapse the group.
            The generated HTML fires an event callback to a toggleGroup()function when the icon is clicked.
        </description>
        <attribute>
            <name>id</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The id is used to identify this group so that it can be expanded or collapsed dynamically
                from javascript.  The id is used as a prefix for three different node identifiers:
                &lt;ol&gt;
                &lt;li&gt;id.banner - the cell with a style class name for the banner.
                &lt;li&gt;id.img - the icon image in the banner.
                &lt;li&gt;id.content - the cell containing the set of rows in the group to be displayed or hidden.
                &lt;/ol&gt;
            </description>
        </attribute>
        <attribute>
            <name>title</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Banner text to appear as the title of this group.
                Either a String or BaseText object.
            </description>
        </attribute>
        <attribute>
            <name>help</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Help tooltip text for the banner when mousing over the title.
                Either a String or BaseText object.
            </description>
        </attribute>
        <attribute>
            <name>expand</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Indicates whether to expand the group or to hide it when initially displayed.
                Defaults to true.
            </description>
        </attribute>
        <attribute>
            <name>style</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The class name of the style to be applied to the initial display of the group banner.
            </description>
        </attribute>
        <attribute>
            <name>icon</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                String or Icon of the image to display on the group banner.
            </description>
        </attribute>
        <attribute>
            <name>firstGroup</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Specifies the row is at the very top. In that case, we need top_border for the group header row. Default is FALSE
            </description>
        </attribute>
        <attribute>
            <name>toggleScripts</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The toggle scripts for toggle icon
            </description>
        </attribute>
    </tag>

    <!--
        <form:form-cell colspan=""/>
    -->
    <tag>
        <name>form-cell</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.DefaultFormCell</tag-class>
        <body-content>JSP</body-content>
        <description>
            Corresponds to a column cell.
        </description>
        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                number of column span by this row cell.
            </description>
        </attribute>
    </tag>


    <!--
        <form:simple-table headers="" width="" styleTable="" styleHeader="" styleRow=""/>
    -->
    <tag>
        <name>simple-table</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleTable</tag-class>
        <body-content>JSP</body-content>
        <description>
            Simple table layout.
            Should contain only simple-table-row tags.
        </description>
        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Integer</type>
            <description>
                The colspan for the parent containing cell. Default is 1.
            </description>
        </attribute>
        <attribute>
            <name>headers</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object[]</type>
            <description>
                The table header names. Either String or BaseText.
            </description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The width of the table as it will appear in the html.
            </description>
        </attribute>
        <attribute>
            <name>styleTable</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default table style.
            </description>
        </attribute>
        <attribute>
            <name>styleHeader</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default header style.
            </description>
        </attribute>
        <attribute>
            <name>styleRow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Optional style class that overrides the default row style.
            </description>
        </attribute>
        <attribute>
            <name>allowDefatultTableWidth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Optional attribute that controls table width, by default its true, if false, no widht specified.
            </description>
        </attribute>
    </tag>

    <!--
        <form:simple-table-row/>
    -->
    <tag>
        <name>simple-table-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleTableRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            Tag delimiting a row.
            Should contain only simple-table-cell child elements.
        </description>
    </tag>

    <!--
        <form:simple-table-cell colspan=""/>
    -->
    <tag>
        <name>simple-table-cell</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleTableCell</tag-class>
        <body-content>JSP</body-content>
        <description>
            Corresponds to an individual column cell.
        </description>
        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                number of columns span by this row cell.
            </description>
        </attribute>
        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The width of the cell as it will appear in the html.
            </description>
        </attribute>
        <attribute>
            <name>rowspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                The number of rows spanned by this table cell.
            </description>
        </attribute>
    </tag>

    <!--
    <form:simple-form title="" action="" name="" method="" buttonLabel="" width=""
        closeonsubmit="" align="" onSubmit="" isIncludeFwdURL="" initialDisabled=""
        enctype="" />
    -->
    <tag>
        <name>simple-form</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SimpleFormTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>title</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>action</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
        </attribute>
      <attribute>
          <name>actionURL</name>
          <required>no</required>
          <rtexprvalue>true</rtexprvalue>
          <type>java.lang.String</type>
      </attribute>
        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>method</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonLabel</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>closeonsubmit</name>
            <required>no</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>align</name>
            <required>no</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onSubmit</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The exact that goes into the onSubmit attribute of the &lt;form&gt; element
            </description>
        </attribute>
        <attribute>
            <name>isIncludeFwdURL</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                whether to include the special "fllw" input field (See ParamId.FOLLOWUP_URL) in the submit request
                automatically. This attribute is provided for convenience, to facilitate passing the value
                of the FOLLOWUP_URL parameter to the submit page. The page then can extract this value and
                transition into that page. The default is false.
            </description>
        </attribute>
        <attribute>
            <name>initialDisabled</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String[]</type>
            <description>
                array of parameter (element) names for input fields that should be initially disabled.
                These are generally input fields that are enabled/disabled based on the value of a
                checkbox or radio button. default value is null, indicating no fields are initially disabled.
                It is programmers responsibility to keep in sync, the initially disabled fields, and
                the initial values of buttons/checkboxes that enable/disable those fields. Important notes:
                - THIS ELEMENT ONLY WORKS IF JAVASCRIPT IS ENABLED.
                - YOU MUST SUPPLY FORM NAME IF THIS ATTRIBUTE IS SPECIFIED
            </description>
        </attribute>
        <attribute>
            <name>enctype</name>
            <required>no</required>
            <type>boolean</type>
            <description>
                When enctype is true the following line is added to the form tag "enctype='multipart/form-data'".
                This is required when the form contains an input of type=file. This will then instruct
                the browser to upload the contents of the file rather than just the filename.
                This attribute is required for pages using the file input element. On the server
                side you will also need to use the console.core.MultipartRequest object rather
                than simply the HttpServletRequest.
            </description>
        </attribute>
        <attribute>
            <name>initialFocus</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Sets focus to the given html control
            </description>
        </attribute>
        <attribute>
            <name>cellStyle</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the CSS style class to be applied to the outermost cell.
            </description>
        </attribute>
        <attribute>
            <name>token</name>
            <required>no</required>
            <type>boolean</type>
            <description>
                When token is true a secret key is generated and added as a hidden field in the form.
                This is used to prevent CSRF attacks.
                The corresponding action class that processes the form should verify that a valid token is received,
                otherwise it should reject the request.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>summary-table-form</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.SummaryTableFormTag</tag-class>
        <body-content>JSP</body-content>
        <attribute>
            <name>action</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
        </attribute>
        <attribute>
            <name>actionURL</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
        <name>method</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Sets style class for table cell
            </description>
        </attribute>
        <attribute>
            <name>initialFocus</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Sets focus to the given html control
            </description>
        </attribute>
        <attribute>
            <name>summaryTitle</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
               Title for summay attribute for the table
            </description>
        </attribute>
        <attribute>
            <name>form</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
               if false, form attribute will not be included. Default value is true
            </description>
        </attribute>
        <attribute>
            <name>formOnly</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
               if TRUE, only the bare HTML FORM tag will be rendered.. Default value is FALSE
            </description>
        </attribute>
        <attribute>
            <name>token</name>
            <required>no</required>
            <type>boolean</type>
            <description>
                When token is true a secret key is generated and added as a hidden field in the form.
                This is used to prevent CSRF attacks.
                The corresponding action class that processes the form should verify that a valid token is received,
                otherwise it should reject the request.
            </description>
        </attribute>        
    </tag>

    <!--
    <form:element type="" noencode="" name="" commandId="" message="" bold=""
        value="" title="" description="" size="" class="" list="" checkedValues=""
        colspan="" maxlength="" valign="" align="" validator="" cols="" url=""
        menus="" selectedmenu="" rows="" hidden="" text="" checked="" disabled=""
        onClick="" event="" childmenu="" wrap="" readonly="" icon="" newRow=""
        hspace="" width="" />
    -->
    <tag>
        <name>element</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.Element</tag-class>
        <body-content>JSP</body-content>
        <description>
            Element of a form.

            A form created using the element tag is basically a HTML table containing, usually,
            three columns.

            The first column generally displays a label specifying the name of
            the value the user is entering, eg "User Password". The first column
            will generally have an element of type "label".

            The second column usually displays the actual input element, whether a textbox,
            or menu or whatever.
            The third colum generally displays the info text. This is the blue descriptive
            text appearing on the right of the page. This column will have an element of
            type "info".

            The html generated for these element tags are encapsulated in a single
            table cell, that is between an opening TD and closing TD. This allows for
            a little more flexibility in organizing the input elements.

            Some of the types, such as "include", "includetable", "null", "newrow", "spacer"
            are formatting types which help with a pretty layout.

            Note that not all of the attributes listed here will apply to every element type.
        </description>

        <attribute>
            <name>type</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Type specifies the element or input type.
            </description>
        </attribute>
        <attribute>
            <name>noencode</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
        </attribute>

        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The id of the elements. Is actually required for most of the elements
                with the following exceptions: label, null, newrow. No default.
            </description>
        </attribute>

        <attribute>
            <name>commandId</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
            <description>
                Used only with button types. This is the commandId which gets executed
                when the button is clicked. Allows us to know ahead of time whether the
                user has appropriate permissions or not for it.
            </description>
        </attribute>

        <attribute>
            <name>message</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Used in conjunction with the tasklist element type. The tasklist type is comprised
                of a label, a menu of commands and an execute button. It is intended that it should
                only be used to execute commands on a table. So the user selects one or more rows
                from a table (via checkboxes) and selects a command from the list and executes it.
                The message attribute specifies the JavaScript warning message when the user has not
                selected a row.
            </description>
        </attribute>

        <attribute>
            <name>bold</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Really only for label types. Specifies if the label should be rendered in bold text.
            </description>
        </attribute>

        <attribute>
            <name>value</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                This is what gets returned to the server when the form is submitted. Can also
                be used to specify the default value for the element when it is first rendered.
                Used only for the following types: textbox, checkbox, button, submit.
            </description>
        </attribute>

        <attribute>
            <name>title</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
            </description>
        </attribute>

        <attribute>
            <name>description</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
            </description>
        </attribute>

        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
        </attribute>

        <attribute>
            <name>class</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Currently used only with when the tag type is "include". Allows a way to
                specify the class with either horizontal padding only or both.
            </description>
        </attribute>

        <attribute>
            <name>list</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                A java.util.Collection of objects. The usage of this attribute is somewhat overloaded.
                It is used to provide a list of values, or name/value pairs.
                Depending on the type of the element the usage and semantics are different.
                This attribute is only used for the following types: list, menu, radio. No defaults

                ==== For Radio element type :
                each element in the collection is a pair of values (ie., instance of support.Pair class).
                Each radio element has three main properties, name, value, and the text.
                Radio elements share the same name. Each pair represents a value and the corresponding text.

                === For checkbox element type:
                each element in the collection is a pair of values (ie, instance of support.Pair class).
                The firs element of the pair determines the value of the checkbox and the second determines
                the text value that is displayed near the box.

                === For Menu element type:
                each element in the collection is a name value pair (i.e., instance of support.NameValue class)
                The name is the string which appears on the UI and the value is what gets returned to
                the server in the event that that option is selected.

                === For submitarray element type:
                each element in the collection is a string
                The value of each submit button is obtained from these strings.

            </description>
        </attribute>

        <attribute>
            <name>checkedValues</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.List</type>
            <description>
                Values that should be checked by default in a radio button or check list. This value must be one of the
                values supplied with the list attribute

            </description>
        </attribute>

        <attribute>
            <name>colspan</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                similar to the colspan attribute in HTML and an addition to the null type element
                this allows the element to span multiple columns. Default is 1.
            </description>
        </attribute>

        <attribute>
            <name>maxlength</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                Used with textboxes to specify the maximum length of the input field.
            </description>
        </attribute>

        <attribute>
            <name>valign</name>
            <required>no</required>
            <type>java.lang.String</type>
            <description>
                determines the vertical alignment of the element within a TD cell.
                Permitted values are: top, middle, bottom. Default is middle.
            </description>
        </attribute>

        <attribute>
            <name>align</name>
            <required>no</required>
            <type>java.lang.String</type>
            <description>
                the horizontal alignment of elements within the table cell. Permitted
                values are left, right or center. Default is left.
            </description>
        </attribute>

        <attribute>
            <name>validator</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.common.support.ValidationResult</type>
        </attribute>

        <attribute>
            <name>cols</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                Used in the multiline element. Replaces size.
            </description>
        </attribute>

        <attribute>
            <name>url</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                A url.
            </description>
        </attribute>

        <attribute>
            <name>menus</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description></description>
        </attribute>

        <attribute>
            <name>selectedmenu</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description></description>
        </attribute>

        <attribute>
            <name>rows</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                Used for the multiline element. Specifies the number of rows for the textarea.
            </description>
        </attribute>

        <attribute>
            <name>hidden</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Used with type="label". Can include an input of type hidden with the label.
            </description>
        </attribute>

        <attribute>
            <name>text</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Currently only used with radioelement, to associate a text to the radio.
            </description>
        </attribute>

        <attribute>
            <name>checked</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Currently only used with radioelement, to control its checked status.
            </description>
        </attribute>

        <attribute>
            <name>disabled</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Used with type="textbox" and other types as well.. Can include an input of type disabled with the label.
            </description>
        </attribute>

        <attribute>
            <name>onClick</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The exact text that goes into onClick attribute of a submit button. If the element type
                is a single submit button then the value must be a java.lang.String. If the element type
                is submitarray then the value must be a List and each member must be a String, one for
                each button.
            </description>
        </attribute>

        <attribute>
            <name>event</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The event attribute handles all select element events like onchange, onblur, onfocus, etc.
                The format is like event="onchange='return myfunction(abc)'".
            </description>
        </attribute>

        <attribute>
            <name>childmenu</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description></description>
        </attribute>

        <attribute>
            <name>wrap</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Describes the text wrapping strategy for elements of type label. valid values are
                - yes|true: indicates wrapping is enabled. However if the text does not have any spaces
                    it will not be wrapped.
                - no|false: indicates wrapping is disabled. The text will not be wrapped even if it has spaces.
                - force|forced: forces wrapping of long text without spaces, by injecting zero-width spaces into the text.

                Also describes the text wrapping strategy for multiline elements:
                - soft: text is wrapped and carriage returns are not sent to the server.
                - hard: same than soft except that the carriage returns are sent to the server.
                - off: the text is not wrapped, and all carriage returns are sent to the server.

                the default is no (do not wrap)
            </description>
        </attribute>

        <attribute>
            <name>readonly</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
            </description>
        </attribute>

        <attribute>
            <name>icon</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                url of the icon. either Icon or String.
            </description>
        </attribute>

        <attribute>
            <name>imgOnly</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                If true, renders only image. Default value is false.
            </description>
        </attribute>

        <attribute>
            <name>newRow</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Describes the element that it should be have an new row in the cell column
                - true: default value - indicates that new row is always inserted.
                - false: indicates the element would be aligned on the same row.
                the default is true (always on new row)
            </description>
        </attribute>

        <attribute>
            <name>hspace</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                amount of horizontal space to include in a new row (type="newrow").
            </description>
        </attribute>

        <attribute>
            <name>width</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                the width as writen in the HTML (e.g. width="100%").
                used only for type=include
            </description>
        </attribute>

        <attribute>
            <name>tdClass</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                used only for type=submit and include. This sets the class for the td of the submit button.
            </description>
        </attribute>

        <attribute>
            <name>buttonWidth</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                buttonWidth is specific to button. Very useful when want to display wider buttons with long strings.
            </description>
        </attribute>
        <attribute>
            <name>htmlId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                used for html id element
            </description>
        </attribute>
        <attribute>
            <name>divId</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Valid only for type="label" and type="link". If this attribute is present, then the label or the link is rendered within a DIV element with attribute "id";
            </description>
        </attribute>
        <attribute>
            <name>divStyle</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Valid only for type="label". If this attribute is present, then the label is rendered within a DIV element with attribute "id" and "class";
            </description>
        </attribute>
        <attribute>
            <name>height</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Row or Cell height
            </description>
        </attribute>

        <example>
            // a label. Usually used in the first column.
            &lt;wl:element type="label"
                        value="User Password"
                        bold="true" /&gt;

            // displays the blue informative text
            &lt;wl:element type="info"
                        value="The user password." /&gt;

            &lt;wl:element type="textbox" ... /&gt;
            &lt;wl:element type="button" ... /&gt;
            &lt;wl:element type="menu" ... /&gt;
            &lt;wl:element type="checkbox" ... /&gt;
            &lt;wl:element type="submit" ... /&gt;
            &lt;wl:element type="cancel" ... /&gt;
            &lt;wl:element type="list" ... /&gt;
            &lt;wl:element type="radio" ... /&gt;
            &lt;wl:element type="radioelement" ... /&gt;
            &lt;wl:element type="header" ... /&gt;
            &lt;wl:element type="password" ... /&gt;
            &lt;wl:element type="hidden" ... /&gt;
            &lt;wl:element type="checklist" ... /&gt;
            &lt;wl:element type="banner" ... /&gt;
            &lt;wl:element type="submitarray" ... /&gt;
            &lt;wl:element type="multiline" ... /&gt;
            &lt;wl:element type="link" ... /&gt;
            &lt;wl:element type="file" ... /&gt;
            &lt;wl:element type="menuchanger" ... /&gt;
            &lt;wl:element type="reset" ... /&gt;
            &lt;wl:element type="tasklist" ... /&gt;
            &lt;wl:element type="icon" ... /&gt;
            &lt;wl:element type="error" ... /&gt;
            &lt;wl:element type="line" ... /&gt;

            //
            // formatting or layout helper types
            //

            // use if you want to embed a table in the layout
            &lt;wl:element type="includetable"&gt;
                a table tag
            &lt;/wl:element&gt;

            // use if you want to embed additional elements in a single table cell
            &lt;wl:element type="include"&gt;
                .. other element tags ...
            &lt;/wl:element&gt;

            // create a new row in the table
            &lt;wl:element type="newrow" /&gt;

            // inserts an empty row in the table
            &lt;wl:element type="spacer" /&gt;

            // inserts an empty cell in the table
            &lt;wl:element type="null" /&gt;


            //
            // Summary example
            //
            // To display a typical row in a form for a simple textbox
            // and its validation requires the following.
            //
            &lt;wl:element type="error"
                        name="&lt;%= ParamId.ELEMENT_ID %&gt;"
                        validator="&lt;%= myValidationResult %&gt;"
                        colspan="3" /&gt;

            &lt;wl:element type="label"
                        value="User Password"
                        bold="true" /&gt;

            &lt;wl:element type="textbox"
                        name="&lt;%= ParamId.ELEMENT_ID %&gt;"
                        size="40"
                        maxlength="100"
                        value="&lt;%= theCurrentValue %&gt;" /&gt;

            &lt;wl:element type="info"
                        value="The user password string." /&gt;

            &lt;wl:element type="newrow" /&gt;
        </example>
    </tag>

    <tag>
        <name>form-table-header</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.FormTableHeader</tag-class>
        <body-content>JSP</body-content>
        <description>
            Tag used to form table header action above the table tag.
        </description>

        <attribute>
            <name>name</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be String.
            </description>
        </attribute>

        <attribute>
            <name>icon</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or Icon.
            </description>
        </attribute>

        <attribute>
            <name>title</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

         <attribute>
            <name>helpText</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

        <attribute>
            <name>actionType</name>
            <required>no</required>
            <rtexprvalue>no</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText or null
            </description>
        </attribute>

        <attribute>
            <name>actionUrl</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be String
            </description>
        </attribute>

        <attribute>
            <name>actionName</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

        <attribute>
            <name>list</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                A java.util.Collection of objects. The usage of this attribute is somewhat overloaded.
                It is used to provide a list of values, or name/value pairs.
                Depending on the type of the element the usage and semantics are different.
                This attribute is only used for the following types: list, menu, radio. No defaults

                ==== For Radio element type :
                each element in the collection is a pair of values (ie., instance of support.Pair class).
                Each radio element has three main properties, name, value, and the text.
                Radio elements share the same name. Each pair represents a value and the corresponding text.

                === For checkbox element type:
                each element in the collection is a pair of values (ie, instance of support.Pair class).
                The firs element of the pair determines the value of the checkbox and the second determines
                the text value that is displayed near the box.

                === For Menu element type:
                each element in the collection is a name value pair (i.e., instance of support.NameValue class)
                The name is the string which appears on the UI and the value is what gets returned to
                the server in the event that that option is selected.

                === For submitarray element type:
                each element in the collection is a string
                The value of each submit button is obtained from these strings.

            </description>
        </attribute>

        <attribute>
            <name>event</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The event attribute handles all select element events like onchange, onblur, onfocus, etc.
                The format is like event="onchange='return myfunction(abc)'".
            </description>
        </attribute>

        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
        </attribute>

        <attribute>
            <name>commandId</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
        </attribute>
    </tag>

    <tag>
        <name>form-table-header-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.FormTableHeaderRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            Tag used to form action row below table action header.
        </description>

        <attribute>
            <name>helpText</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

        <attribute>
            <name>title</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

         <attribute>
            <name>name</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>

        <attribute>
            <name>validator</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>console.support.ValidationResult</type>
            <description>
                ValidationResult for the rows.
            </description>
        </attribute>

        <attribute>
            <name>value</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be String.
            </description>
        </attribute>

        <attribute>
            <name>submitText</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be String.
            </description>
        </attribute>

        <attribute>
            <name>commandId</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
        </attribute>

        <attribute>
            <name>buttonName</name>
            <required>no</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be String and input name for submit button
            </description>
        </attribute>

        <attribute>
            <name>actionType</name>
            <required>no</required>
            <rtexprvalue>no</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText or null
            </description>
        </attribute>

        <attribute>
            <name>list</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                A java.util.Collection of objects. The usage of this attribute is somewhat overloaded.
                It is used to provide a list of values, or name/value pairs.
                Depending on the type of the element the usage and semantics are different.
                This attribute is only used for the following types: list, menu, radio. No defaults

                ==== For Radio element type :
                each element in the collection is a pair of values (ie., instance of support.Pair class).
                Each radio element has three main properties, name, value, and the text.
                Radio elements share the same name. Each pair represents a value and the corresponding text.

                === For checkbox element type:
                each element in the collection is a pair of values (ie, instance of support.Pair class).
                The firs element of the pair determines the value of the checkbox and the second determines
                the text value that is displayed near the box.

                === For Menu element type:
                each element in the collection is a name value pair (i.e., instance of support.NameValue class)
                The name is the string which appears on the UI and the value is what gets returned to
                the server in the event that that option is selected.

                === For submitarray element type:
                each element in the collection is a string
                The value of each submit button is obtained from these strings.

            </description>
        </attribute>

        <attribute>
            <name>menuGroupMap</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.util.HashMap</type>
            <description>
                === For Menu element type:
                each element in the collection is a Name and List pair (i.e., instance of support.NameValue class)
                The name is the string which appears on the UI as Option Group Label
                and the value is what gets returned to the server in the event that that option is selected.
            </description>
        </attribute>

        <attribute>
            <name>event</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The event attribute handles all select element events like onchange, onblur, onfocus, etc.
                The format is like event="onchange='return myfunction(abc)'".
            </description>
        </attribute>

        <attribute>
            <name>size</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
        </attribute>

    </tag>

    <tag>
        <name>form-browser-action-buttons</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.BrowserActionButtons</tag-class>
        <body-content>JSP</body-content>
        <description>
            Tag used to render html code for action browser buttons
        </description>
        <attribute>
            <name>selectTitle</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>
        <attribute>
            <name>cancelTitle</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>
        <attribute>
            <name>disabled</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                can be either String and used to enable or disable submit button
            </description>
        </attribute>
        <attribute>
            <name>backUrlAction</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.common.support.CommandId</type>
            <description>
                Command for return url to the summary view.
            </description>
        </attribute>
        <attribute>
            <name>backUrlTitle</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                can be either String or BaseText.
            </description>
        </attribute>
        <attribute>
            <name>class</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Style class name for TD cell, if not specified default class "buttons_no_top_border" will be assigned
            </description>
        </attribute>
    </tag>

    <!--
        <form:expandable-table checkboxTitle=""/>
    -->
    <tag>
        <name>expandable-table</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.ExpandableTable</tag-class>
        <body-content>JSP</body-content>
        <description>
            Expandable Table layout.
            Should contain only expandable-table-row tags.
        </description>
        <attribute>
            <name>checkboxTitle</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Tool tip for the checkbox in each row - can be either String or BaseText.
            </description>
        </attribute>
    </tag>

    <!--
        <form:expandable-table-row id="" expandName="" expand="" checkName="" checked="" label="" />
    -->
    <tag>
        <name>expandable-table-row</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.ExpandableTableRow</tag-class>
        <body-content>JSP</body-content>
        <description>
            Expandable Table Row.
            Each row can be expanded or collapsed. Each row can also be selected with a checkbox.
            The expanded contents are similar to a form-table and can have nested simple-form-row tags.
        </description>
        <attribute>
            <name>id</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Unique id used for scripting collapse/expand events.
            </description>
        </attribute>
        <attribute>
            <name>expandName</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name used for the expand/collapse state.
            </description>
        </attribute>
        <attribute>
            <name>expand</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                Specifies if the content row is to be expanded. Default is collapsed.
            </description>
        </attribute>
        <attribute>
            <name>checkName</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name used for the checkbox.
            </description>
        </attribute>
        <attribute>
            <name>checked</name>
            <required>false</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>boolean</type>
            <description>
                True, if checkbox is checked. Default is unchecked (false).
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                Label for each row - can be either String or BaseText.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>multipleselect</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.MultipleSelect</tag-class>
        <body-content>empty</body-content>
        <description>
            Implements a chooser element. A chooser contains two non-pulldown menus,
            one (the one on the left) containing a list of non-selected elements, and
            the other containing a list of selected elements. I.e., the potential values
            and the current (selected) values. The user can mark an
            element in either window and move it to the other one by using two arrows
            (left and right). This effectively selects or unselects elements. This element
            must be placed inside a form and should have a name. When the form is submitted
            the contents of the menu on the right are marshalled and sent as the value of the
            parameter. The marshalling simply appends all the values in the menu with a newline
            in between. The new line is composed of two characters : CR and LF. Use Utils class
            to extract the values properly.
        </description>
        <attribute>
            <name>formName</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The name of the form to be used.
            </description>
        </attribute>
        <attribute>
            <name>label</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                The label to print before the input field. Can be null.
            </description>
        </attribute>
        <attribute>
            <name>paramId</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                The parameter name to use. Cannot be null
            </description>
        </attribute>
        <attribute>
            <name>info</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.lang.Object</type>
            <description>
                the information text that is displayed on the RHS of an input form. can be null
            </description>
        </attribute>
        <attribute>
            <name>leftCollection</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                initial contents of the menu on the left. The elements can be either String or Text.
            </description>
        </attribute>
        <attribute>
            <name>rightCollection</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>java.util.Collection</type>
            <description>
                initial contents of the menu on the right. The elements can be either String or Text.
            </description>
        </attribute>
        <attribute>
            <name>leftLabel</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.messages.Text</type>
            <description>
                the label on top of the menu on the left. Can be null
            </description>
        </attribute>
        <attribute>
            <name>rightLabel</name>
            <required>true</required>
            <rtexprvalue>true</rtexprvalue>
            <type>com.bea.alsb.console.common.messages.Text</type>
            <description>
                the label on top of the menu on the right. Can be null.
            </description>
        </attribute>
        <attribute>
            <name>isSorted</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                whether the elements in the menus are sorted. The default is true, i.e., sorted.
            </description>
        </attribute>
        <attribute>
            <name>isOrderable</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>boolean</type>
            <description>
                Whether the elements in the right list (the chosen list) is orderable via
                up and down arrows.
            </description>
        </attribute>
        <attribute>
            <name>size</name>
            <required>false</required>
            <rtexprvalue>true</rtexprvalue>
            <type>int</type>
            <description>
                The size of the menus. The default is 6.
            </description>
        </attribute>
    </tag>

    <tag>
        <name>date-time-input</name>
        <tag-class>com.bea.alsb.console.common.taglibs.form.InputDateTimeTag</tag-class>
        <body-content>JSP</body-content>
        <description>
            Gives Date and Time with am/pm
        </description>
        <attribute>
            <name>type</name>
            <required>yes</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>int</type>
            <description>
                Type of date fields
            </description>
        </attribute>
        <attribute>
            <name>value</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>com.bea.alsb.console.common.support.DateHelperBean</type>
            <description>
                date value to redisplay
            </description>
        </attribute>
        <attribute>
            <name>ipPrefix</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Required, if multiple dates are on the page.
            </description>
        </attribute>
        <attribute>
            <name>event</name>
            <required>no</required>
            <rtexprvalue>yes</rtexprvalue>
            <type>java.lang.String</type>
            <description>
                Handlers for events such as onchange, onclick, onfocus, onblur etc.
            </description>
        </attribute>
    </tag>

</taglib>
