#!/bin/sh -f
#++
#  emutil - Utility Script for the EM
#
#  emutil is currently used to register job types with EM
#--
#
# MODIFIED
#    rkpandey   03/16/07 - Bug 5343881 for LoP
#    lsatyapr   01/17/07 - Call emutil.pl
#    pmodi      12/12/06 - Added prompt option to eventtype registration
#    ramalhot   10/05/06 - 
#    lsatyapr   09/01/06 - Split params to emutil
#    dkjain     08/28/06 - 
#    rsidlagh   08/11/06 - Added register eventtype command option
#    lsatyapr   07/14/06 - Add el files in classpath 
#    dkjain     07/11/06 - cutting over the emutil 
#    dkjain     06/28/06 - Adding support for new parser 
#    smodh      01/20/06 - Replace classes12.jar with ojdbc14.jar 
#    rdabbott   08/23/05 - hand merge 4230566 by ashugupt 
#    ashugupt   08/10/05 - Fix 4230566 
#    rdabbott   08/18/05 - change echo order for jdbc 
#    rdabbott   08/11/05 - fix version 
#    njagathe   08/20/04 - Replace join with minimal perl5lib 
#    njagathe   08/16/04 - Fix hardcoded 561 refs 
#    rdabbott   08/06/04 - fix regression paths 
#    rdabbott   07/27/04 - emdrep bin in oracle home 
#    kmanicka   07/19/04 - added JDBC option
#    djoly      05/14/04 - Update core reference 
#    mbhoopat   03/11/04 - merge from pl_main_gen 
#    nsharma    02/27/04 - ia64 changes 
#    mbhoopat   12/19/03 - Fix class path 
#    skini      08/31/03 - FIx return code 
#    jsutton    04/25/03 - Fix up OUILOC
#    jmcdonal   04/09/03 - Bug 2737518: OUI dir changes
#    skini      03/18/03 - Changes to register jobtype to generate sql file
#    rlal       01/25/03 - fix for bug 2769541
#    jsutton    01/21/03 - -native not a supported VM option
#    aaitghez   01/13/03 - change EM version string
#    itarashc   12/16/02 - 
#    itarashc   12/11/02 - 
#    dmshah     12/08/02 - dmshah_add_emutil_main
#    skini      12/17/02 - Cutover to sysman/jlib location for em.jar
#    dmshah     11/26/02 - dmshah_emctl_40
#    dmshah     11/22/02 - Created.
#

#
# Make sure certain environment variables are set
#
JAVA_HOME=C:\Oracle\Middleware\oracle_common\jdk
ORACLE_HOME=C:\Oracle\Middleware\oracle_common
EMDROOT=C:\Oracle\Middleware\oracle_common
export JAVA_HOME
export ORACLE_HOME
export EMDROOT

uname=`uname`
if [ "$uname" = "SunOS" ];
then

# Set up TZ if not already set, this is done as a workaround
# for bug in JDK 1.3.1
  if [ "$TZ" = "" ]
  then
    TMPFILE=/tmp/setTZ.sh.$$
    grep -v "^#" /etc/TIMEZONE | grep TZ > $TMPFILE
    . $TMPFILE
    echo "TZ set to $TZ\n"
    rm $TMPFILE
  fi
  export TZ

fi

PERL5LIB_NATIVE=:$ORACLE_HOME/perl/lib:$ORACLE_HOME/perl/lib/site_perl
PERL5LIB_TMP=${PERL5LIB_NATIVE}:$EMDROOT/sysman/admin/scripts

if [ "$PERL5LIB" = "" ] ;
then
   PERL5LIB=${PERL5LIB_TMP}
else
   PERL5LIB=${PERL5LIB_TMP}:${PERL5LIB}
fi

if [ "$LD_LIBRARY_PATH" = "" ] ; then
   LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8
else
   LD_LIBRARY_PATH=$ORACLE_HOME/lib:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8:$LD_LIBRARY_PATH
fi

if [ "$SHLIB_PATH" = "" ] ; then
   SHLIB_PATH=$ORACLE_HOME/lib32:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8
else
   SHLIB_PATH=$ORACLE_HOME/lib32:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8:$SHLIB_PATH
fi

if [ "$LIBPATH" = "" ] ; then
   LIBPATH=$ORACLE_HOME/lib32:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8
else
   LIBPATH=$ORACLE_HOME/lib32:$ORACLE_HOME/perl/lib:$EMDROOT/lib:C:\Oracle\Middleware\oracle_common\oui/lib/windows 8:$LIBPATH
fi

# add java lib to LD_LIBRARY_PATH.
if [ "$uname" = "SunOS" ];
then
    LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/sparc/client:$JAVA_HOME/jre/lib/sparc:$LD_LIBRARY_PATH
elif [ "$uname" = "HP-UX" ] && [ "`uname -m`" = "9000/800" ] ; then
    SHLIB_PATH=$JRE_HOME/lib/PA_RISC2.0/client:$JRE_HOME/lib/PA_RISC2.0:$SHLIB_PATH
elif [ "$uname" = "HP-UX" ] && [ "`uname -m`" = "ia64" ] ; then
    SHLIB_PATH=$JRE_HOME/lib/IA64N/client:$JRE_HOME/lib/IA64N:$SHLIB_PATH
elif [ "$uname" = "Linux" ] && [ "`uname -m`" = "i686" ]  ; then
    LD_LIBRARY_PATH=$JRE_HOME/lib/i386/client:$JRE_HOME/lib/i386:$LD_LIBRARY_PATH
elif [ "$uname" = "Linux" ] && [ "`uname -m`" = "ia64" ] ; then
    LD_LIBRARY_PATH=$JRE_HOME/lib/ia64/client:$JRE_HOME/lib/ia64:$LD_LIBRARY_PATH
elif [ "$uname" = "Linux" ] && [ "`uname -m`" = "ppc64" ] ; then
    LD_LIBRARY_PATH=$JRE_HOME/bin/classic:$JRE_HOME/bin:$LD_LIBRARY_PATH
fi

export PERL5LIB
export LD_LIBRARY_PATH
export SHLIB_PATH
export LIBPATH

# Add the var for HP
if [ "$uname" = "HP-UX" ] ; then
   UNIX95=XPG4;
   export UNIX95
fi

#
# Set path so that our native executables can be found when run from java
#
PATH=$EMDROOT/bin:$PATH
export PATH

# use ulimit to make sure we have enough descriptors
if [ "$EM_DESCRIPTORS" = "" ]
then
   EM_DESCRIPTORS=1024
fi

CURRENT_LIMIT=`ulimit -n`

if [ "$CURRENT_LIMIT" != "unlimited" ]
then
   if [ $CURRENT_LIMIT -lt $EM_DESCRIPTORS ]
   then
      ulimit -n $EM_DESCRIPTORS
   fi
fi

SCRIPT_DIR=`dirname $0`
$ORACLE_HOME/perl/bin/perl -w $SCRIPT_DIR/emutil.pl $@
