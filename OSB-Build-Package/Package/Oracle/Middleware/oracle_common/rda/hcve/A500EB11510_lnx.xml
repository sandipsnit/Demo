<sdp_diaglet platform="linux" product="EB11510" set="A500EB11510_lnx" title="Oracle E-Business Suite Release 11i (11.5.10) Preinstall (Linux x86 and x86_64)" type="A">
<sdp_meta type="version" id="$Id: A500EB11510_lnx.xml,v 1.8 2012/05/21 22:36:41 mschenke Exp $" header="$Header: /home/cvs/cvs/RDA_4/src/scripting/lib/hcve/A500EB11510_lnx.xml,v 1.8 2012/05/21 22:36:41 mschenke Exp $" version="1.0"/>
<sdp_meta author="JCR" change="Enhance Oracle Linux 5 detection" date="20120521" type="history"/>
<sdp_content set="A500EB11510_lnx" title="Oracle E-Business Suite Release 11i (11.5.10) Preinstall (Linux x86 and x86_64)" type="check">
<sdp_group>

<sdp_rule id="A00100" mode="RECORD" name="OS Type">
<sdp_command type="RDA"><![CDATA[import $OS_BIT,$OS_NAM,$OS_TYP,$OS_VER,$OS_ARC
if match($OS_ARC,'itanium',true)
 call setHcveResult(check($OS_TYP,\
   'Oracle', check(lc($OS_NAM),\
               '(carthage|^oracle.*release\s5\.\d+$)',concat('OL5 ',$OS_BIT),\
               'october', concat('OL4 ',$OS_BIT),\
                          'Uncertified Oracle Linux version'),\
   'Red Hat',check(lc($OS_NAM),\
               'tikanga',  concat('RH5 ',$OS_BIT),\
               'nahant',   concat('RH4 ',$OS_BIT),\
               'taroon',   concat('RH3 ',$OS_BIT),\
               'pensacola',concat('RH2 ',$OS_BIT),\
               'panama',   concat('RH2 ',$OS_BIT),\
                           'Uncertified Red Hat Linux version'),\
   'SuSE',   check($OS_NAM,\
               'SLES-8',  concat('SLES-8 ',$OS_BIT),\
               'SLES-9',  concat('SLES-9 ',$OS_BIT),\
               'SLES-10', concat('SLES-10 ',$OS_BIT),\
                          'Uncertified SuSE Linux version'),\
   'Uncertified OS'))
elsif match($OS_ARC,'(amd|intel)',true)
 call setHcveResult(check($OS_TYP,\
   'Oracle', check(lc($OS_NAM),\
               '(carthage|^oracle.*release\s5\.\d+$)',concat('OL5 ',$OS_BIT),\
               'october', concat('OL4 ',$OS_BIT),\
                          'Uncertified Oracle Linux version'),\
   'Red Hat',check(lc($OS_NAM),\
               'tikanga',  concat('RH5 ',$OS_BIT),\
               'nahant',   concat('RH4 ',$OS_BIT),\
               'taroon',   concat('RH3 ',$OS_BIT),\
               'pensacola',concat('RH2 ',$OS_BIT),\
               'panama',   concat('RH2 ',$OS_BIT),\
                           'Uncertified Red Hat Linux version'),\
   'SuSE',   check($OS_NAM,\
               'SLES-8',  concat('SLES-8 ',$OS_BIT),\
               'SLES-9',  concat('SLES-9 ',$OS_BIT),\
               'SLES-10', concat('SLES-10 ',$OS_BIT),\
                          'Uncertified SuSE Linux version'),\
   'Asianux',check($OS_VER,\
               '^1\.0',   concat('Asianux 1 ',$OS_BIT),\
                          'Uncertified Asianux version'),\
   'Uncertified OS'))
else
 call setHcveResult('Uncertified OS')
var $BOOK = 'Oracle Applications Installation Guide: Using Rapid Install \
  Release 11i (11.5.10.2)'
var $NOTE = 'Knowlege article 316806.1'
setHcveVariable('$BOOK','$NOTE')
]]></sdp_command>
<sdp_description><![CDATA[This rule retrieves the operating system (OS) type, version and bit of your system when you work on Itanium, x86, or x86_64 processor(s) and on Oracle Linux 4 or 5, on Red Hat AS/ES 2.1, 3, 4 or 5, on SuSE Linux 8, 9 or 10, or on Asianux 1.0.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00200" mode="VERIFY" name="OS Certified?">
<sdp_command type="RDA"><![CDATA[import $OS_ARC,$OS_BIT,$OS_NAM,$OS_TYP
if match($OS_BIT,'64')
 return setHcveResult('Not certified 64-bit')
call setHcveResult(check($OS_TYP,\
  'Oracle', check(lc($OS_NAM),\
              '(carthage|^oracle.*release\s5\.\d+$)',\
                         cmp_kernel('OL5','2.6.18-8.EL','2.6.18.8'),\
              'october', cmp_kernel('OL4','2.6.9-42.0.0.0.1.EL',\
                                          '2.6.9.42.0.0.0.1'),\
              'Not certified Oracle Linux version'),\
  'Red Hat',check(lc($OS_NAM),\
              'tikanga',  cmp_kernel('RH EL5','2.6.18-8.EL','2.6.18.8'),\
              'nahant',   cmp_kernel('RH EL4','2.6.9-5.EL', '2.6.9.5'),\
              'taroon',   cmp_kernel('RH EL3','2.4.21-9.EL','2.4.21.9'),\
              'pensacola',cmp_kernel('RH EL2','2.4.9-e.13', '2.4.9.13'),\
              'panama',   cmp_kernel('RH EL2','2.4.9-e.13', '2.4.9.13'),\
              'Not certified Red Hat version'),\
  'SuSE',   check($OS_NAM,\
              'SLES-8', cmp_kernel('SuSE 8','2.4.21-138'),\
              'SLES-9', cmp_kernel('SuSE 9','2.6.5-7.97'),\
              'SLES-10',cmp_kernel('SuSE 10','2.6.16.21-0.8'),\
              'Not certified SuSE version'),\
  'Asianux',check($OS_VER,'^1\.0','Adequate',\
              'Not certified Asianux version'),\
  'Not certified OS'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks for the correct version of Linux for installing the application tier of an Oracle E-Business Suite Release 11i (11.5.10.2). Correct versions are Oracle Linux 4 and 5 (32-bit), Red Hat Enterprise Linux AS/ES 2.1, 3, and 4 (32-bit), Red Hat Enterprise Linux 5 (32-bit), SuSE Linux Enterprise Server 8, 9, and 10 (32-bit).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Adequate" result="PASSED"><![CDATA[No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[!!SHOWSTOPPER!!
|*Return Value*|*Information*|
|Itanium not certified|You cannot install the application tier of an Oracle E-Business Suite on a Linux Itanium system|
|Not certified 64-bit|You have a 64-bit operating system installed. Only 32-bit operating systems are certified.|
|Not certified Oracle Linux version|You are not installing on a correct version of Oracle Linux. Correct Oracle Linux versions are: Oracle Linux 4 32 bit, Oracle Linux 5 32-bit.|
|Not certified Red Hat version|You are not installing on a correct version of Red Hat Linux. Correct Red Hat versions are: Red Hat Enterprise Linux 5 32-bit, Red Hat Enterprise Linux AS/ES 4.0 32-bit, Red Hat Enterprise Linux AS/ES 3 32-bit, Red Hat Enterprise Linux AS/ES 2.1 32-bit.|
|Not certified SuSE version|You are not installing on a correct version of SuSE Linux. Correct SuSE versions are: SuSE Linux Enterprise Server 8 32-bit, SuSE Linux Enterprise Server 9 32-bit, SuSE Linux Enterprise Server 10 32-bit.|
|Not certified OS|You are not installing on a correct version of Linux. Correct versions are are Enterprise Linux 5 32-bit, Enterprise Linux 4 32-bit, Red Hat Enterprise Linux 5 32-bit, Red Hat Enterprise Linux AS/ES 4.0 32-bit, Red Hat Enterprise Linux AS/ES 3 32-bit, Red Hat Enterprise Linux AS/ES 2.1 32-bit, SuSE Linux Enterprise Server 8 32-bit, SuSE Linux Enterprise Server 9 32-bit, SuSE Linux Enterprise Server 10 32-bit.|
For more information about the certified Linux versions, see My Oracle Support and ${NOTE}.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00210" mode="VERIFY" name="RPM OL4/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL4 32" result="SKIPPED" value="Not Oracle Linux 4 32-bit"><![CDATA[This rule applies to Oracle Linux 4 32-bit on x86 or x86_86 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# check packages
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'])
call cmp_os_pkg(\@tbl,'compat-gcc-32',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-gcc-32-c++',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-libcwait',['2.1','1'])
call cmp_os_pkg(\@tbl,'compat-libgcc-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-oracle-rhel4',['1.0','5'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'])
call cmp_os_pkg(\@tbl,'openmotif',['2.2.3','10.RHEL4'])
call cmp_os_pkg(\@tbl,'xorg-x11-deprecated-libs-devel',['6.8.2','1.EL.13.37'])
call cmp_os_pkg(\@tbl,'xorg-x11-deprecated-libs',['6.8.2','1.EL.13.27'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL4/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 4 32-bit system.%BR%The minimal versions are compat-db-4.1.25-9``, ``compat-gcc-32-3.2.3-47.3``, ``compat-gcc-32-c++-3.2.3-47.3``, ``compat-libcwait-2.1-1``, ``compat-libgcc-296-2.96-132.7.2``, ``compat-libstdc++-296-2.96-132.7.2.``, ``compat-libstdc++-33-3.2.3-47.3``, ``compat-oracle-rhel4-1.0-5``, ``glibc-2.3.4-2.25``, ``openmotif-2.2.3-10.RHEL4.5``, ``xorg-x11-deprecated-libs-devel-6.8.2-1.EL.13.37``, and ``xorg-x11-deprecated-libs-6.8.2-1.EL.13.37``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL4/32rpmsOK" result="PASSED"><![CDATA[Correct ``compat-db``, ``compat-gcc-32``, ``compat-gcc-32-c++``, ``compat-libcwait``, ``compat-libgcc-296``, ``compat-libstdc++-296``, ``compat-libstdc++-33``, ``compat-oracle-rhel4``, ``glibc``, ``openmotif``, ``xorg-x11-deprecated-libs-devel``, and ``xorg-x11-deprecated-libs`` packages are installed on your Oracle Linux 4 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00230" mode="VERIFY" name="RPM OL5/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL5 32" result="SKIPPED" value="Not Oracle Linux 5 32-bit"><![CDATA[This rule applies to Oracle Linux 5 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils','2.15')
call cmp_os_pkg(\@tbl,'compat-db',['4.2.52','5.1'])
call cmp_os_pkg(\@tbl,'compat-libcwait',['2.1','1'])
call cmp_os_pkg(\@tbl,'compat-libgcc-296',['2.96','138'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-egcs',['1.1.2','1'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'])
call cmp_os_pkg(\@tbl,'compat-oracle-el5',['1.0','5'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.26'])
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'])
# Set the final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL5/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 5 32-bit system.%BR%The minimal versions of the RPMs are ``binutils-2.15``, ``compat-db-4.2.52-5.1``, ``compat-libcwait-2.1-1``, ``compat-libgcc-296-2.96-138``, ``compat-libstdc++-33-3.2.3-61``, ``compat-libstdc++-egcs-1.1.2-1``, ``compat-oracle-el5-1.0-5``, ``glibc-2.3.4-2.26``, ``libXp-1.0.0-8.1.el5``, and ``openmotif21-2.1.30-11.EL5``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL5/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``compat-libcwait``, ``compat-libgcc-296``, ``compat-libstdc++-33``, ``compat-libstdc++-egcs``, ``compat-oracle-el5``, ``glibc``, ``libXp``, and ``openmotif21`` packages are installed on your Oracle Linux 5 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00245" mode="VERIFY" name="RPM RH2.1/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH2 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 2.1 32-bit"><![CDATA[This rule applies to Red Hat Enterprise Linux AS/ES 2.1 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[ var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'glibc',['2.2.4','32.3'])
call cmp_os_pkg(\@tbl,'openmotif','2.1.30')
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','13'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH2/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on a Red Hat Enterprise Linux AS/ES 2.1 32-bit system.%BR%The minimal versions are ``glibc-2.2.4-32.3``, ``openmotif-2.1.30``, and ``pdksh-5.s.14-13``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH2/32rpmsOK" result="PASSED"><![CDATA[The correct ``glibc``, ``openmotif``, and ``pdksh`` packages are installed on your Red Hat Enterprise Linux AS/ES 2.1 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00250" mode="VERIFY" name="RPM RH3/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH3 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 3 32-bit"><![CDATA[This rule applies to Red Hat Enterprise Linux AS/ES 3 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[ var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'compat-db',['4.0.14','5.1'])
call cmp_os_pkg(\@tbl,'compat-gcc',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'compat-gcc-c++',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'compat-libstdc++',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-devel',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.2','95.3'])
call cmp_os_pkg(\@tbl,'openmotif','2.1.30')
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','21'])
call cmp_os_pkg(\@tbl,'setarch',['1.3','1'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH3/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on a Red Hat Enterprise Linux AS/ES 3 32-bit system.%BR%The minimal versions are compat-db-4.0.14-5.1``, ``compat-gcc-7.3-2.96.128``, ``compat-gcc-c++-7.3-2.96.128``, ``compat-libstdc++-7.3-2.96.128``, ``compat-libstdc++-devel-7.3-2.96.128``, ``glibc-2.3.2-95.3``, ``openmotif-2.1.30``, ``pdksh-5.2.14-21``, and ``setarch-1.3-1``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH3/32rpmsOK" result="PASSED"><![CDATA[The correct ``compat-db``, ``compat-gcc``, ``compat-gcc-c++``, ``compat-libstdc++``, ``compat-libstdc++-devel``, ``glibc``, ``openmotif``, ``pdksh``, and ``setarch`` packages are installed on your Red Hat Enterprise Linux AS/ES 3 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00270" mode="VERIFY" name="RPM RH4/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH4 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 4 32-bit"><![CDATA[This rule applies to Red Hat Enterprise Linux AS/ES 4 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'])
call cmp_os_pkg(\@tbl,'compat-gcc-32',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-gcc-32-c++',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-libcwait',['2.1','1'])
call cmp_os_pkg(\@tbl,'compat-libgcc-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','47.3'])
call cmp_os_pkg(\@tbl,'compat-oracle-rhel4',['1.0','5'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2'])
call cmp_os_pkg(\@tbl,'openmotif','2.1.30')
call cmp_os_pkg(\@tbl,'xorg-x11-deprecated-libs',['6.8.1','23.EL'])
call cmp_os_pkg(\@tbl,'xorg-x11-deprecated-libs-devel',['6.8.1','23.EL'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH4/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on a Red Hat Enterprise Linux AS/ES 4 32-bit system.%BR%The minimal versions are ``compat-db-4.1.25-9``, ``compat-gcc-32-3.2.3-47.3``, ``compat-gcc-32-c++-3.2.3-47.3``, ``compat-libcwait-2.1-1``, ``compat-libgcc-296-2.96-132.7.2``, ``compat-libstdc++-296-2.96-132.7.2``, ``compat-libstdc++-33-3.2.3-47.3``, ``compat-oracle-rhel4-1.0-5``, ``glibc-2.3.4-2``, ``openmotif-2.1.30``, ``xorg-x11-deprecated-libs-6.8.1-23.EL``, and ``xorg-x11-deprecated-libs-devel-6.8.1-23.EL``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH4/32rpmsOK" result="PASSED"><![CDATA[The correct ``compat-db``, ``compat-gcc-32``, ``compat-gcc-32-c++``, ``compat-libcwait``, ``compat-libgcc-296``, ``compat-libstdc++-296``, ``compat-libstdc++-33``, ``compat-oracle-rhel4``, ``glibc``, ``openmotif``, ``xorg-x11-deprecated-libs``, and ``xorg-x11-deprecated-libs-devel`` packages are installed on your Red Hat Enterprise Linux AS/ES 4 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. The minimal version are ``binutils-2.15.92.0.2-21``, ``compat-db-4.1.25-9``, ``compat-libstdc++-296-2.96-132.7.2``, ``control-center-2.8.0-12.rhel4.5``, ``gcc-3.4.6-3``, ``gcc-c++-3.4.6-3``, ``glibc-2.3.4-2.25``, ``glibc-common-2.3.4-2.25``, ``gnome-libs-1.4.1.2.90-44.1``, ``libaio-0.3.105-2``, ``libaio-devel-0.3.105-2``, ``libgcc-3.4.6-3``, ``libstdc++-3.4.6-3``, ``libstdc++-devel-3.4.6-3``, ``make-3.80-6.EL4``, ``openmotif21-2.1.30-11.RHEL4``, ``pdksh-5.2.14-30.3``, ``setarch-1.6-1``, ``sysstat-5.0.5-11.rhel4``, and ``xscreensaver-4.18-5.rhel4.11``.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00290" mode="VERIFY" name="RPM RH5/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH5 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 5 32-bit"><![CDATA[This rule applies to Red Hat Enterprise Linux 5 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils','2.15')
call cmp_os_pkg(\@tbl,'compat-db',['4.2.52','5.1'])
call cmp_os_pkg(\@tbl,'compat-libcwait',['2.1','1'])
call cmp_os_pkg(\@tbl,'compat-libgcc-296',['2.96','138'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-egcs',['1.1.2','1'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'])
call cmp_os_pkg(\@tbl,'compat-oracle-el5',['1.0','5'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.26'])
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'])
# Set the final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH5/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on a Red Hat Enterprise Linux 5 32-bit system.%BR%The minimal versions of the RPMs are ``binutils-2.15``, ``compat-db-4.2.52-5.1``, ``compat-libcwait-2.1-1``, ``compat-libgcc-296-2.96-138``, ``compat-libstdc++-33-3.2.3-61``, ``compat-libstdc++-egcs-1.1.2-1``, ``compat-oracle-el5-1.0-5``, ``glibc-2.3.4-2.26``, ``libXp-1.0.0-8.1.el5``, and ``openmotif21-2.1.30-11.EL5``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH5/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``compat-libcwait``, ``compat-libgcc-296``, ``compat-libstdc++-33``, ``compat-libstdc++-egcs``, ``compat-oracle-el5``, ``glibc``, ``libXp``, and ``openmotif21`` packages are installed on your Red Hat Enterprise Linux 4 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00305" mode="VERIFY" name="RPM SLES8/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-8 32" result="SKIPPED" value="Not SuSE Linux Enterprise 8 32-bit"><![CDATA[This rule applies to SuSE Linux Enterprise 8 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'gcc','2.95.3')
call cmp_os_pkg(\@tbl,'glibc',['2.2.5','213'])
call cmp_os_pkg(\@tbl,'openmotif','2.1.30')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES9/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 8 32-bit system.%BR%The minimal version are gcc-2.95.3``, ``glibc-2.2.5-213``, and ``openmotif-2.1.30``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES9/32rpmsOK" result="PASSED"><![CDATA[The correct ``gcc``, ``glibc``, and ``openmotif`` packages are installed on your SuSE Linux Enterprise 8 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00310" mode="VERIFY" name="RPM SLES9/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-9 32" result="SKIPPED" value="Not SuSE Linux Enterprise 9 32-bit"><![CDATA[This rule applies to SuSE Linux Enterprise 9 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
var @tbl = ()
# Check openmotif21-libs
if chk_os_pkg('openmotif21-libs','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30MLI4')
   call cmp_os_pkg(\@tbl,'openmotif21-libs','2.1.30MLI4.119.1','i386')
  else
   push(@tbl,concat('[openmotif21-libs ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21-libs(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'gcc','2.95.3')
call cmp_os_pkg(\@tbl,'glibc',['2.3.3','98.28'])
call cmp_os_pkg(\@tbl,'orarun',['1.8','109'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES9/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on a SuSE Linux Enterprise 9 32-bit system.%BR%The minimal version are gcc-2.95.3``, ``glibc-2.3.3-98.28``, ``openmotif21-libs-2.1.30MLI4-119.1``, and ``orarun-1.8-109``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES9/32rpmsOK" result="PASSED"><![CDATA[The correct ``gcc``, ``glibc``, ``openmotif21-libs``, and ``orarun`` packages are installed on your SuSE Linux Enterprise 9 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00330" mode="VERIFY" name="RPM SLES10/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-10 32" result="SKIPPED" value="Not SuSE Linux Enterprise 10 32-bit"><![CDATA[This rule applies to SuSE Linux Enterprise 10 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif21
if chk_os_pkg('openmotif21-libs','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30MLI4')
   call cmp_os_pkg(\@tbl,'openmotif21-libs','2.1.30MLI4.143.2','i386')
  else
   push(@tbl,concat('[openmotif21-libs ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21-libs(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils','2.15')
call cmp_os_pkg(\@tbl,'db1',['1.85','99'])
call cmp_os_pkg(\@tbl,'gcc',['2.95','3'])
call cmp_os_pkg(\@tbl,'gdbm-devel',['1.8.3','243.2'])
call cmp_os_pkg(\@tbl,'glibc',['2.4','31.2'])
call cmp_os_pkg(\@tbl,'orarun',['1.9','21.2'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES10/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 10 32-bit system.%BR%The minimal versions are ``binutils-2.15``, ``db1-1.85-99``, ``gcc-2.95.3``, ``glibc-2.4-31.2``, ``openmotif21-libs-2.1.30MLI4-143.2``, and ``orarun-1.9-21.2``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES10/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``db1``, ``gcc``, ``glibc``, ``openmotif21-libs``, and ``orarun`` packages are installed on your SuSE Linux Enterprise 10 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPMs are not installed on your system or some installed RPMs have an incorrect version. Refer to ${NOTE} for the required RPMs. Install correct versions of the RPMs.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00370" mode="VERIFY" name="Got Software Tools?">
<sdp_command type="RDA"><![CDATA[import $OS_BIT
var @tbl = ()
macro find_exe
{var (\@tbl,$exe,$ref) = @arg
 if findCommand($exe)
 {var $cmd = readLink(last,last)
  if !compare('eq',$cmd,$ref)
   call push(@tbl,concat(ucfirst($exe),'Elsewhere'))
 }
 else
  call push(@tbl,concat(ucfirst($exe),'NotFound'))
}
call find_exe(\@tbl,'ar','/usr/bin/ar')
call find_exe(\@tbl,'gcc','/usr/bin/gcc')
call find_exe(\@tbl,'g++','/usr/bin/g++')
if !findCommand('ksh')
 call push(@tbl,'KshNotFound')
call find_exe(\@tbl,'ld','/usr/bin/ld')
call find_exe(\@tbl,'make','/usr/bin/make')
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'tools_found'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that the required software tools for the installation of the application tier of Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="tools_found" result="PASSED"><![CDATA[All required software tools for the installation of the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) were found. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some of the required software tools for the the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) installation were not found. Check your installation.
|*Return Value*|*Action*|
|ArNotFound|``ar`` is not found in PATH.|
|ArElsewhere|``ar`` is not in ``/usr/bin`` as required.|
|GccNotFound|``gcc`` is not found in PATH.|
|GccElsewhere|``gcc`` is not in ``/usr/bin`` as required.|
|G++NotFound|``g++`` is not found in PATH.|
|G++Elsewhere|``g++`` is not in ``/usr/bin`` as required.|
|KshNotFound|``ksh`` is not found in PATH.|
|LdNotFound|``ld`` is not found in PATH.|
|LdElsewhere|``ld`` is not in ``/usr/bin`` as required.|
|MakeNotFound|``make`` is not found in PATH.|
|MakeElsewhere|``make`` is not in ``/usr/bin`` as required.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00400" mode="RECORD" name="IP Address">
<sdp_command type="RDA"><![CDATA[var $hst = field('\.',0,command('hostname'))
var ($lin) = grepFile('/etc/hosts',\
 concat('^[^#]+\s\<?',quote($hst),'\>?($|\.|\s)'),'f')
call setHcveResult(field('\s+',0,$lin))
]]></sdp_command>
<sdp_description><![CDATA[This rule gets the host IP address.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00410" mode="RECORD" name="Domain Name">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires the IP address.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $ip = "%A00400%"
var ($hst) = command('hostname')
var ($nam,$dom) = split('\.',$hst,2)
if testFile('x','/bin/domainname')
 var ($nis) = command('/bin/domainname')
if testFile('r','/etc/resolv.conf')
 var $dns = field('\s+',1,grepFile('/etc/resolv.conf','domain'))
if testFile('x','/usr/bin/nslookup')
{if $nam
  var $nsl = field(concat(quote($nam),'\.'),1,\
                   grepCommand(concat('/usr/bin/nslookup ',$hst),'Name','f'))
 else
  var $nsl = field(concat(quote($hst),'\.'),1,\
                   grepCommand(concat('/usr/bin/nslookup ',$hst),'Name','f'))
}
if $ip
{if !$nam
  var $ipn = trim(field(concat($hst,'\.'),1,\
             grepCommand(concat('/usr/bin/nslookup -sil ',$ip),'Name','f')),'.')
}
call setHcveResult(cond($dom,$dom,\
                        and(length($nis),compare('ne',$nis,'(none)')),$nis,\
                        $dns,$dns,\
                        $nsl,$nsl,\
                        $ipn,$ipn,\
                             'Not configured'))
]]></sdp_command>
<sdp_description><![CDATA[This rule gets the host domain name.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00420" mode="VERIFY" name="DNS Lookup">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires the IP address.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $dom = "%A00410%"
var $ip  = "%A00400%"
var $hst = field('\.',0,command('hostname'))
if !length($hst)
{if and(compare('ne',$dom,'Not configured'),length($dom))
  var $hst = concat($hst,'.',$dom)
}
call setHcveResult(cond(\
  not(length($ip)),\
    'Cannot determine IP address',\
  not(testFile('x','/usr/bin/nslookup')),\
    'Cannot access /usr/bin/nslookup',\
  not(grepCommand(concat('/usr/bin/nslookup -sil ',$hst),quote($ip),'f')),\
    'nslookup host.domain',\
  not(grepCommand(concat('/usr/bin/nslookup -sil ',$ip),quote($hst),'f')),\
    'nslookup IP_address',\
    'Host correctly registered in DNS'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the host is registered correctly in the Domain Name Server (DNS).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Host correctly registered in DNS" result="PASSED"><![CDATA[The host is registered correctly in the DNS.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|nslookup host.domain|The DNS server failed to resolve the nslookup using host.domain.|
|nslookup IP_address|The DNS server failed to resolve the nslookup using IP address.|
|Cannot determine IP address|Fix any problem with the host IP address.|
|Cannot access /usr/bin/nslookup|Grant execute permissions on ``/usr/bin/nslookup`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00430" mode="VERIFY" name="/etc/hosts format">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
if !testFile('r','/etc/hosts')
 return setHcveResult('Cannot access /etc/hosts')
if !@tbl = grepFile('/etc/hosts',\
  concat('^([^\s\#]+\s+)+',quote(${RDA.HOST}),\
         '\s+([^\s\#]+\s+)*',quote(${RDA.NODE}),'(\s|\z|\#)'))
 return setHcveResult('no entry found')

# Test that line begins with IPv4 IP address
if grep(@tbl,'^(\d{1,3}\.){3}\d{1,3}\s','f')
 return setHcveResult('Adequate IPv4 entry')

# Tests that line begins with IPv6 IP address, first that all eight groups are populated, then situations where groups that are all zero are omitted (two colons together).
if grep(@tbl,'^([A-F\d]{1,4}(:[A-F\d]{1,4}){7}\s|\
                :(:[A-F\d]{1,4}){1,6}\s|\
                ([A-F\d]{1,4}:){1,5}(:[A-F\d]{1,4}){1,5}\s|\
                ([A-F\d]{1,4}:){1,6}:\s)','f')
 return setHcveResult('Adequate IPv6 entry')
return setHcveResult('no correct entry found')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/hosts`` file contains a line with ``ip_address fully_qualified_domainname short_hostname``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="^Adequate" result="PASSED"><![CDATA[The ``/etc/hosts`` entry for the fully qualified domain name and host name is adequate.]]></sdp_action>
<sdp_action condition="==" minimum="Cannot access /etc/hosts" result="FAILED"><![CDATA[Grant read permissions on ``/etc/hosts`` to the current user.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The fully qualified host name and host name are not configured correctly. Ensure that there is an IP address entry for the fully qualified domain name with the host name as one of the aliases.
|*Return Value*|*Action"|
|no entry found|No entry with the fully qualified domain name followed by the host name was found.|
|no correct entry found|No entry beginning with an IP address with the fully qualified domain name followed by the host name was found.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00440" mode="VERIFY" name="SysNetw File">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^(OL|RH)" result="SKIPPED" value="Not Oracle or RedHat Linux"><![CDATA[This rule applies to Oracle and RedHat Linux systems on x86 or x86_64 processors only.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires the IP address.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $dom = "%A00410%"
var $ip  = "%A00400%"
if !testFile('r','/etc/sysconfig/network')
 return setHcveResult('Cannot access')
var @tbl =()
var $hst = field('\.',0,command('hostname'))
var $fqd = concat($hst,'.',$dom)
var ($lin) = grepFile('/etc/sysconfig/network',quote($fqd),'f')
if match($lin,concat('^HOSTNAME\s*=\s*',$fqd,'\s*$'))
 call setHcveResult('SysNetOK')
else
 call setHcveResult('Missing host.domain')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/sysconfig/network`` file contains a line with ``HOSTNAME=fully_qualified_hostname``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="SysNetOK" result="PASSED"><![CDATA[The fully qualified domain name (FQDN) is set correctly.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The fully qualified host name entry is not configured correctly.
|*Return Value*|*Action*|
|Missing host.domain|Add the fully qualified host name to the ``/etc/sysconfig/network`` file.|
|Cannot accesss|Grant read permissions on ``/etc/sysconfig/network`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00450" mode="VERIFY" name="NoNetwProf File">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^(OL|RH)" result="SKIPPED" value="Not Oracle or RedHat Linux"><![CDATA[This rule only applies to Oracle and RedHat Linux systems on x86 or x86_64 processor.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
setHcveResult(cond(testFile('e',\
 '/etc/sysconfig/networking/profiles/default/network'),'NetwProfFound','OK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/sysconfig/networking/profiles/default/network`` file does not exist.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="OK" result="PASSED"><![CDATA[The ``/etc/sysconfig/networking/profiles/default/network`` file does not exist. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Remove the ``/etc/sysconfig/networking/profiles/default/network`` file.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00460" mode="VERIFY" name="DNS Settings?">
<sdp_command type="RDA"><![CDATA[
macro chk_minimum
{var (\@tbl,$nam,$max,$val) = @arg
 if !defined($val)
 {call push(@tbl,concat($nam,'Undef'))
  return
 }
 if expr('<',$val,$max)
  call push(@tbl,concat($nam,'TooSmall'))
}
if testFile('r','/etc/resolv.conf')
{var @tbl = ()
 call chk_minimum(\@tbl,'ATTEMPTS',5,\
      field(':',1,grepFile('/etc/resolv.conf','options attempts')))
 call chk_minimum(\@tbl,'TIMEOUT',15,\
      field(':',1,grepFile('/etc/resolv.conf','options timeout')))
 call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'DNSOptionsOK'))
}
else
 setHcveResult('Cannot access')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks some Domain Name Server (DNS) options in ``/etc/resolv.conf``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="DNSOptionsOK" result="PASSED"><![CDATA[The DNS options in ``/etc/resolv.conf`` are set appropriately. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The DNS options in ``/etc/resolv.conf`` are not set appropriately.
|*Return Value*|*Action*|
|ATTEMPTSTooSmall|Set the ``options attempts`` in ``/etc/resolv.conf`` to at least 5.|
|ATTEMPTSUndef|The ``options attempts`` in ``/etc/resolv.conf`` is not defined. It is not set and must be set to at least 5|
|TIMEOUTSTooSmall|Set the ``options timeout`` in ``/etc/resolv.conf`` to at least 15.|
|TIMEOUTSUndef|The ``options timout`` in ``/etc/resolv.conf`` is not defined. It is not set and must be set to at least 15.|
|Cannot access|Grant read persmissions on ``/etc/resolv.conf`` to the user who is logged on.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00470" mode="VERIFY" name="Net Service Access?">
<sdp_command type="RDA"><![CDATA[var $NET='/var/tmp/.oracle'
call setHcveResult(cond(not(testDir('e',$NET)),'NonExist',\
                        not(testDir('d',$NET)),'NoDir',\
                        testDir('rwx',$NET),'PermOk','PermNotOk'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user who is logged in can create the ``/var/tmp/.oracle`` directory or can create files in it. The directory is used by the Net Service Listeners.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="NonExist|PermOk" result="PASSED"><![CDATA[The user who is logged in can create the ``/var/tmp/.oracle`` directory or he can create files in the directory.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoDir|The ``/var/tmp/.oracle`` is not a directory. Remove the ``.oracle`` entry in ``/var/tmp``.|
|PermNotOk|The user who is logged in cannot create files in the ``/var/tmp/.oracle`` directory. Grant read, write, and execute permissions on this directory to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00510" mode="VERIFY" name="Port Range OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00200" minimum="PASSED" result="SKIPPED" value="Not on certified Linux system"><![CDATA[This rule applies to certified Linux Operating Systems only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
if !testFile('f','/proc/sys/net/ipv4/ip_local_port_range')
 return setHcveResult('iplocalNotFound')
macro chk_port_range
{var (\@tbl,$min,$max) = @arg
 if !?$min
  return push(@tbl,'iplocalNotFound')
 if !?$max
  return push(@tbl,'iplocalNotFound')
 if !expr('==',$min,10000)
  call push(@tbl,'LowValue')
 if !expr('==',$max,65000)
  call push(@tbl,'HighValue')
}
call chk_port_range(\@tbl,split('\s+',\
  grepFile('/proc/sys/net/ipv4/ip_local_port_range','\d+','f'),2))
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RangeOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``ip_local_port_range`` kernel parameter is between 10000 and 65000, according to the Knowledge Article 761564.1 for Linux x86 and the Knowledge Article 761566.1 for Linux x86_64.''.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="RangeOK" result="PASSED"><![CDATA[The sockets defined in ``/proc/sys/net/ipv4/ip_local_port_range`` are adequate for installing the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) on Linux. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The values in ``/proc/sys/net/ipv4/ip_local_port_range`` are not set as recommended for the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) on Linux. To change the settings according to the recommendation execute:
%BR%``$ /bin/echo 10000 65000 > /proc/sys/net/ipv4/ip_local_port_range``
The values recommended for the local port range may must be adjusted according to the specific needs of your environment in order to avoid port conflicts. 
|*Return Value*|*Action*|
|LowValue|The recommended low end value for ``ip_local_port_range`` is 10000.|
|HighValue|The recommended high end value for ``ip_local_port_range`` is 65000.|
|iplocalNotFound|``ip_local_port_range`` is not present in the ``/proc/sys/net/ipv4`` directory as required.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00600" mode="RECORD" name="ApplTierDirectory">
<sdp_command type="PROMPT" default="" variable="$APP_TIER_DIR"><![CDATA[Planned application tier installation directory]]></sdp_command>
<sdp_description><![CDATA[This rule prompts the user for the planned directory of the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00610" mode="VERIFY" name="A_T  Valid?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00600" minimum="RECORD" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a planned application tier home directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not($APP_TIER_DIR),             'ATNotSpecified',\
  not(testDir('d',$APP_TIER_DIR)),'ATnotvalid',\
  not(testDir('l',$APP_TIER_DIR)),'ATexists',\
                                  'ATsymlink'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks the directory for the installation of the application tier (A_T) of the Oracle E-Business suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="ATexists" result="PASSED"><![CDATA[The application tier installation directory exists. No action required]]></sdp_action>
<sdp_action condition="==" minimum="ATNotSpecified" result="SKIPPED"><![CDATA[The application tier installation directory was not specified. No action required]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[ALERT:
You did not specify a valid application tier installation directory. Ensure that you provided the correct location or that this directory is created and then run this script again.
|*Return Value*|*Action*|
|ATnotvalid|Ensure that the application tier directory is a valid directory.|
|ATsymlink|Ensure that the specified application tier directory is not a symbolic link.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00620" mode="VERIFY" name="A_T Permissions OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified or Invalid A_T"><![CDATA[You did not specify a valid application tier directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not(testDir('r',$APP_TIER_DIR)),'NoReadPerm',\
  not(testDir('w',$APP_TIER_DIR)),'NoWritePerm',\
  not(testDir('x',$APP_TIER_DIR)),'NoExecutePerm',\
                                  'CorrectPerms'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user has the correct privileges to install the application tier (A_T) of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="CorrectPerms" result="PASSED"><![CDATA[The permissions for the application tier directory are correct. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoReadPerm|The install user has no read permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoWritePerm|The install user has no write permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoExecutePerm|The install user has no execute permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00630" mode="VERIFY" name="A_T Disk Space">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a valid application tier directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
var $dsk = get_df($APP_TIER_DIR)
call setHcveResult(cond(and(isNumber($dsk),expr('>=',$dsk,27262976)),\
                   'OK','NotOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks if there is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="OK" result="PASSED"><![CDATA[There is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2) in the directory. No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[There is insufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2). You need at least 26 GB.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00640" mode="VERIFY" name="Space in tmp">
<sdp_command type="RDA"><![CDATA[var $tmp = nvl(getEnv('TMP'),getEnv('TMPDIR'),'/tmp')
call setHcveResult(cond(\
  not(testDir('d',$tmp)),         'Cannot access tmp directory',\
  expr('>=',get_df($tmp),1048576),'Available',\
                                  'Need at least 1GB'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the system has enough temporary space. Initially Oracle Rapid Install (RI) checks the ``TMP`` and ``TMPDIR`` environment variables to locate the temporary directory. If these environment variables do not exist, then RI uses ``/tmp``. The minimum requirement is 1 GB.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Available" result="PASSED"><![CDATA[The system has enough temporary space.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Need at least 1 GB|Increase the available temporary space to 1 GB or more. You can define ``TMP`` or ``TMPDIR`` to point to a directory with 1 GB available space.|
|Cannot access tmp directory|Grant read, write, and execute permissions on ``/tmp`` or directories in ``TMP`` or ``TMPDIR`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

</sdp_group>
</sdp_content>
</sdp_diaglet>
