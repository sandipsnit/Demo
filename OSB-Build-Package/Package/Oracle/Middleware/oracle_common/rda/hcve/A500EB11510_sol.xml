<sdp_diaglet platform="solaris" product="EB11510" set="A500EB11510_sol" title="Oracle E-Business Suite Release 11i (11.5.10) Preinstall (Solaris)" type="A">
<sdp_meta type="version" id="$Id: A500EB11510_sol.xml,v 1.6 2012/02/28 15:12:43 mschenke Exp $" header="$Header: /home/cvs/cvs/RDA_4/src/scripting/lib/hcve/A500EB11510_sol.xml,v 1.6 2012/02/28 15:12:43 mschenke Exp $" version="1.0"/>
<sdp_meta author="JCR" change="Improve /etc/hosts Format check" date="20120223" type="history"/>
<sdp_content set="A500EB11510_sol" title="Oracle E-Business Suite Release 11i (11.5.10) Preinstall (Solaris)" type="check">
<sdp_group>

<sdp_rule id="A00100" mode="RECORD" name="OS Type">
<sdp_command type="RDA"><![CDATA[import $OS_ARC,$OS_BIT,$OS_NAM,$OS_VER
call setHcveResult(check(uc($OS_NAM),\
  'SUNOS',concat($OS_NAM,' ',uc($OS_ARC),' ',$OS_VER,' ',$OS_BIT,'-bit'),\
          'Uncertified OS'))
var $BOOK = 'Oracle Applications Installation Guide: Using Rapid Install \
  Release 11i (11.5.10.2)'
var $NOTE = 'Knowledge Article 316806.1'
setHcveVariable('$BOOK','$NOTE')
]]></sdp_command>
<sdp_description><![CDATA[This rule retrieves the operating system (OS) name, architecture, version, and bit of your system when you work on a Solaris system.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00200" mode="VERIFY" name="OS Certified?">
<sdp_command type="RDA"><![CDATA[import $OS_ARC,$OS_NAM,$OS_VER,$OS_BIT
call setHcveResult(check(uc($OS_NAM),\
 'SUNOS',check(uc($OS_ARC),\
          'SPARC',check($OS_BIT,\
                   '64',check($OS_VER,\
                         '2\.(8|9|10)','Certified',\
                                       'Uncertified Solaris SPARC Version'),\
                    check($OS_VER,\
                     '2\.(6|8|9|10)','Certified',\
                                     'Uncertified Solaris SPARC Version')),\
          'Uncertified Sun OS'),\
 'Not on Solaris'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks for the correct version of Solaris for installing the application tier of an Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Certified" result="PASSED"><![CDATA[No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[!!SHOWSTOPPER!!
You do not have Solaris SPARC, or a correct version of Solaris SPARC installed on your server. For the certified versions of Solaris SPARC, see My Oracle Support and ${NOTE}.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00370" mode="VERIFY" name="Got Software Tools?">
<sdp_command type="RDA"><![CDATA[var @tbl = ()
macro find_exe
{var (\@tbl,$exe,$ref) = @arg
 if findCommand($exe)
 {var $cmd = readLink(last,last)
  if !compare('eq',$cmd,$ref)
   call push(@tbl,concat(ucfirst($exe),'Elsewhere'))
 }
 else
  call push(@tbl,concat(ucfirst($exe),'NotFound'))
}
call find_exe(\@tbl,'ar','/usr/ccs/bin/ar')
call find_exe(\@tbl,'ld','/usr/ccs/bin/ld')
call find_exe(\@tbl,'make','/usr/ccs/bin/make')
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'tools_found'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that the required software tools for the installation of the application tier of an Oracle E-Business Suite Release 11i (11.5.10.2) exist.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="tools_found" result="PASSED"><![CDATA[All required software tools for the installation of the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) were found. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some of the required software tools for the installation of the application tier of Oracle E-Business Suite Release 11i (11.5.10.2) were not found. Refer to ${'BOOK} for the required tools. Check your installation.
|*Return Value*|*Action*|
|ArNotFound|``ar`` is not found in PATH.|
|ArElsewhere|``ar`` is not in ``/usr/ccs/bin`` as required.|
|LdNotFound|``make`` is not found in PATH.|
|LdElsewhere|``make`` is not in ``/usr/ccs/bin`` as required.|
|MakeNotFound|``make`` is not found in PATH.|
|MakeElsewhere|``make`` is not in ``/usr/ccs/bin`` as required.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00400" mode="RECORD" name="IP Address">
<sdp_command type="RDA"><![CDATA[var ($hst) = command('hostname')
var $ip = field('\s+',1,grepCommand(concat('/usr/sbin/ping -a ',$hst),'.','f'))
call setHcveResult(substr($ip,1,expr('-',length($ip),2)))
]]></sdp_command>
<sdp_description><![CDATA[This rule gets the host IP address.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00410" mode="RECORD" name="Domain Name">
<sdp_command type="RDA"><![CDATA[var ($hst) = command('hostname')
var ($nam,$dom) = split('\.',$hst,2)
if testFile('x','/bin/domainname')
 var ($nis) = command('/bin/domainname')
if testFile('r','/etc/resolv.conf')
 var $dns = field('\s+',1,grepFile('/etc/resolv.conf','domain'))
if testFile('x','/usr/sbin/nslookup')
{if $nam
  var $nsl = field(concat(quote($nam),'\.'),1,\
                   grepCommand(concat('/usr/sbin/nslookup ',$hst),'Name','f'))
 else
  var $nsl = field(concat(quote($hst),'\.'),1,\
                   grepCommand(concat('/usr/sbin/nslookup ',$hst),'Name','f'))
}
call setHcveResult(cond($dom,$dom,\
                        $nis,$nis,\
                        $dns,$dns,\
                        $nsl,$nsl,\
                             'Not Configured'))
]]></sdp_command>
<sdp_description><![CDATA[The rule gets the host domain name.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00420" mode="VERIFY" name="DNS Lookup">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires the IP address of the server.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $ip  = "%A00400%"
var $hst = field('\.',0,command('hostname'))
call setHcveResult(cond(\
  not(length($ip)),\
    'Cannot determine IP address',\
  not(testFile('x','/usr/sbin/nslookup')),\
    'Cannot access /usr/sbin/nslookup',\
  and(grepCommand(concat('/usr/sbin/nslookup ',$hst),quote($ip),'f'),\
      grepCommand(concat('/usr/sbin/nslookup ',$ip),quote($hst),'f')),\
    'Host correctly registered in DNS',\
    'Host not correctly registered in DNS'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the host is registered correctly in the DNS.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Host correctly registered in DNS" result="PASSED"><![CDATA[The host is registered correctly in the DNS.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Host not correctly registered in DNS|Register the host.domain in the DNS.|
|Cannot determine IP address|Fix any problem with the host IP address.|
|Cannot access /usr/sbin/nslookup|Grant execute permissions on ``/usr/sbin/nslookup`` to the current user.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00430" mode="VERIFY" name="/etc/hosts Format">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires the domain name of the server.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
if !testFile('r','/etc/hosts')
 return setHcveResult('Cannot access /etc/hosts')
if !@tbl = grepFile('/etc/hosts',\
  concat('^([^\s\#]+\s+)+',quote(${RDA.HOST}),\
         '\s+([^\s\#]+\s+)*',quote(${RDA.NODE}),'(\s|\z|\#)'))
 return setHcveResult('no entry found')

# Test that line begins with IPv4 IP address
if grep(@tbl,'^(\d{1,3}\.){3}\d{1,3}\s','f')
 return setHcveResult('Adequate IPv4 entry')

# Tests that line begins with IPv6 IP address, first that all eight groups are populated, then situations where groups that are all zero are omitted (two colons together).
if grep(@tbl,'^([A-F\d]{1,4}(:[A-F\d]{1,4}){7}\s|\
                :(:[A-F\d]{1,4}){1,6}\s|\
                ([A-F\d]{1,4}:){1,5}(:[A-F\d]{1,4}){1,5}\s|\
                ([A-F\d]{1,4}:){1,6}:\s)','f')
 return setHcveResult('Adequate IPv6 entry')
return setHcveResult('no correct entry found')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/hosts`` file contains a line with ``ip_address fully_qualified_domainname short_hostname``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="^Adequate" result="PASSED"><![CDATA[The ``/etc/hosts`` entry for the fully qualified domain name and host name is adequate.]]></sdp_action>
<sdp_action condition="==" minimum="Cannot access /etc/hosts" result="FAILED"><![CDATA[Grant read permissions on ``/etc/hosts`` to the current user.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The fully qualified host name and host name are not configured correctly. Ensure that there is an IP address entry for the fully qualified domain name with the host name as one of the aliases.
|*Return Value*|*Action"|
|no entry found|No entry with the fully qualified domain name followed by the host name was found.|
|no correct entry found|No entry beginning with an IP address with the fully qualified domain name followed by the host name was found.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00440" mode="VERIFY" name="Net Service Access?">
<sdp_command type="RDA"><![CDATA[var $NET='/var/tmp/.oracle'
call setHcveResult(cond(not(testDir('e',$NET)),'NonExist',\
                        not(testDir('d',$NET)),'NoDir',\
                        testDir('rwx',$NET),'PermOk','PermNotOk'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user who is logged in can create the ``/var/tmp/.oracle`` directory or can create files in it. The directory is used by the Net Service Listeners.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="NonExist|PermOk" result="PASSED"><![CDATA[The user who is logged in can create the ``/var/tmp/.oracle`` directory or he can create files in the directory.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoDir|The ``/var/tmp/.oracle`` is not a directory. Remove the ``.oracle`` entry in ``/tmp``.|
|PermNotOk|The user who is logged in cannot create files in the ``/var/tmp/.oracle`` directory. Grant read, write, and execute permissions on this directory to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00600" mode="RECORD" name="ApplTierDirectory">
<sdp_command type="PROMPT" default="" variable="$APP_TIER_DIR"><![CDATA[Planned application tier installation directory]]></sdp_command>
<sdp_description><![CDATA[This rule prompts the user for the planned directory of the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00610" mode="VERIFY" name="A_T Valid?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00600" minimum="RECORD" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify the planned directory for the application tier.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not($APP_TIER_DIR),             'ATNotSpecified',\
  not(testDir('d',$APP_TIER_DIR)),'ATnotvalid',\
  not(testDir('l',$APP_TIER_DIR)),'ATexists',\
                                  'ATsymlink'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks the directory for the installation of the application tier (A_T) of the Oracle E-Business suite R11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="ATexists" result="PASSED"><![CDATA[The application tier installation directory exists. No action required]]></sdp_action>
<sdp_action condition="==" minimum="ATNotSpecified" result="SKIPPED"><![CDATA[The application tier installation directory was not specified. No action required]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[ALERT:
You did not specify a valid application tier installation directory. Ensure that you provided the correct location or that this directory is created and then run this script again.
|*Return Value*|*Action*|
|ATnotvalid|Ensure that the application tier directory is a valid directory.|
|ATsymlink|Ensure that the specified application tier directory is not a symbolic link.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00620" mode="VERIFY" name="A_T Permissions OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a valid application tier home directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not(testDir('r',$APP_TIER_DIR)),'NoReadPerm',\
  not(testDir('w',$APP_TIER_DIR)),'NoWritePerm',\
  not(testDir('x',$APP_TIER_DIR)),'NoExecutePerm',\
                                  'CorrectPerms'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user has the correct privileges to install the application tier (A_T) of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="CorrectPerms" result="PASSED"><![CDATA[The permissions for the application tier directory are correct. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoReadPerm|The install user has no read permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoWritePerm|The install user has no write permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoExecutePerm|The install user has no execute permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00630" mode="VERIFY" name="Disk Space">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a valid application tier directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
var $dsk = get_df($APP_TIER_DIR)
call setHcveResult(cond(and(isNumber($dsk),expr('>=',$dsk,27262976)),\
                   'Available','NotAvailable'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks if there is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Available" result="PASSED"><![CDATA[There is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2) in the directory. No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[There is insufficient disk space to install the application tier of the Oracle E-Business Suite Release 11i (11.5.10.2). You need at least 26 GB.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00640" mode="VERIFY" name="Space in tmp">
<sdp_command type="RDA"><![CDATA[var $tmp = nvl(getEnv('TMP'),getEnv('TMPDIR'),'/tmp')
call setHcveResult(cond(\
  not(testDir('d',$tmp)),          'Cannot access tmp directory',\
  expr('>=',get_df($tmp),1048576), 'Available',\
                                   'Need at least 1GB'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the system has enough temporary space. Initially Oracle Rapid Install (RI) checks the ``TMP`` and ``TMPDIR`` environment variables to locate the temporary directory. If these environment variables do not exist, then RI uses ``/tmp``. The minimum requirement is 1 GB.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Available" result="PASSED"><![CDATA[The system has enough temporary space.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Need at least 1 GB|Increase the available temporary space to 1 GB or more. You can define ``TMP`` or ``TMPDIR`` to point to a directory with 1 GB available space.|
|Cannot access tmp directory|Grant read, write, and execute permissions on ``/tmp`` or directories in ``TMP`` or ``TMPDIR`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>
</sdp_group>
</sdp_content>
</sdp_diaglet>
