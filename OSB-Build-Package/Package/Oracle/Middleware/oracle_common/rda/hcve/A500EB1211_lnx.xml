<sdp_diaglet platform="linux" product="EB1211" set="A500EB1211_lnx" title="Oracle E-Business Suite Release 12 (12.1.1) Preinstall (Linux x86 and x86_64)" type="A">
<sdp_meta id="$Id: A500EB1211_lnx.xml,v 1.27 2012/05/23 13:48:27 mschenke Exp $" type="version"/>
<sdp_meta author="JCR" change="Improve Oracle Linux 6 detection" date="20120523" type="history"/>
<sdp_content set="A500EB1211_lnx" title="Oracle E-Business Suite Release 12 (12.1.1) Preinstall (Linux x86 and x86_64)" type="check">
<sdp_group>

<sdp_rule id="A00100" mode="RECORD" name="OS Type">
<sdp_command type="RDA"><![CDATA[import $OS_BIT,$OS_NAM,$OS_TYP
call setHcveResult(check($OS_TYP,\
  'Oracle', check(lc($OS_NAM),\
                  '^oracle.*release\s6\.\d+$',concat('OL6 ',$OS_BIT),\
                  'carthage',concat('OL5 ',$OS_BIT),\
                  'october', concat('OL4 ',$OS_BIT),\
                             'Uncertified Oracle Linux version'),\
  'Red Hat',check(lc($OS_NAM),\
                  'tikanga', concat('RH5 ',$OS_BIT),\
                  'nahant',  concat('RH4 ',$OS_BIT),\
                  'taroon',  concat('RH3 ',$OS_BIT),\
                             'Uncertified Red Hat Linux version'),\
  'SuSE',   check($OS_NAM,\
                  'SLES-9',  concat('SLES-9 ',$OS_BIT),\
                  'SLES-10', concat('SLES-10 ',$OS_BIT),\
                             'Uncertified SuSE Linux version'),\
             'Uncertified OS'))
var $BOOK = 'Oracle Applications Installation Guide Using Rapid Install \
  Release 12.1 (12.1.1)'
setHcveVariable('$BOOK')
]]></sdp_command>
<sdp_description><![CDATA[This rule retrieves the operating system (OS) type, version and bit of your system when you work on x86 or x86_64 processor(s) and on Oracle Linux 4 or 5, on Red Hat AS/ES 3, 4 or 5, or on SuSE Linux 9 or 10.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00200" mode="VERIFY" name="OS Certified?">
<sdp_command type="RDA"><![CDATA[import $OS_ARC,$OS_BIT,$OS_NAM,$OS_TYP
if match($OS_ARC,'itanium',true)
{call setHcveResult(check($OS_TYP,\
   'Oracle', check(lc($OS_NAM),\
     '^oracle.*release 6\.\d+$',cmp_kernel('OL6','2.6.32-100.28.5.el6.x86_64',\
                                                 '2.6.32.100.28.5'),\
     '(^oracle.*release\s5\.\d+$|carthage)',\
                                cmp_kernel('OL5','2.6.18-53.1.4.EL5',\
                                                 '2.6.18.53.1.4'),\
                     'october', cmp_kernel('OL4','2.6.9-42.0.0.0.1.EL',\
                                                 '2.6.9.42.0.0.0.1'),\
                                'Not certified Oracle Linux version'),\
   'Red Hat',check(lc($OS_NAM),\
                     'tikanga',cmp_kernel('RH EL5','2.6.18-53.1.4.EL5',\
                                                   '2.6.18.53.1.4'),\
                     'nahant', cmp_kernel('RH EL4','2.6.9-42.EL',\
                                                   '2.6.9.42'),\
                               'Not certified Red Hat version'),\
   'SuSE',   check($OS_NAM,\
                     'SLES-9', cmp_kernel('SuSE 9','2.6.5-7.244'),\
                     'SLES-10',cmp_kernel('SuSE 10','2.6.16.21-0.8'),\
                             'Not certified SuSE version'),\
             'Not certified OS'))
}
elsif expr('==',$OS_BIT,32)
{call setHcveResult(check($OS_TYP,\
      'Oracle', check(lc($OS_NAM),\
                      '(^oracle.*release\s5\.\d+$|carthage)',\
                                 cmp_kernel('OL5','2.6.18-53.1.4.EL5',\
                                                  '2.6.18.53.1.4'),\
                      'october', cmp_kernel('OL4','2.6.9-42.0.0.0.1.EL',\
                                                  '2.6.9.42.0.0.0.1'),\
                                 'Not certified Oracle Linux version'),\
      'Red Hat',check(lc($OS_NAM),\
                      'tikanga',cmp_kernel('RH EL5','2.6.18-53.1.4.EL5',\
                                                    '2.6.18.53.1.4'),\
                      'nahant', cmp_kernel('RH EL4','2.6.9-42.EL',\
                                                    '2.6.9.42'),\
                                'Not certified Red Hat version'),\
      'SuSE',   check($OS_NAM,\
                      'SLES-9', cmp_kernel('SuSE 9','2.6.5-7.244'),\
                      'SLES-10',cmp_kernel('SuSE 10','2.6.16.21-0.8'),\
                                'Not certified SuSE version'),\
                'Not certified OS'))
}
else
{call setHcveResult(check($OS_TYP,\
   'Oracle', check(lc($OS_NAM),\
                      '^oracle.*release 6\.\d+$',\
                                cmp_kernel('OL6','2.6.32-100.28.5.el6.x86_64',\
                                                 '2.6.32.100.28.5'),\
                      '(^oracle.*release\s5\.\d+$|carthage)',\
                                cmp_kernel('OL5','2.6.18-8.el5PAE',\
                                                 '2.6.18.8'),\
                      'october',cmp_kernel('OL4','2.6.9-42.0.0.0.1.EL',\
                                                 '2.6.9.42.0.0.0.1'),\
                                'Not certified Oracle Linux version'),\
   'Red Hat',check(lc($OS_NAM),\
                      'tikanga',cmp_kernel('RH EL5','2.6.18-8.el5PAE',\
                                                    '2.6.18.8'),\
                      'nahant', cmp_kernel('RH EL4','2.6.9-42.EL',\
                                                    '2.6.9.42'),\
                      'taroon', cmp_kernel('RH EL3','2.4.21-27.EL',\
                                                    '2.4.21.27'),\
                                'Not certified Red Hat version'),\
   'SuSE',   check($OS_NAM,\
                      'SLES-9', cmp_kernel('SuSE 9','2.6.5-7.244'),\
                      'SLES-10',cmp_kernel('SuSE 10','2.6.16.21-0.8'),\
                                'Not certified SuSE version'),\
                'Not certified OS'))
}
]]></sdp_command>
<sdp_description><![CDATA[This rule checks for the correct version of Linux for installing the application tier of an Oracle E-Business Suite Release 12 (12.1.1). Correct versions are Oracle Linux 6 64-bit, Oracle Linux 5 (UL1) 32-bit and 64-bit, Oracle Linux 4 (UL4) 32-bit and 64-bit, Red Hat Enterprise Linux 5 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 4.0 (UL4) 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 3 (UL4) 32-bit, SuSE Linux Enterprise 9 (SP3) 32-bit and 64-bit, SuSE Linux Enterprise 10 (GA,SP1) 32-bit and 64-bit.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Adequate" result="PASSED"><![CDATA[No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[!!SHOWSTOPPER!!
|*Return Value*|*Information*|
|Itanium not certified|You cannot install the application tier of an Oracle E-Business Suite on a Linux Itanium system|
|Not certified Oracle Linux version|You are not installing on a correct version of Oracle Linux. Correct Oracle Linux versions are: Oracle Linux 6 64-bit, Oracle Linux 5 (UL1) 32-bit and 64-bit, Oracle Linux 4 (UL4) 32-bit and 64-bit.|
|Not certified Red Hat version|You are not installing on a correct version of Red Hat Linux. Correct Red Hat versions are: Red Hat Enterprise Linux 5 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 4.0 (UL4) 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 3 (UL4) 32-bit.|
|Not certified SuSE version|You are not installing on a correct version of SuSE Linux. Correct SuSE versions are SuSE Linux Enterprise 9 (SP3) 32-bit and 64-bit, SuSE Linux Enterprise 10 (GA,SP1) 32-bit and 64-bit.|
|Not certified OS|You are not installing on a correct version of Linux. Correct versions are are Oracle Linux 6 64-bit, Oracle Linux 5 (UL1) 32-bit and 64-bit, Oracle Linux 4 (UL4) 32-bit and 64-bit, Red Hat Enterprise Linux 5 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 4.0 (UL4) 32-bit and 64-bit, Red Hat Enterprise Linux AS/ES 3 (UL4) 32-bit, SuSE Linux Enterprise 9 (SP3) 32-bit and 64-bit, SuSE Linux Enterprise 10 (GA,SP1) 32-bit and 64-bit.|
For more information about the certified Linux versions, see the Knowledge Article 761564.1 for Linux x86 and the Knowledge Article 761566.1 for Linux x86_64.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00210" mode="VERIFY" name="RPM OL4/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL4 32" result="SKIPPED" value="Not Oracle Linux 4 32-bit"><![CDATA[This rule applies for Oracle Linux 4 32-bit on x86 or x86_86 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif RPM
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.15.92.0.2','21'])
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'control-center',['2.8.0','12.rhel4.5'])
call cmp_os_pkg(\@tbl,'gcc',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'gcc-c++',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'])
call cmp_os_pkg(\@tbl,'glibc-common',['2.3.4','2.25'])
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.2.90','44.1'])
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'])
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.105'])
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'make',['3.80','6.EL4'])
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','30.3'])
call cmp_os_pkg(\@tbl,'setarch',['1.6','1'])
call cmp_os_pkg(\@tbl,'sysstat','5.0.5','11.rhel4')
call cmp_os_pkg(\@tbl,'xscreensaver','4.18','5.rhel4.11')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL4/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 4 32-bit system.%BR%The minimal versions are ``binutils-2.15.92.0.2-21``, ``compat-libstdc++-296-2.96-132.7.2``, ``compat-db-4.1.25-9``, ``control-center-2.8.0-12.rhel4.5``, ``gcc-3.4.6-3``, ``gcc-c++-3.4.6-3``, ``glibc-2.3.4-2.25``, ``glibc-common-2.3.4-2.25``, ``gnome-libs-1.4.1.2.90-44.1``, ``libaio-0.3.105-2``, ``libaio-devel-0.3.105``, ``libgcc-3.4.6-3``, ``libstdc++-3.4.6-3``, ``libstdc++-devel-3.4.6-3``, ``make-3.80-6.EL4``, ``openmotif21-2.1.30-11.RHEL4.6``, ``pdksh-5.2.14-30.3``, ``setarch-1.6-1``, ``sysstat-5.0.5-11.rhel4``, and ``xscreensaver-4.18-5.rhel4.11``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL4/32rpmsOK" result="PASSED"><![CDATA[Correct ``binutils``, ``compat-db``, ``compat-libstdc++-296``, ``control-center``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-common``, ``gnome-libs``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``pdksh``, ``setarch``, ``sysstat``, and ``xscreensaver`` packages are installed on your Oracle Linux 4 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00220" mode="VERIFY" name="RPM OL4/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL4 64" result="SKIPPED" value="Not Oracle Linux 4 64-bit"><![CDATA[This rule applies for Oracle Linux 4 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif RPM
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.15.92.0.2','21'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'],'i386')
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'],'x86_64')
call cmp_os_pkg(\@tbl,'control-center',['2.8.0','12.rhel4.5'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'],'i686')
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-common',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.3.4','2.25'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.2.90','44.1'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.105','2'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.80','6.EL4'],'x86_64')
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','30.3'],'x86_64')
call cmp_os_pkg(\@tbl,'setarch',['1.6','1'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['5.0.5','11.rhel4'],'x86_64')
call cmp_os_pkg(\@tbl,'xscreensaver',['4.18','5.rhel4.11'],'x86_64')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL4/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 4 64-bit system.%BR%The minimal version are ``binutils-2.16.91.0.5-23.4``, ``compat-2006.1.25-11.2``, ``compat-libstdc++-5.0.7-22.2``, ``db1-1.85-101.2``, ``gcc-4.1.0-28.4``, ``gcc-c++-4.1.0-28.4``, ``glibc-2.4-31.2``, ``glibc-devel-2.4-31.2``, ``libaio-0.3.104-14.2``, ``libaio-devel-0.3.104-14.2``, ``libgcc-4.1.0-28.4``, ``libstdc++-4.1.0-28.4``, ``libstdc++-devel-4.1.0-28.4``, ``make-3.80-202.2``, and ``openmotif21-libs-2.1.30MLI4-143.2``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL4/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``control-center``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``gnome-libs``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``pdksh``, ``setarch``, ``sysstat``, and ``xscreensaver`` packages are installed on your Oracle Linux 4 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00230" mode="VERIFY" name="RPM OL5/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL5 32" result="SKIPPED" value="Not Oracle Linux 5 32-bit"><![CDATA[This rule applies for Oracle Linux 5 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check binutils
call cmp_os_pkg(\@tbl,'binutils',check(cmp_kernel('EL5','2.6.18-128'),\
  'Adequate','2.17.50.0.6-9.0.1','2.17.50.0.6-6.0.1'),'i386')
# Check other RPMs
call cmp_os_pkg(\@tbl,'compat-glibc',['2.3.4','2.26'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','138'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'],'i386')
call cmp_os_pkg(\@tbl,'gcc',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.13'],'i386')
call cmp_os_pkg(\@tbl,'glibc',['2.5','123'],'i386')
call cmp_os_pkg(\@tbl,'glibc-common',['2.5','123'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','12'],'i386')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.23'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el53'],'i386')
call cmp_os_pkg(\@tbl,'libgomp',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el53'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'make',['3.81','1.13'],'i386')
call cmp_os_pkg(\@tbl,'sysstat',['7.0.0','3.el5'],'i386')
call cmp_os_pkg(\@tbl,'xorg-x11-libs-compat',['6.8.2','1.EL.33.0.1'],'i386')
# Set the final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL5/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 5 32-bit system.%BR%The minimal versions of the RPM's are ``binutils-2.17.50.0.6-6.0.1.i386 (for U1 or U2)``, ``binutils-2.17.50.0.6-9.0.1.i386 (for U3)``, ``compat-glibc-2.3.4-2.26``, ``compat-libstdc++-296-2.96-138``, ``compat-libstdc++-33-3.2.3-61``, ``gcc-4.1.2-14.el5``, ``gcc-c++-4.1.2-14.el5``, ``gdbm-1.8.0-26.2.13``, ``glibc-2.5-123``, ``glibc-common-2.5-123``, ``glibc-devel-2.5-12``, ``libXp-1.0.0-8.1.el5``, ``libaio-0.3.106-3.23``, ``libgcc-4.1.2-14.el53``, ``libgomp-4.1.2-14.el5``, ``libstdc++-4.1.2-14.el53``, ``libstdc++-devel-4.1.2-14.el5``, ``make-3.81-1.13``, ``openmotif21-2.1.30-11.EL5.i386``, ``sysstat-7.0.0-3.el5``, and ``xorg-x11-libs-compat-6.8.2-1.EL.33.0.1.i386``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL5/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-glibc``, ``compat-libstdc++-296``, ``compat-libstdc++-33``, ``gcc``, ``gcc-c++``, ``gdbm``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``libXp``, ``libaio``, ``libgcc``, ``libgomp``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``sysstat``, and ``xorg-x11-libs-compat`` packages are installed on your Oracle Linux 4 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00240" mode="VERIFY" name="RPM OL5/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL5 64" result="SKIPPED" value="Not Oracle Linux 5 64-bit"><![CDATA[This rule applies for Oracle Linux 5 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check binutils
call cmp_os_pkg(\@tbl,'binutils',check(cmp_kernel('EL5','2.6.18-128'),\
  'Adequate','2.17.50.0.6-9.0.1','2.17.50.0.6-6.0.1'),'x86_64')
# Check other RPMs
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','138'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'],'i386')
call cmp_os_pkg(\@tbl,'gcc',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.1'],'i386')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.1'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.5','18'],'i686')
call cmp_os_pkg(\@tbl,'glibc',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-common',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','18'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'i386')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.2'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libgomp',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.81','1.1'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['7.0.0','3.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'util-linux',['2.13','0.45.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'xorg-x11-libs-compat',['6.8.2','1.EL.33.0.1'],'i386')
# Set final result
call cmp_os_pkg(\@tbl,'binutils',['2.15.92.0.2','25'])
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL5/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 5 64-bit system.%BR%The minimal version are ``binutils-2.17.50.0.6-6.0.1.x86_64 (for U1 or U2)``, ``binutils-2.17.50.0.6-9.0.1.x86_64 (for U3)``, ``compat-libstdc++-296-2.96-138.i386``, ``compat-libstdc++-33-3.2.3-61.i386``, ``gcc-4.1.2-14.el5.x86_64``, ``gcc-c++-4.1.2-14.el5.x86_64``, ``gdbm-1.8.0-26.2.1.i386``, ``gdbm-1.8.0-26.2.1.x86_64``, ``glibc-2.5-18.i686``, ``glibc-2.5-18.x86_64``, ``glibc-common-2.5-18.x86_64``, ``glibc-devel-2.5-18.i386``, ``glibc-devel-2.5-18.x86_64``, ``libXp-1.0.0-8.1.el5.i386``, ``libXp-1.0.0-8.1.el5.x86_64``, ``libaio-0.3.106-3.2.i386``, ``libaio-0.3.106-3.2.x86_64``, ``libgcc-4.1.2-14.el5.i386``, ``libgcc-4.1.2-14.el5.x86_64``, ``libgomp-4.1.2-14.el5.x86_64``, ``libstdc++-4.1.2-14.el5.i386``, ``libstdc++-4.1.2-14.el5.x86_64``, ``libstdc++-devel-4.1.2-14.el5.i386``, ``libstdc++-devel-4.1.2-14.el5.x86_64``, ``make-3.81-1.1.x86_64``, ``openmotif21-2.1.30-11.EL5.i386``, ``sysstat-7.0.0-3.el5.x86_64``, ``util-linux-2.13-0.45.el5.x86_64``, and ``xorg-x11-libs-compat-6.8.2-1.EL.33.0.1.i386``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL5/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-libstdc++``, ``gcc``, ``gcc-c++``, ``gdbm``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``libXp``, ``libaio``, ``libgcc``, ``libgomp``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``sysstat``, ``util-linux``, and ``xorg-x11-libs-compat`` packages are installed on your Oracle Linux 5 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00242" mode="VERIFY" name="RPM OL6/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="OL6 64" result="SKIPPED" value="Not Oracle Linux 6 64-bit"><![CDATA[This rule applies for Oracle Linux 6 64-bit on x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i[3-6]86')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'32-bit','i[3-6]86',\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(32-bit)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.20.51.0.2','5.11'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','144.el6'],'i686')
call cmp_os_pkg(\@tbl,'compat-libstdc++33',['3.2.3','69.el6'],'i686')
call cmp_os_pkg(\@tbl,'gcc',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','36.el6'],'i686')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','36.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.12','1.7.el6'],'32-bit','i[3-6]86')
call cmp_os_pkg(\@tbl,'glibc',['2.12','1.7.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-common',['2.12','1.7.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.12','1.7.el6'],'32-bit','i[3-6]86')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.12','1.7.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.107','10.el6'],'i686')
call cmp_os_pkg(\@tbl,'libaio',['0.3.107','10.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['4.4.4','13.el6'],'i686')
call cmp_os_pkg(\@tbl,'libgcc',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libgomp',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['4.4.4','13.el6'],'i686')
call cmp_os_pkg(\@tbl,'libstdc++',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.4.4','13.el6'],'i686')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.4.4','13.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','15.1.el6'],'i686')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','15.1.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.81','19.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['9.0.4','11.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'util-linux-ng',['2.17.2','6.el6'],'x86_64')
call cmp_os_pkg(\@tbl,'unzip',['5.52','3.0.1.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'xorg-x11-libs-compat',['6.8.2','1.EL.33.0.1'],'32-bit',\
                                                                    'i[3-6]86')
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'OL6/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Oracle Linux 6 64-bit system.%BR%The minimal version are ``binutils-2.20.51.0.2-5.11``, ``compat-libstdc++-296-2.96-144.el6.i686``, ``compat-libstdc++33-3.2.3-69.el6.i686``, ``gcc-4.4.4-13.el6.x86_64``, ``gcc-c++-4.4.4-13.el6.x86_64``, ``gdbm-1.8.0-36.el6.i686``, ``gdbm-1.8.0-36.el6.x86_64``, ``glibc-2.12-1.7.el6.i686``, ``glibc-2.12-1.7.el6.x86_64``, ``glibc-common-2.12-1.7.el6.x86_64``, ``glibc-devel-2.12-1.7.el6.i686``, ``glibc-devel-2.12-1.7.el6.x86_64``, ``libaio-0.3.107-10.el6.i686``, ``libaio-0.3.107-10.el6.x86_64``, ``libgcc-4.4.4-13.el6.i686``, ``libgcc-4.4.4-13.el6.x86_64``, ``libgomp-4.4.4-13.el6.x86_64``, ``libstdc++-4.4.4-13.el6.i686``, ``libstdc++-4.4.4-13.el6.x86_64``, ``libstdc++-devel-4.4.4-13.el6.i686``, ``libstdc++-devel-4.4.4-13.el6.x86_64``, ``libXp-1.0.0-15.el6.i686``, ``libXp-1.0.0-15.el6.x86_64``, ``make-3.81-19.el6.x86_64``, ``sysstat-9.0.4-11.el6.x86_64``, ``util-linux-ng-2.17.2-6.3l6.x86_64``, ``unzip-5.52-3.0.1.el5.x86_64``, ``xorg-x11-libs-compat-6.8.2-1.EL.33.0.1.i386``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="OL6/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-libstdc++-296``, ``compat-libstdc++33``, ``gcc``, ``gcc-c++``, ``gdbm``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``libaio``, ``libgcc``, ``libgomp``, ``libstdc++``, ``libstdc++-devel``, ``libXp``, ``make``, ``openmotif21``, ``sysstat``, ``util-linux-ng``, ``unzip``, and ``xorg-x11-libs-compat`` packages are installed on your Oracle Linux 6 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00250" mode="VERIFY" name="RPM RH3/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH3 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 3 32-bit"><![CDATA[This rule applies for Red Hat Enterprise Linux AS/ES 3 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.14.90.0.4','35'])
call cmp_os_pkg(\@tbl,'compat-db',['4.0.14','5'])
call cmp_os_pkg(\@tbl,'compat-gcc',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'compat-gcc-c++',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'compat-libstdc++',['7.3','2.96.128'])
call cmp_os_pkg(\@tbl,'gcc',['3.2.3','42'])
call cmp_os_pkg(\@tbl,'gcc-c++',['3.2.3','42'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.2','95.27'])
call cmp_os_pkg(\@tbl,'glibc-common',['2.3.2','95.27'])
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.2.90','34.1'])
call cmp_os_pkg(\@tbl,'libaio',['0.3.96','5'])
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.96','5'])
call cmp_os_pkg(\@tbl,'libgcc',['3.2.3','42'])
call cmp_os_pkg(\@tbl,'libstdc++',['3.2.3','42'])
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.2.3','42'])
call cmp_os_pkg(\@tbl,'make',['3.79.1','17'])
call cmp_os_pkg_range(\@tbl,'openmotif21',[['2.1.30','8'],'2.1.31'],'i386')
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','21'])
call cmp_os_pkg(\@tbl,'setarch',['1.3','1'])
call cmp_os_pkg(\@tbl,'sysstat',['4.0.7','4.EL3.3'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH3/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Red Hat Enterprise Linux AS/ES 3 32-bit system.%BR%The minimal versions are ``binutils-2.14.90.0.4-35``, ``compat-db-4.0.14-5``, ``compat-gcc-7.3-2.96.128``, ``compat-gcc-c++-7.3-2.96.128``, ``compat-libstdc++-7.3-2.96.128``, ``gcc-3.2.3-42``, ``gcc-c++-3.2.3-42``, ``glibc-2.3.2-95.27``, ``glibc-common-2.3.2-95.27``, ``gnome-libs-1.4.1.2.90-34.1``, ``libaio-0.3.96-5``, ``libaio-devel-0.3.96-5``, ``libgcc-3.2.3-42``, ``libstdc++-3.2.3-42``, ``libstdc++-devel-3.2.3-42``, ``make-3.79.1-17``, ``openmotif21-2.1.30-8``, ``pdksh-5.2.14-21``, ``setarch-1.3-1``, and ``sysstat-4.0.7-4.EL3.3``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH3/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``compat-gcc``, ``compat-gcc-c++``, ``compat-libstdc++``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-common``, ``gnome-libs``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``pdksh``, ``setarch``, and ``sysstat`` packages are installed on your Red Hat Enterprise Linux AS/ES 3 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00270" mode="VERIFY" name="RPM RH4/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH4 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 4 32-bit"><![CDATA[This rule applies for Red Hat Enterprise Linux AS/ES 4 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.15.92.0.2','21'])
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'])
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','132.7.2'])
call cmp_os_pkg(\@tbl,'control-center',['2.8.0','12.rhel4.5'])
call cmp_os_pkg(\@tbl,'gcc',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'gcc-c++',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'])
call cmp_os_pkg(\@tbl,'glibc-common',['2.3.4','2.25'])
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.2.90','44.1'])
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'])
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.105','2'])
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'])
call cmp_os_pkg(\@tbl,'make',['3.80','6.EL4'])
call cmp_os_pkg_range(\@tbl,'openmotif21',[['2.1.30','11.RHEL4_6'],'2.1.31'],'i386',['(RHEL\d)\.(\d+)','$1_$2'])
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','30.3'])
call cmp_os_pkg(\@tbl,'setarch',['1.6','1'])
call cmp_os_pkg(\@tbl,'sysstat',['5.0.5','11.rhel4'])
call cmp_os_pkg(\@tbl,'xscreensaver',['4.18','5.rhel4.11'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH4/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Red Hat Enterprise Linux AS/ES 4 32-bit system.
]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH4/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``compat-libstdc++-296``, ``control-center``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-common``, ``gnome-libs``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``pdksh``, ``setarch``, ``sysstat``, and ``xscreensaver`` packages are installed on your Red Hat Enterprise Linux AS/ES 4 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. The minimal version are ``binutils-2.15.92.0.2-21``, ``compat-db-4.1.25-9``, ``compat-libstdc++-296-2.96-132.7.2``, ``control-center-2.8.0-12.rhel4.5``, ``gcc-3.4.6-3``, ``gcc-c++-3.4.6-3``, ``glibc-2.3.4-2.25``, ``glibc-common-2.3.4-2.25``, ``gnome-libs-1.4.1.2.90-44.1``, ``libaio-0.3.105-2``, ``libaio-devel-0.3.105-2``, ``libgcc-3.4.6-3``, ``libstdc++-3.4.6-3``, ``libstdc++-devel-3.4.6-3``, ``make-3.80-6.EL4``, ``openmotif21-2.1.30-11.RHEL4``, ``pdksh-5.2.14-30.3``, ``setarch-1.6-1``, ``sysstat-5.0.5-11.rhel4``, and ``xscreensaver-4.18-5.rhel4.11``.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00280" mode="VERIFY" name="RPM RH4/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH4 64" result="SKIPPED" value="Not Red Hat Enterprise Linux 4 64-bit"><![CDATA[This rule applies for Red Hat Enterprise Linux AS/ES 4 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.15.92.0.2','21'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'],'i386')
call cmp_os_pkg(\@tbl,'compat-db',['4.1.25','9'],'x86_64')
call cmp_os_pkg(\@tbl,'control-center',['2.8.0','12.rhel4.5'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'],'i686')
call cmp_os_pkg(\@tbl,'glibc',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-common',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.3.4','2.25'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.3.4','2.25'],'x86_64')
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.2.90','44.1'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.105','2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.105','2'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.4.6','3'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.80','6.EL4'],'x86_64')
call cmp_os_pkg_range(\@tbl,'openmotif21',[['2.1.30','11.RHEL4_6'],'2.1.31'],'i386',['(RHEL\d)\.(\d+)','$1_$2'])
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','30.3'],'x86_64')
call cmp_os_pkg(\@tbl,'setarch',['1.6','1'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['5.0.5','11.rhel4'],'x86_64')
call cmp_os_pkg(\@tbl,'xscreensaver',['4.18','5.rhel4.11'],'x86_64')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH4/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Red Hat Enterprise Linux AS/ES 4 32-bit system.%BR%The minimal version are ``binutils-2.15.92.0.2-21.x86_64``, ``compat-db-4.1.25-9.i386``, ``compat-db-4.1.25-9.x86_64``, ``control-center-2.8.0-12.rhel4.5.x86_64``, ``gcc-3.4.6-3.x86_64``, ``gcc-c++-3.4.6-3.x86_64``, ``glibc-2.3.4-2.25.i686``, ``glibc-2.3.4-2.25.x86_64``, ``glibc-common-2.3.4-2.25.x86_64``, ``glibc-devel-2.3.4-2.25.i386``, ``glibc-devel-2.3.4-2.25.x86_64``, ``gnome-libs-1.4.1.2.90-44.1.x86_64``, ``libaio-0.3.105-2.i386``, ``libaio-0.3.105-2.x86_64``, ``libaio-devel-0.3.105-2.x86_64``, ``libgcc-3.4.6-3.i386``, ``libgcc-3.4.6-3.x86_64``, ``libstdc++-3.4.6-3.i386``, ``libstdc++-3.4.6-3.x86_64``, ``libstdc++-devel-3.4.6-3.i386``, ``libstdc++-devel-3.4.6-3.x86_64``, ``make-3.80-6.EL4.x86_64``, ``openmotif21-2.1.30-11.RHEL4.6.i386``, ``pdksh-5.2.14-30.3.x86_64``, ``setarch-1.6-1.x86_64``, ``sysstat-5.0.5-11.rhel4.x86_64``, ``xscreensaver-4.18-5.rhel4.11.x86_64.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH4/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-db``, ``control-center``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``gnome-libs``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``pdksh``, ``setarch``, ``sysstat``, and ``xscreensaver`` packages are installed on your Red Hat Enterprise Linux AS/ES 4 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00290" mode="VERIFY" name="RPM RH5/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH5 32" result="SKIPPED" value="Not Red Hat Enterprise Linux 5 32-bit"><![CDATA[This rule applies for Red Hat Enterprise Linux 5 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386',undef,\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check binutils
call cmp_os_pkg(\@tbl,'binutils',check(cmp_kernel('RH 5.0','2.6.18-128'),\
  'Adequate','2.17.50.0.6-9.0.1','2.17.50.0.6-6.0.1'),'i386')
# Check other RPMs
call cmp_os_pkg(\@tbl,'compat-glibc',['2.3.4','2.26'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','138'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'],'i386')
call cmp_os_pkg(\@tbl,'gcc',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.13'],'i386')
call cmp_os_pkg(\@tbl,'glibc',['2.5','123'],'i386')
call cmp_os_pkg(\@tbl,'glibc-common',['2.5','123'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','12'],'i386')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.23'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el53'],'i386')
call cmp_os_pkg(\@tbl,'libgomp',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el53'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'make',['3.81','1.13'],'i386')
call cmp_os_pkg(\@tbl,'sysstat',['7.0.0','3.el5'],'i386')
call cmp_os_pkg(\@tbl,'xorg-x11-libs-compat',['6.8.2','1.EL.33.0.1'],'i386')
# Set the final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH5/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Red Hat Enterprise Linux 5 32-bit system.%BR%The minimal version of the RPM's are ``binutils-2.17.50.0.6-6.0.1.i386 (for U1 or U2)``, ``binutils-2.17.50.0.6-9.0.1.i386 (for U3)``, ``compat-glibc-2.3.4-2.26``, ``compat-libstdc++-296-2.96-138``, ``compat-libstdc++-33-3.2.3-61``, ``gcc-4.1.2-14.el5``, ``gcc-c++-4.1.2-14.el5``, ``gdbm-1.8.0-26.2.13``, ``glibc-2.5-123``, ``glibc-common-2.5-123``, ``glibc-devel-2.5-12``, ``libXp-1.0.0-8.1.el5``, ``libaio-0.3.106-3.23``, ``libgcc-4.1.2-14.el53``, ``libgomp-4.1.2-14.el5``, ``libstdc++-4.1.2-14.el53``, ``libstdc++-devel-4.1.2-14.el5``, ``make-3.81-1.13``, ``openmotif21-2.1.30-11.EL5.i386``, ``sysstat-7.0.0-3.el5``, and ``xorg-x11-libs-compat-6.8.2-1.EL.33.0.1.i386``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH5/32rpmnOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-glibc``, ``compat-libstdc++-296``, ``compat-libstdc++-33``, ``gcc``, ``gcc-c++``, ``gdbm``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``libXp``, ``libaio``, ``libgcc``, ``libgomp``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``sysstat``, and ``xorg-x11-libs-compat`` packages are installed on your Red Hat Enterprise Linux 5 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00300" mode="VERIFY" name="RPM RH5/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="RH5 64" result="SKIPPED" value="Not Red Hat Enterprise Linux 5 64-bit"><![CDATA[This rule applies for Red Hat Enterprise Linux 5 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif
if chk_os_pkg('openmotif21','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30')
   call cmp_os_pkg(\@tbl,'openmotif21',['2.1.30','11'],'i386','i386',\
                                       '(RH|rh)?(EL|el)\d.*$')
  else
   push(@tbl,concat('[openmotif21 ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21(i386)] not installed')
# Check binutils
call cmp_os_pkg(\@tbl,'binutils',check(cmp_kernel('RH 5.0','2.6.18-128'),\
  'Adequate','2.17.50.0.6-9.0.1','2.17.50.0.6-6.0.1'),'x86_64')
# Check other RPMs
call cmp_os_pkg(\@tbl,'compat-libstdc++-296',['2.96','138'],'i386')
call cmp_os_pkg(\@tbl,'compat-libstdc++-33',['3.2.3','61'],'i386')
call cmp_os_pkg(\@tbl,'gcc',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.1'],'i386')
call cmp_os_pkg(\@tbl,'gdbm',['1.8.0','26.2.1'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.5','18'],'i686')
call cmp_os_pkg(\@tbl,'glibc',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-common',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','18'],'i386')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.5','18'],'x86_64')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'i386')
call cmp_os_pkg(\@tbl,'libXp',['1.0.0','8.1.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.2'],'i386')
call cmp_os_pkg(\@tbl,'libaio',['0.3.106','3.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libgomp',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'i386')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.2','14.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.81','1.1'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['7.0.0','3.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'util-linux',['2.13','0.45.el5'],'x86_64')
call cmp_os_pkg(\@tbl,'xorg-x11-libs-compat',['6.8.2','1.EL.33.0.1'],'i386')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RH5/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an Red Hat Enterprise Linux 5 32-bit system.%BR%The minimal version are ``binutils-2.17.50.0.6-6.0.1.x86_64 (for U1 or U2)``, ``binutils-2.17.50.0.6-9.0.1.x86_64 (for U3)``, ``compat-libstdc++-296-2.96-138.i386``, ``compat-libstdc++-33-3.2.3-61.i386``, ``gcc-4.1.2-14.el5.x86_64``, ``gcc-c++-4.1.2-14.el5.x86_64``, ``gdbm-1.8.0-26.2.1.i386``, ``gdbm-1.8.0-26.2.1.x86_64``, ``glibc-2.5-18.i686``, ``glibc-2.5-18.x86_64``, ``glibc-common-2.5-18.x86_64``, ``glibc-devel-2.5-18.i386``, ``glibc-devel-2.5-18.x86_64``, ``libXp-1.0.0-8.1.el5.i386``, ``libXp-1.0.0-8.1.el5.x86_64``, ``libaio-0.3.106-3.2.i386``, ``libaio-0.3.106-3.2.x86_64``, ``libgcc-4.1.2-14.el5.i386``, ``libgcc-4.1.2-14.el5.x86_64``, ``libgomp-4.1.2-14.el5.x86_64``, ``libstdc++-4.1.2-14.el5.i386``, ``libstdc++-4.1.2-14.el5.x86_64``, ``libstdc++-devel-4.1.2-14.el5.i386``, ``libstdc++-devel-4.1.2-14.el5.x86_64``, ``make-3.81-1.1.x86_64``, ``openmotif21-2.1.30-11.EL5.i386``, ``sysstat-7.0.0-3.el5.x86_64``, ``util-linux-2.13-0.45.el5.x86_64``, and ``xorg-x11-libs-compat-6.8.2-1.EL.33.0.1.i386``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="RH5/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat-libstdc++``, ``gcc``, ``gcc-c++``, ``gdbm``, ``glibc``, ``glibc-common``, ``glibc-devel``, ``libXp``, ``libaio``, ``libgcc``, ``libgomp``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21``, ``sysstat``, ``util-linux``, and ``xorg-x11-libs-compat`` packages are installed on your Red Hat Enterprise Linux 5 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.  
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00310" mode="VERIFY" name="RPM SLES9/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-9 32" result="SKIPPED" value="Not SuSE Linux Enterprise 9 32-bit"><![CDATA[This rule applies for SuSE Linux Enterprise 9 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
var @tbl = ()
# Check openmotif21-libs
if chk_os_pkg('openmotif21-libs','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30MLI4')
   call cmp_os_pkg(\@tbl,'openmotif21-libs','2.1.30MLI4.119.1','i386')
  else
   push(@tbl,concat('[openmotif21-libs ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21-libs(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.15.90.0.1.1','32.10'])
call cmp_os_pkg(\@tbl,'compat',['2004.7.1','1.2'])
call cmp_os_pkg(\@tbl,'db1',['1.85','89'])
call cmp_os_pkg(\@tbl,'gcc',['3.3.3','43.24'])
call cmp_os_pkg(\@tbl,'gcc-c++',['3.3.3','43.24'])
call cmp_os_pkg(\@tbl,'glibc',['2.3.3','98.61'])
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.7','671.1'])
call cmp_os_pkg(\@tbl,'gnome-libs-devel',['1.4.1.7','671.1'])
call cmp_os_pkg(\@tbl,'libaio',['0.3.102','1.2'])
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.102','1.2'])
call cmp_os_pkg(\@tbl,'libgcc',['3.3.3','43.41'])
call cmp_os_pkg(\@tbl,'libstdc++',['3.3.3','43.24'])
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.3.3','43.24'])
call cmp_os_pkg(\@tbl,'make',['3.80','184.1'])
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','780.7'])
call cmp_os_pkg(\@tbl,'sysstat',['5.0.1','35.1'])
call cmp_os_pkg(\@tbl,'xscreensaver',['4.16','2.6'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES9/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 9 32-bit system.%BR%The minimal version are ``binutils-2.15.90.0.1.1-32.10``, ``compat-2004.7.1-1.2``, ``db1-1.85-89``, ``gcc-3.3.3-43.24``, ``gcc-c++-3.3.3-43.24``, ``glibc-2.3.3-98.61``, ``gnome-libs-1.4.1.7-671.1``, ``gnome-libs-devel-1.4.1.7-671.1``, ``libaio-0.3.102-1.2``, ``libaio-devel-0.3.102-1.2``, ``libgcc-3.3.3-43.41``, ``libstdc++-3.3.3-43.24``, ``libstdc++-devel-3.3.3-43.24``, ``make-3.80-184.1``, ``openmotif21-libs-2.1.30MLI4-119.1``, ``pdksh-5.2.14-780.7``, ``sysstat-5.0.1-35.1``, and ``xscreensaver-4.16-2.6``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES9/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat``, ``db1``, ``gcc``, ``gcc-c++``, ``glibc``, ``gnome-libs``, ``gnome-libs-devel``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, ``openmotif21-libs``, ``pdksh``, ``sysstat``, and ``xscreensaver`` packages are installed on your SuSE Linux Enterprise 9 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00320" mode="VERIFY" name="RPM SLES9/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-9 64" result="SKIPPED" value="Not SuSE Linux Enterprise 9 64-bit"><![CDATA[This rule applies for SuSE Linux Enterprise 9 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
call cmp_os_pkg(\@tbl,'binutils',['2.15.90.0.1.1','32.10'],'x86_64')
call cmp_os_pkg(\@tbl,'binutils-32bit',['9','200505232206'],'x86_64')
call cmp_os_pkg(\@tbl,'compat',['2004.7.1','1.2'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-sles8',['1.3','93.3'],'x86_64')
call cmp_os_pkg(\@tbl,'db-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'db1-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc',['3.3.3','43.41'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['3.3.3','43.41'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.3.3','98.61'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-32bit',['9','200512100800'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel-32bit',['9','200512100801'],'x86_64')
call cmp_os_pkg(\@tbl,'gnome-libs',['1.4.1.7','671.1'],'x86_64')
call cmp_os_pkg(\@tbl,'gnome-libs-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'gnome-libs-devel',['1.4.1.7','671.1'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.102','1.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-32bit',['9','200502241149'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.102','1.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel-32bit',['9','200502241149'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['3.3.3','43.41'],'x86-64')
call cmp_os_pkg(\@tbl,'libstdc++',['3.3.3','43.41'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['3.3.3','43.41'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel-32bit',['9','200407011229'],'x86_64')
call cmp_os_pkg(\@tbl,'linux32',['1.0','341.1'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.80','184.1'],'x86_64')
call cmp_os_pkg(\@tbl,'openmotif21-libs-32bit',['9','200511172351'],'x86_64')
call cmp_os_pkg(\@tbl,'pdksh',['5.2.14','780.7'],'x86_64')
call cmp_os_pkg(\@tbl,'sysstat',['5.0.1','35.7'],'x86_64')
call cmp_os_pkg(\@tbl,'XFree86-devel-32bit',['9','200512021458'],'x86_64')
call cmp_os_pkg(\@tbl,'xscreensaver',['4.16','2.6'],'x86_64')
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES9/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 9 64-bit system.%BR%The minimal version are XFree86-devel-32bit-9-200512021458.x86_64``, ``binutils-2.15.90.0.1.1-32.10.x86_64``, ``binutils-32bit-9-200505232206.x86_64``, ``compat-2004.7.1-1.2.x86_64``, ``compat-32bit-9-200407011229.x86_64``, ``compat-sles8-1.3-93.3.x86_64``, ``db-32bit-9-200407011229.x86_64``, ``db1-32bit-9-200407011229.x86_64``, ``gcc-3.3.3-43.41.x86_64``, ``gcc-c++-3.3.3-43.41.x86_64``, ``glibc-2.3.3-98.61.x86_64``, ``glibc-32bit-9-200512100800.x86_64``, ``glibc-devel-32bit-9-200512100801.x86_64``, ``gnome-libs-1.4.1.7-671.1.x86_64``, ``gnome-libs-32bit-9-200407011229.x86_64``, ``gnome-libs-devel-1.4.1.7-671.1.x86_64``, ``libaio-0.3.102-1.2.x86_64``, ``libaio-32bit-9-200502241149.x86_64``, ``libaio-devel-0.3.102-1.2.x86_64``, ``libaio-devel-32bit-9-200407011229.x86_64``, ``libaio-devel-32bit-9-200502241149.x86_64``, ``libgcc-3.3.3-43.41.x86-64``, ``libstdc++-3.3.3-43.41.x86_64``, ``libstdc++-devel-3.3.3-43.41.x86_64``, ``libstdc++-devel-32bit-9-200407011229.x86_64``, ``linux32-1.0-341.1.x86_64``, ``make-3.80-184.1.x86_64``, ``openmotif21-libs-32bit-9-200511172351.x86_64``, ``pdksh-5.2.14-780.7.x86_64``, ``sysstat-5.0.1-35.7.x86_64``, and ``xscreensaver-4.16-2.6.x86_64``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES9/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``binutils-32bit``, ``compat``, ``compat-32bit``, ``compat-sles8``, ``db-32bit``, ``db1-32bit``, ``gcc-3.3.3``, ``gcc-c++``, ``glibc``, ``glibc-32bit``, ``glibc-devel-32bit``, ``gnome-libs``, ``gnome-libs``, ``gnome-libs-devel``, ``libaio``, ``libaio-32bit``, ``libaio-devel``, ``libaio-devel-32bit``, ``libaio-devel-32bit``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``libstdc++-devel-32bit``, ``linux32``, ``make``, ``openmotif21-libs-32bit``, ``pdksh``, ``sysstat``, ``XFree86-devel-32bit``, and ``xscreensaver`` packages are installed on your SuSE Linux Enterprise 9 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct version of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00330" mode="VERIFY" name="RPM SLES10/32 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-10 32" result="SKIPPED" value="Not SuSE Linux Enterprise 10 32-bit"><![CDATA[This rule applies for SuSE Linux Enterprise 10 32-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif21
if chk_os_pkg('openmotif21-libs','i386')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30MLI4')
   call cmp_os_pkg(\@tbl,'openmotif21-libs','2.1.30MLI4.143.2','i386')
  else
   push(@tbl,concat('[openmotif21-libs ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21-libs(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.16.91.0.5','23.4'])
call cmp_os_pkg(\@tbl,'compat',['2006.1.25','11.2'])
call cmp_os_pkg(\@tbl,'compat-libstdc++',['5.0.7','22.2'])
call cmp_os_pkg(\@tbl,'db1',['1.85','101.2'])
call cmp_os_pkg(\@tbl,'gcc',['4.1.0','28.4'])
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.0','28.4'])
call cmp_os_pkg(\@tbl,'glibc',['2.4','31.2'])
call cmp_os_pkg(\@tbl,'glibc-devel',['2.4','31.2'])
call cmp_os_pkg(\@tbl,'libaio',['0.3.104','14.2'])
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.104','14.2'])
call cmp_os_pkg(\@tbl,'libgcc',['4.1.0','28.4'])
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.0','28.4'])
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.0','28.4'])
call cmp_os_pkg(\@tbl,'make',['3.80','202.2'])
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES10/32rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 10 32-bit system.%BR%The minimal version are ``binutils-2.16.91.0.5-23.4``, ``compat-2006.1.25-11.2``, ``compat-libstdc++-5.0.7-22.2``, ``db1-1.85-101.2``, ``gcc-4.1.0-28.4``, ``gcc-c++-4.1.0-28.4``, ``glibc-2.4-31.2``, ``glibc-devel-2.4-31.2``, ``libaio-0.3.104-14.2``, ``libaio-devel-0.3.104-14.2``, ``libgcc-4.1.0-28.4``, ``libstdc++-4.1.0-28.4``, ``libstdc++-devel-4.1.0-28.4``, ``make-3.80-202.2``, and ``openmotif21-libs-2.1.30MLI4-143.2``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES10/32rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``compat``, ``compat-libstdc++``, ``db1``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-devel``, ``libaio``, ``libaio-devel``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``make``, and ``openmotif21-libs`` packages are installed on your SuSE Linux Enterprise 10 32-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00340" mode="VERIFY" name="RPM SLES10/64 OK? ">
<sdp_dependencies>
<sdp_dependency condition="==" id="A00100" minimum="SLES-10 64" result="SKIPPED" value="Not SuSE Linux Enterprise 10 64-bit"><![CDATA[This rule applies for SuSE Linux Enterprise 10 64-bit on x86 or x86_64 processor(s) only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
# Check openmotif21
if chk_os_pkg('openmotif21-libs-32bit')
{while get_os_pkg()
 {var ($ver,$rel) = (last)
  if compare('eq',$ver,'2.1.30MLI4')
   call cmp_os_pkg(\@tbl,'openmotif21-libs','2.1.30MLI4.143.2')
  else
   push(@tbl,concat('[openmotif21-libs ',$ver,'-',$rel,'] found'))
 }
}
else
 push(@tbl,'[openmotif21-libs(i386)] not installed')
# Check other RPMs
call cmp_os_pkg(\@tbl,'binutils',['2.16.91.0.5','23.4'],'x86_64')
call cmp_os_pkg(\@tbl,'binutils-32bit',['2.16.91.0.5','23.4'],'x86_64')
call cmp_os_pkg(\@tbl,'compat',['2006.1.25','11.2'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-32bit',['2006.1.25','11.2'],'x86_64')
call cmp_os_pkg(\@tbl,'compat-libstdc++',['5.0.7','22.2'],'x86_64')
call cmp_os_pkg(\@tbl,'db1-32bit',['1.85','101.2'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc',['4.1.0','28.4'],'x86_64')
call cmp_os_pkg(\@tbl,'gcc-c++',['4.1.0','28.4'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc',['2.4','31.2'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-32bit',['2.4','31.2'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel',['2.4','31.2'],'x86_64')
call cmp_os_pkg(\@tbl,'glibc-devel-32bit',['2.4','31.2'],'x86_64')
call cmp_os_pkg(\@tbl,'krb5',['1.4.3','19.17'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio',['0.3.104','14.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-32bit',['0.3.104','14.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel',['0.3.104','14.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libaio-devel-32bit',['0.3.104','14.2'],'x86_64')
call cmp_os_pkg(\@tbl,'libcom_err',['1.38','25.21'],'x86_64')
call cmp_os_pkg(\@tbl,'libgcc',['4.1.0','28.4'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++',['4.1.0','28.4'],'x86_64')
call cmp_os_pkg(\@tbl,'libstdc++-devel',['4.1.0','28.4'],'x86_64')
call cmp_os_pkg(\@tbl,'linux32',['1.0','349.2'],'x86_64')
call cmp_os_pkg(\@tbl,'make',['3.80','202.2'],'x86_64')
# Set final result
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'SLES10/64rpmsOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that correct versions of the required RPMs are installed on an SuSE Linux Enterprise 10 64-bit system.%BR%The minimal version are ``binutils-2.16.91.0.5-23.4``, ``binutils-32bit-2.16.91.0.5-23.4``, ``compat-2006.1.25-11.2``, ``compat-32bit-2006.1.25-11.2``, ``compat-libstdc++-5.0.7-22.2``, ``db1-32bit-1.85-101.2``, ``gcc-4.1.0-28.4``, ``gcc-c++-4.1.0-28.4``, ``glibc-2.4-31.2``, ``glibc-32bit-2.4-31.2``, ``glibc-devel-2.4-31.2``, ``glibc-devel-32bit-2.4-31.2``, ``krb5-1.4.3-19.17``, ``libaio-0.3.104-14.2``, ``libaio-32bit-0.3.104-14.2``, ``libaio-devel-0.3.104-14.2``, ``libaio-devel-32bit-0.3.104-14.2``, ``libcom_err-1.38-25.21``, ``libgcc-4.1.0-28.4``, ``libstdc++-4.1.0-28.4``, ``libstdc++-devel-4.1.0-28.4``, ``linux32-1.0-349.2``, ``make-3.80-202.2``, and ``openmotif21-libs-32bit-2.1.30MLI4-143.2``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="SLES10/64rpmsOK" result="PASSED"><![CDATA[The correct ``binutils``, ``binutils-32bit``, ``compat``, ``compat-32bit``, ``compat-libstdc++``, ``db1-32bit``, ``gcc``, ``gcc-c++``, ``glibc``, ``glibc-32bit``, ``glibc-devel``, ``glibc-devel-32bit``, ``krb5``, ``libaio``, ``libaio-32bit``, ``libaio-devel``, ``libaio-devel-32bit``, ``libcom_err``, ``libgcc``, ``libstdc++``, ``libstdc++-devel``, ``linux32``, ``make``, and ``openmotif21-libs-32bit`` packages are installed on your SuSE Linux Enterprise 10 64-bit system. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some required RPM's are not installed on your system or some installed RPM's have an incorrect version. Install correct versions of the RPM's.
|*Return Value*|*Action*|
|... found|An incorrect version of the RPM was detected. Install a correct version.|
|... not installed|A required RPM is not installed. Install the required RPM.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00350" mode="VERIFY" name="Motif Link">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^(OL5|RH5)" result="SKIPPED" value="Not Enterprise or RedHat Linux 5"><![CDATA[This rule applies for Enterprise Linux 5 or Red Hat Enterprise Linux 5 on a x86 or x86_64 processor only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
call setHcveResult(cond(grepCommand(concat(findCommand('ls'),\
                        ' -l /usr/lib/libXtst.so.6'), 'libXtst\.so\.6\.1','f'),\
                   'MotifLinkOK', 'MissingMotifLink'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the symbolic link ``/usr/X11R6/lib/libXtst.so.6.1`` to ``/usr/lib/libXtst.so.6`` exists.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="MotifLinkOK" result="PASSED"><![CDATA[The required Motif link exists on the system.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[There is no symbolic link from ``/usr/X11R6/lib/libXtst.so.6.1`` to ``/usr/lib/libXtst.so.6``. Please create it.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00360" mode="VERIFY" name="ENV Variable Unset">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^SLES-10" result="SKIPPED" value="Not SuSE Linux Enterprise 10"><![CDATA[This rule applies for SuSE Linux Enterprise 10 on an x86 or x86_64 processor only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
call setHcveResult(cond(defined(getEnv('ENV')),'ENVset','ENVnotSet'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ENV environment variable is unset on a SuSE Linux Enterprise 10 system.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="ENVnotSet" result="PASSED"><![CDATA[The ENV environment variable is not set in your environment. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The ENV environment variable is set in your environment. Unset it before starting the installation.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00370" mode="VERIFY" name="Got Software Tools?">
<sdp_command type="RDA"><![CDATA[import $OS_BIT
var @tbl = ()
macro find_exe
{var (\@tbl,$exe,$ref) = @arg
 if findCommand($exe)
 {var $cmd = readLink(last,last)
  if !compare('eq',$cmd,$ref)
   call push(@tbl,concat(ucfirst($exe),'Elsewhere'))
 }
 else
  call push(@tbl,concat(ucfirst($exe),'NotFound'))
}
call find_exe(\@tbl,'ar','/usr/bin/ar')
call find_exe(\@tbl,'gcc','/usr/bin/gcc')
call find_exe(\@tbl,'g++','/usr/bin/g++')
if !findCommand('ksh')
 call push(@tbl,'KshNotFound')
call find_exe(\@tbl,'ld','/usr/bin/ld')
if expr('==',$OS_BIT,64)
 call find_exe(\@tbl,'linux32','/usr/bin/linux32')
call find_exe(\@tbl,'nm','/usr/bin/nm')
call find_exe(\@tbl,'make','/usr/bin/make')
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'tools_found'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that the required software tools for the installation of Oracle Database 10g exist.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="tools_found" result="PASSED"><![CDATA[All required software tools for the installation of the application tier of Oracle E-Business Suite Release 12 (12.1.1) were found. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Some of the required software tools for the the application tier of Oracle E-Business Suite Release 12 (12.1.1) installation were not found. Check your installation.
|*Return Value*|*Action*|
|ArNotFound|``ar`` is not found in PATH.|
|ArElsewhere|``ar`` is not in ``/usr/bin`` as required.|
|GccNotFound|``gcc`` is not found in PATH.|
|GccElsewhere|``gcc`` is not in ``/usr/bin`` as required.|
|G++NotFound|``g++`` is not found in PATH.|
|G++Elsewhere|``g++`` is not in ``/usr/bin`` as required.|
|KshNotFound|``ksh`` is not found in PATH.|
|LdNotFound|``ld`` is not found in PATH.|
|LdElsewhere|``ld`` is not in ``/usr/bin`` as required.|
|Linux32NotFound|``linux32`` is not found in PATH.|
|Linux32Elsewhere|``linux32`` is not in ``/usr/bin`` as required.|
|NmNotFound|``nm`` is not found in PATH.|
|NmElsewhere|``nm`` is not in ``/usr/bin`` as required.|
|MakeNotFound|``make`` is not found in PATH.|
|MakeElsewhere|``make`` is not in ``/usr/bin`` as required.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00400" mode="RECORD" name="IP Address">
<sdp_command type="RDA"><![CDATA[var $hst = field('\.',0,command('hostname'))
var ($lin) = grepFile('/etc/hosts',\
 concat('^[^#]+\s\<?',quote($hst),'\>?($|\.|\s)'),'f')
call setHcveResult(field('\s+',0,$lin))
]]></sdp_command>
<sdp_description><![CDATA[This rule gets the host IP address.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00410" mode="RECORD" name="Domain Name">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires to know the IP address.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $ip = "%A00400%"
var ($hst) = command('hostname')
var ($nam,$dom) = split('\.',$hst,2)
if testFile('x','/bin/domainname')
 var ($nis) = command('/bin/domainname')
if testFile('r','/etc/resolv.conf')
 var $dns = field('\s+',1,grepFile('/etc/resolv.conf','domain'))
if testFile('x','/usr/bin/nslookup')
{if $nam
 {var $nsl = field(concat(quote($nam),'\.'),1,\
                   grepCommand(concat('/usr/bin/nslookup ',$hst),'Name','f'))
 }
 else
 {var $nsl = field(concat(quote($hst),'\.'),1,\
                   grepCommand(concat('/usr/bin/nslookup ',$hst),'Name','f'))
 }
}
if $ip
{if !$nam
  var $ipn = trim(field(concat($hst,'\.'),1,\
             grepCommand(concat('/usr/bin/nslookup -sil ',$ip),'Name','f')),'.')
}
call setHcveResult(cond($dom,$dom,\
                        and(length($nis),compare('ne',$nis,'(none)')),$nis,\
                        $dns,$dns,\
                        $nsl,$nsl,\
                        $ipn,$ipn,\
                             'Not configured'))
]]></sdp_command>
<sdp_description><![CDATA[This rule gets the host domain name.]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00420" mode="VERIFY" name="DNS Lookup">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires to know the IP address.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires to know the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $dom = "%A00410%"
var $ip  = "%A00400%"
var $hst = field('\.',0,command('hostname'))
if !length($hst)
{if and(compare('ne',$dom,'Not configured'),length($dom))
  var $hst = concat($hst,'.',$dom)
}
call setHcveResult(cond(\
  not(length($ip)),\
    'Cannot determine IP address',\
  not(testFile('x','/usr/bin/nslookup')),\
    'Cannot access /usr/bin/nslookup',\
  not(grepCommand(concat('/usr/bin/nslookup -sil ',$hst),quote($ip),'f')),\
    'nslookup host.domain',\
  not(grepCommand(concat('/usr/bin/nslookup -sil ',$ip),quote($hst),'f')),\
    'nslookup IP_address',\
    'Host correctly registered in DNS'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the host is registered correctly in the Domain Name Server (DNS).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Host correctly registered in DNS" result="PASSED"><![CDATA[The host is registered correctly in the DNS.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|nslookup host.domain|The DNS server failed to resolve the nslookup using host.domain.|
|nslookup IP_address|The DNS server failed to resolve the nslookup using IP address.|
|Cannot determine IP address|Fix any problem with the host IP address.|
|Cannot access /usr/bin/nslookup|Grant execute permissions on ``/usr/bin/nslookup`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00430" mode="VERIFY" name="/etc/hosts format">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires to know the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
if !testFile('r','/etc/hosts')
 return setHcveResult('Cannot access /etc/hosts')
if !@tbl = grepFile('/etc/hosts',\
  concat('^([^\s\#]+\s+)+',quote(${RDA.HOST}),\
         '\s+([^\s\#]+\s+)*',quote(${RDA.NODE}),'(\s|\z|\#)'))
 return setHcveResult('no entry found')

# Test that line begins with IPv4 IP address
if grep(@tbl,'^(\d{1,3}\.){3}\d{1,3}\s','f')
 return setHcveResult('Adequate IPv4 entry')

# Tests that line begins with IPv6 IP address, first that all eight groups are populated, then situations where groups that are all zero are omitted (two colons together).
if grep(@tbl,'^([A-F\d]{1,4}(:[A-F\d]{1,4}){7}\s|\
                :(:[A-F\d]{1,4}){1,6}\s|\
                ([A-F\d]{1,4}:){1,5}(:[A-F\d]{1,4}){1,5}\s|\
                ([A-F\d]{1,4}:){1,6}:\s)','f')
 return setHcveResult('Adequate IPv6 entry')
return setHcveResult('no correct entry found')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/hosts`` file contains a line with ``ip_address fully_qualified_domainname short_hostname``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="^Adequate" result="PASSED"><![CDATA[The ``/etc/hosts`` entry for the fully qualified domain name and host name is adequate.]]></sdp_action>
<sdp_action condition="==" minimum="Cannot access /etc/hosts" result="FAILED"><![CDATA[Grant read permissions on ``/etc/hosts`` to the current user.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The fully qualified host name and host name are not configured correctly. Ensure that there is an IP address entry for the fully qualified domain name with the host name as one of the aliases.
|*Return Value*|*Action"|
|no entry found|No entry with the fully qualified domain name followed by the host name was found.|
|no correct entry found|No entry beginning with an IP address with the fully qualified domain name followed by the host name was found.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00440" mode="VERIFY" name="SysNetw File">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^(OL|RH)" result="SKIPPED" value="Not Enterprise or RedHat Linux"><![CDATA[This rule applies for Enterprise and RedHat Linux systems on x86 or x86_64 processors only.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00400" minimum="RECORD" result="FAILED" value="IP address required"><![CDATA[This rule requires to know the IP address.]]></sdp_dependency>
<sdp_dependency condition="IS" id="A00410" minimum="RECORD" result="FAILED" value="Domain name required"><![CDATA[This rule requires to know the domain name.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var $dom = "%A00410%"
var $ip  = "%A00400%"
if !testFile('r','/etc/sysconfig/network')
 return setHcveResult('Cannot access')
var @tbl =()
var $hst = field('\.',0,command('hostname'))
var $fqd = concat($hst,'.',$dom)
var ($lin) = grepFile('/etc/sysconfig/network',quote($fqd),'f')
if match($lin,concat('^HOSTNAME\s*=\s*',$fqd,'\s*$'))
 call setHcveResult('SysNetOK')
else
 call setHcveResult('Missing host.domain')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/sysconfig/network`` file contains a line with ``HOSTNAME=fully_qualified_hostname``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="SysNetOK" result="PASSED"><![CDATA[The fully qualified domain name (FQDN) is set correctly.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The fully qualified host name entry is not configured correctly.
|*Return Value*|*Action*|
|Missing host.domain|Add the fully qualified host name to the ``/etc/sysconfig/network`` file.|
|Cannot accesss|Grant read permissions on ``/etc/sysconfig/network`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00450" mode="VERIFY" name="NoNetwProf File">
<sdp_dependencies>
<sdp_dependency condition="=~" id="A00100" minimum="^(OL|RH)" result="SKIPPED" value="Not Enterprise or RedHat Linux"><![CDATA[This rule only applies for Enterprise and RedHat Linux systems on x86 or x86_64 processor.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
setHcveResult(cond(testFile('e',\
 '/etc/sysconfig/networking/profiles/default/network'),'NetwProfFound','OK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``/etc/sysconfig/networking/profiles/default/network`` file does not exist.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="OK" result="PASSED"><![CDATA[The ``/etc/sysconfig/networking/profiles/default/network`` file does not exist. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Remove the ``/etc/sysconfig/networking/profiles/default/network`` file.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00460" mode="RECORD" name="DNS Settings">
<sdp_command type="RDA"><![CDATA[
macro chk_minimum
{var (\@tbl,$nam,$max,$val) = @arg
 if !defined($val)
 {call push(@tbl,concat($nam,'Undef'))
  return
 }
 if expr('<',$val,$max)
  call push(@tbl,concat($nam,'TooSmall'))
}
if testFile('r','/etc/resolv.conf')
{var @tbl = ()
 call chk_minimum(\@tbl,'ATTEMPTS',5,\
      field(':',1,grepFile('/etc/resolv.conf','options attempts')))
 call chk_minimum(\@tbl,'TIMEOUT',15,\
      field(':',1,grepFile('/etc/resolv.conf','options timeout')))
 call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'DNSOptionsOK'))
}
else
 setHcveResult('Cannot access')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks some Domain Name Server (DNS) options in ``/etc/resolv.conf``.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="DNSOptionsOK" result="PASSED"><![CDATA[The DNS options in ``/etc/resolv.conf`` are set according to the ${'BOOK}. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The DNS options in ``/etc/resolv.conf`` are not set according to the ${'BOOK}.
|*Return Value*|*Action*|
|ATTEMPTSTooSmall|Set the ``options attempts`` in ``/etc/resolv.conf`` to at least 5.|
|ATTEMPTSUndef|The ``options attempts`` in ``/etc/resolv.conf`` is not defined. It is not set and must be set to at least 5|
|TIMEOUTSTooSmall|Set the ``options timeout`` in ``/etc/resolv.conf`` to at least 15.|
|TIMEOUTSUndef|The ``options timout`` in ``/etc/resolv.conf`` is not defined. It is not set and must be set to at least 15.|
|Cannot access|Grant read persmissions on ``/etc/resolv.conf`` to the user who is logged on.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00470" mode="VERIFY" name="Net Service Access?">
<sdp_command type="RDA"><![CDATA[var $NET='/var/tmp/.oracle'
call setHcveResult(cond(not(testDir('e',$NET)),'NonExist',\
                        not(testDir('d',$NET)),'NoDir',\
                        testDir('rwx',$NET),'PermOk','PermNotOk'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user who is logged in can create the ``/var/tmp/.oracle`` directory or can create files in it. The directory is used by the Net Service Listeners.]]></sdp_description>
<sdp_actions>
<sdp_action condition="=~" minimum="NonExist|PermOk" result="PASSED"><![CDATA[The user who is logged in can create the ``/var/tmp/.oracle`` directory or he can create files in the directory.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoDir|The ``/var/tmp/.oracle`` is not a directory. Remove the ``.oracle`` entry in ``/var/tmp``.|
|PermNotOk|The user who is logged in cannot create files in the ``/var/tmp/.oracle`` directory. Grant read, write, and execute permissions on this directory to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00480" mode="VERIFY" name="Port 6000">
<sdp_command type="RDA"><![CDATA[
if grepCommand('netstat -an','[\.:]6000\s','f')
 return setHcveResult('Occupied')
return setHcveResult('Free')
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that port 6000 is free. The 6000 port is often used by the graphics console login process on an Unix server and can conflict with the OPMN (Oracle Process Manager and Notification) listen port from EBS, which is set to 6000 by default by RapidWiz.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" maximum="N" minimum="Free" result="PASSED"><![CDATA[Port 6000 is free. No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[Port 6000 is taken. Either check which process is using the port and stop the process or enter a port different from 6000 as the OPMN listen port in RapidWiz.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00500" mode="VERIFY" name="Kernel Params OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00200" minimum="PASSED" result="SKIPPED" value="Not on certified Linux system"><![CDATA[This rule applies for certified Linux Operating Systems only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $OS_TYP,$OS_BIT
var @tbl = ()
var $MEM = nvl(field('\s+',1,grepCommand('/usr/bin/free -m','Mem','f')),0)
var $DISMCAPREQ = 1
var $FILEMAXREQD = 131072
var $RMEMDFTREQD = 262144
var $RMEMREQD    = 4194304
var $SEMMNIREQD  = 142
var $SEMMNSREQD  = 32000
var $SEMMSLREQD  = 256
var $SEMOPMREQD  = 100
var $SHMALLREQD  = 2097152
var $SHMMAXREQD  = max(expr('*',$MEM,524288),2147483648)
var $SHMMAXREQD  = min($SHMMAXREQD,4294967295)
var $SHMMNIREQD  = 4096
var $WMEMDFTREQD = 262144
var $WMEMREQD    = 262144
call setHcveVariable('$FILEMAXREQD','$RMEMDFTREQD','$RMEMREQD',\
       '$SEMMNIREQD','$SEMMNSREQD','$SEMMSLREQD','$SEMOPMREQD','$SHMALLREQD',\
       'SHMMAXREQD','$SHMMNIREQD','$WMEMDFTREQD','$WMEMREQD')
macro chk_minimum
{var (\@tbl,$nam,$max,$val) = @arg
 if !defined($val)
 {call push(@tbl,concat($nam,'Undef'))
  return
 }
 if expr('<',$val,$max)
  call push(@tbl,concat($nam,'TooSmall'))
}
if and(compare($OS_TYP,'SuSE'),expr('==',$OS_BIT,64))
 call chk_minimum(\@tbl,'DISABLE_CAP_MLOCK',$DISMCAPREQ,\
   grepCommand('/sbin/sysctl -e vm.disable_cap_mlock','=\s*(\d+)','f1'))
call chk_minimum(\@tbl,'FILEMAX',$FILEMAXREQD,\
                 grepFile('/proc/sys/fs/file-max','.','f'))
call chk_minimum(\@tbl,'RMEM_DEFAULT',$RMEMDFTREQD,\
  grepCommand('/sbin/sysctl -e net.core.rmem_default','=\s*(\d+)','f1'))
call chk_minimum(\@tbl,'RMEM_MAX',$RMEMREQD,\
  grepCommand('/sbin/sysctl -e net.core.rmem_max','=\s*(\d+)','f1'))
var ($lin) = grepFile('/proc/sys/kernel/sem','.','f')
var ($msl,$mns,$opm,$mni) = split('\s+',$lin,5)
call chk_minimum(\@tbl,'SEMMNI',$SEMMNIREQD,$mni)
call chk_minimum(\@tbl,'SEMMNS',$SEMMNSREQD,$mns)
call chk_minimum(\@tbl,'SEMMSL',$SEMMSLREQD,$msl)
call chk_minimum(\@tbl,'SEMOPM',$SEMOPMREQD,$opm)
call chk_minimum(\@tbl,'SHMALL',$SHMALLREQD,\
                 grepFile('/proc/sys/kernel/shmall','.','f'))
call chk_minimum(\@tbl,'SHMMAX',$SHMMAXREQD,\
                 grepFile('/proc/sys/kernel/shmmax','.','f'))
call chk_minimum(\@tbl,'SHMMNI',$SHMMNIREQD,\
                 grepFile('/proc/sys/kernel/shmmni','.','f'))
call chk_minimum(\@tbl,'WMEM_DEFAULT',$WMEMDFTREQD,\
  grepCommand('/sbin/sysctl -e net.core.wmem_default','=\s*(\d+)','f1'))
call chk_minimum(\@tbl,'WMEM_MAX',$WMEMREQD,\
  grepCommand('/sbin/sysctl -e net.core.wmem_max','=\s*(\d+)','f1'))
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'KernelOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule verifies that the kernel parameters are set according to the ''Oracle Applications Installation Guide Using Rapid Install Release 12.1 (12.1.1)''.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="KernelOK" result="PASSED"><![CDATA[The kernel parameters are set according to the ${'BOOK}. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The kernel parameters are not set according to the ${'BOOK}.
|*Return Value*|*Action*|
|DISABLE_CAP_MLOCKTooSmall|Set the kernel parameter vm.disable_cap_mlock to 1.|
|DISABLE_CAP_MLOCKUndef|vm.disable_cap_mlock is not set and must be set to 1.|
|FILEMAXTooSmall|Increase the kernel parameter FILE-MAX to at least ${FILEMAXREQD}.|
|FILEMAXUndef|FILE-MAX is not defined and must be set to ${FILEMAXREQD}.|
|RMEM_DEFAULTTooSmall|Increase the kernel parameter RMEM_DEFAULT to at least ${RMEMDFTREQD}.|
|RMEM_DEFAULTUndef|RMEM_DEFAULT is not defined and must be set to ${RMEMDFTREQD}.|
|RMEM_MAXTooSmall|Increase the kernel parameter RMEM_MAX to at least ${RMEMREQD}.|
|RMEM_MAXUndef|RMEM_MAX is not defined and must be set to ${RMEMREQD}.|
|SEMMNIUndef|SEMMNI is not defined and must be set to ${SEMMNIREQD}.|
|SEMMNITooSmall|Increase the kernel parameter SEMMNI to at least ${SEMMNIREQD}.|
|SEMMSLUndef|SEMMSL is not defined and must be set to ${SEMMSLREQD}.|
|SEMMSLTooSmall|Increase the kernel parameter SEMMSL to at least ${SEMMSLREQD}.|
|SEMMNSUndef|SEMMNS is not defined and must be set to ${SEMMNSREQD}.|
|SEMMNSTooSmall|Increase the kernel parameter SEMMNS to at least ${SEMMNSREQD}.|
|SEMOPMUndef|SEMOPM is not defined and must be set to ${SEMOPMREQD}.|
|SEMOPMTooSmall|Increase the kernel parameter SEMOPM to at least ${SEMOPMREQD}.|
|SHMALLUndef|SHMALL is not defined and must be set to ${SHMALLREQD} or more.|
|SHMALLTooSmall|Increase the kernel parameter SHMALL to at least ${SHMALLREQD}.|
|SHMMAXUndef|SHMMAX is not defined and must be set to ${SHMMAXREQD} or more.|
|SHMMAXTooSmall|Increase the kernel parameter SHMMAX to at least ${SHMMAXREQD}.|
|SHMMNIUndef|SHMMNI is not defined and must be set to ${SHMMNIREQD} or more.|
|SHMMNITooSmall|Increase the kernel parameter SHMMNI to at least ${SHMMNIREQD}.|
|WMEM_DEFAULTTooSmall|Increase the kernel parameter WMEM_DEFAULT to at least ${WMEMDFTREQD}.|
|WMEM_DEFAULTUndef|WMEM_DEFAULT is not defined and must be set to ${WMEMDFTREQD}.|
|WMEM_MAXTooSmall|Increase the kernel parameter WMEM_MAX to at least ${WMEMREQD}.|
|WMEM_MAXUndef|WMEM_MAX is not defined and must be set to ${WMEMREQD}|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00510" mode="VERIFY" name="Port Range OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00200" minimum="PASSED" result="SKIPPED" value="Not on certified Linux system"><![CDATA[This rule applies for certified Linux Operating Systems only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[var @tbl = ()
if !testFile('f','/proc/sys/net/ipv4/ip_local_port_range')
 return setHcveResult('iplocalNotFound')
macro chk_port_range
{var (\@tbl,$min,$max) = @arg
 if !?$min
  return push(@tbl,'iplocalNotFound')
 if !?$max
  return push(@tbl,'iplocalNotFound')
 if !expr('==',$min,10000)
  call push(@tbl,'LowValue')
 if !expr('==',$max,65000)
  call push(@tbl,'HighValue')
}
call chk_port_range(\@tbl,split('\s+',\
  grepFile('/proc/sys/net/ipv4/ip_local_port_range','\d+','f'),2))
call setHcveResult(cond(scalar(@tbl),join("\012",@tbl),'RangeOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the ``ip_local_port_range`` kernel parameter is between 10000 and 65000, according to the Knowledge Article 761564.1 for Linux x86 and the Knowledge Article 761566.1 for Linux x86_64.''.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="RangeOK" result="PASSED"><![CDATA[The sockets defined in ``/proc/sys/net/ipv4/ip_local_port_range`` are adequate for installing the application tier of Oracle E-Business Suite Release 12 on Linux. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[The values in ``/proc/sys/net/ipv4/ip_local_port_range`` are not set as recommended for the application tier of Oracle E-Business Suite Release 12 on Linux. To change the settings according to the recommendation execute:
%BR%``$ /bin/echo 10000 65000 > /proc/sys/net/ipv4/ip_local_port_range``
The values recommended for the local port range may must be adjusted according to the specific needs of your environment in order to avoid port conflicts. 
|*Return Value*|*Action*|
|LowValue|The recommended low end value for ``ip_local_port_range`` is 10000.|
|HighValue|The recommended high end value for ``ip_local_port_range`` is 65000.|
|iplocalNotFound|``ip_local_port_range`` is not present in the ``/proc/sys/net/ipv4`` directory as required.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00520" mode="VERIFY" name="Limit Processes">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00200" minimum="PASSED" result="SKIPPED" value="Not on certified Linux system"><![CDATA[This rule applies for certified Linux Operating Systems only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
var $shl = nvl(getEnv('SHELL'),first(command('echo $SHELL')),'/bin/sh')
macro proc_lmt
{var ($cmd,$flg) = @arg
 var ($val) = command($cmd)
 if $flg
  var $val = field('\s+',1,$val)
 if compare('eq',$val,'unlimited')
  return 'Adequate'
 return cond(and(isNumber($val),expr('>=',$val,16384)),\
             'Adequate',\
             'Less than 16384')
}
macro proc_lmt_ksh
{var ($cmd) = @arg
 var $val = field('\s',-1,\
   grepCommand($cmd,'^(max user processes|processes|nproc)','if'))
 if compare('eq',$val,'unlimited')
  return 'Adequate'
 return cond(and(isNumber($val),expr('>=',$val,16384)),\
             'Adequate',\
             'Less than 16384')
}
call setHcveResult(check(\
  $shl,'csh',proc_lmt(concat($shl,' -f -c "limit maxproc"'),true),\
       'ksh',proc_lmt_ksh(concat($shl,' -c "ulimit -a"')),\
             proc_lmt(concat($shl,' -c "ulimit -u"'),false)))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the limit of maximum processes is set to 16384 or higher. For more information about configuring this parameter,check Knowledge Article 761564.1 or Knowledge Article 761566.1.]]></sdp_description> 
<sdp_actions>
<sdp_action condition="==" minimum="Adequate" result="PASSED"><![CDATA[The limit of maximum processes is set to 16384 or higher.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Less than 16384|Increase the limit for maximum processes to 16384 or higher.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00530" mode="VERIFY" name="Limit Descriptors">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00200" minimum="PASSED" result="SKIPPED" value="Not on certified Linux system"><![CDATA[This rule applies for certified Linux Operating Systems only.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[
var $shl = nvl(getEnv('SHELL'),first(command('echo $SHELL')),'/bin/sh')
macro proc_lmt
{var ($cmd,$flg) = @arg
 var ($val) = command($cmd)
 if $flg
  var $val = field('\s+',1,$val)
 if compare('eq',$val,'unlimited')
  return 'Adequate'
 return cond(and(isNumber($val),expr('>=',$val,65536)),\
             'Adequate',\
             'Less than 65536')
}
call setHcveResult(check(\
  $shl,'csh',proc_lmt(concat($shl,' -f -c "limit descriptors"'),true),\
             proc_lmt(concat($shl,' -c "ulimit -n"'),false)))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the limit of file descriptors is set to 65536 or higher. For more information about configuring this parameter, check Knowledge Article 761564.1 or Knowledge Article 761566.1.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Adequate" result="PASSED"><![CDATA[The limit of descriptors is set to 65536 or higher.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Less than 65536|Increase the limit for file descriptors to 65536 or higher.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00600" mode="RECORD" name="ApplTierDirectory">
<sdp_command type="PROMPT" default="" variable="$APP_TIER_DIR"><![CDATA[Planned application tier installation directory]]></sdp_command>
<sdp_description><![CDATA[This rule prompts the user for the planned directory of the application tier of the Oracle E-Business Suite Release 12 (12.1.1).]]></sdp_description>
</sdp_rule>

<sdp_rule id="A00610" mode="VERIFY" name="A_T  Valid?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00600" minimum="RECORD" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a planned application tier home directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not($APP_TIER_DIR),             'ATNotSpecified',\
  not(testDir('d',$APP_TIER_DIR)),'ATnotvalid',\
  not(testDir('l',$APP_TIER_DIR)),'ATexists',\
                                  'ATsymlink'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks the directory for the installation of the application tier (A_T) of the Oracle E-Business suite R12 (12.1.1).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="ATexists" result="PASSED"><![CDATA[The application tier installation directory exists. No action required]]></sdp_action>
<sdp_action condition="==" minimum="ATNotSpecified" result="SKIPPED"><![CDATA[The application tier installation directory was not specified. No action required]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[ALERT:
You did not specify a valid application tier installation directory. Ensure that you provided the correct location or that this directory is created and then run this script again.
|*Return Value*|*Action*|
|ATnotvalid|Ensure that the application tier directory is a valid directory.|
|ATsymlink|Ensure that the specified application tier directory is not a symbolic link.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00620" mode="VERIFY" name="A_T Permissions OK?">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified or Invalid A_T"><![CDATA[You did not specify a valid application tier directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
call setHcveResult(cond(\
  not(testDir('r',$APP_TIER_DIR)),'NoReadPerm',\
  not(testDir('w',$APP_TIER_DIR)),'NoWritePerm',\
  not(testDir('x',$APP_TIER_DIR)),'NoExecutePerm',\
                                  'CorrectPerms'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the user has the correct privileges to install the application tier (A_T) of the Oracle E-Business Suite Release 12 (12.1.1).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="CorrectPerms" result="PASSED"><![CDATA[The permissions for the application tier directory are correct. No action required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|NoReadPerm|The install user has no read permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoWritePerm|The install user has no write permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|
|NoExecutePerm|The install user has no execute permissions. Ensure that the install user has read, write, and execute permissions for the application tier home directory.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00630" mode="VERIFY" name="A_T Disk Space">
<sdp_dependencies>
<sdp_dependency condition="IS" id="A00610" minimum="PASSED" result="SKIPPED" value="Unspecified A_T"><![CDATA[You did not specify a valid application tier directory.]]></sdp_dependency>
</sdp_dependencies>
<sdp_command type="RDA"><![CDATA[import $APP_TIER_DIR
var $dsk = get_df($APP_TIER_DIR)
call setHcveResult(cond(and(isNumber($dsk),expr('>=',$dsk,36700160)),\
                   'OK','NotOK'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks if there is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 12 (12.1.1).]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="OK" result="PASSED"><![CDATA[There is sufficient disk space to install the application tier of the Oracle E-Business Suite Release 12 (12.1.1) in the directory. No action is required.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[There is insufficient disk space to install the application tier of the Oracle E-Business Suite Release 12 (12.1.1). You need at least 35 GB.]]></sdp_action>
</sdp_actions>
</sdp_rule>

<sdp_rule id="A00640" mode="VERIFY" name="Space in tmp">
<sdp_command type="RDA"><![CDATA[var $tmp = nvl(getEnv('TMP'),getEnv('TMPDIR'),'/tmp')
call setHcveResult(cond(\
  not(testDir('d',$tmp)),         'Cannot access tmp directory',\
  expr('>=',get_df($tmp),1048576),'Available',\
                                  'Need at least 1GB'))
]]></sdp_command>
<sdp_description><![CDATA[This rule checks that the system has enough temporary space. Initially Oracle Rapid Install (RI) checks the ``TMP`` and ``TMPDIR`` environment variables to locate the temporary directory. If these environment variables do not exist, then RI uses ``/tmp``. The minimum requirement is 1 GB.]]></sdp_description>
<sdp_actions>
<sdp_action condition="==" minimum="Available" result="PASSED"><![CDATA[The system has enough temporary space.]]></sdp_action>
<sdp_action result="FAILED" syntax="wiki"><![CDATA[|*Return Value*|*Action*|
|Need at least 1 GB|Increase the available temporary space to 1 GB or more. You can define ``TMP`` or ``TMPDIR`` to point to a directory with 1 GB available space.|
|Cannot access tmp directory|Grant read, write, and execute permissions on ``/tmp`` or directories in ``TMP`` or ``TMPDIR`` to the user who is logged in.|]]></sdp_action>
</sdp_actions>
</sdp_rule>

</sdp_group>
</sdp_content>
</sdp_diaglet>
