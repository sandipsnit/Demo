# DARVload.def: Collects DARV Data
# $Id: DARVload.def,v 2.8 2012/01/03 13:34:41 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/DARVload.def,v 2.8 2012/01/03 13:34:41 mschenke Exp $
#
# Change History
# 20120103  MSC  Change the copyright notice.

=head1 NAME

DARVload - Collects DARV Data

=head1 DESCRIPTION

This module collects a copy of the Database Activity Recorder files.

The following report is produced:

=head2 dar_box - Database Activity Recorder

When available, this module collects a copy of the Database Activity Recorder
files.

=cut

var $pat = undef
if isUnix()
{loop $key (grepSetting('_SID$'))
  var $sid{field(':',-1,getSetting($key))} = 1
 loop $sid (keys(%sid))
  var $pat = join('|',$pat,concat('^',quote($sid),'$'))
}

if ?$pat
{debug ' Inside LOAD module, gathering database activity recorder information'

 # Get the ps command format
 var $PS_ARG
 var $PS_EF
 var $PS_ELF
 run &{check(getOsName(),'aix',      'OSaix',\
                         'darwin',   'OSdarwin',\
                         'dec_osf',  'OSosf',\
                         'dynixptx', 'OSptx',\
                         'hpux',     'OShpux',\
                         'linux',    'OSlinux',\
                         'solaris',  'OSsunos',\
                                     'OSunix')}('PS')

 # Initialise the report
 report dar_box
 prefix
 {write '---+ Database Activity Recorder'
  write '   * Links point to files that have been collected in their original \
              format. Use the link to save them and use an adequate viewer.'
  write '|*Oracle SID*|*Recorder Directory*|*Data*|'
 }
 var $alt = ''
 var $ext = ${OUT.E}
 var $grp = ${CUR.GROUP}

 # Define macros to collect DAR files
 macro copy_dar
 {var ($ext,$bas,$dir,$sid) = @arg

  if transfer($dir,'dar.box',$ext,concat($bas,'.box'),true)
  {var @lnk = (concat('[[extern/',$bas,'.box][_blank][dar.box]]'))
   loop $suf ('err','pch','prm')
   {var $dst = concat($bas,'_',$suf,'.log')
    if transfer($dir,concat('dar.',$suf),$ext,$dst,true)
     call push(@lnk,concat('[[extern/',$dst,'][_blank][dar.',$suf,']]'))
   }
   write '|',$sid,' |',encode($dir),' |',join('%BR%',@lnk),' |'
  }
 }
 macro copy_err
 {var ($dir) = @arg

  prefix
  {write '---+ Database Activity Recorder Errors'
   write '   * Links point to files that have been collected in their original \
               format. Use the link to save them and use an adequate viewer.'
   write '|*File Name*| *Size*|*Last Modified Date*|'
  }
  loop $fil (grepDir($dir,'dar.err','dr',1))
  {var $lnk = encode($fil)
   var $siz = getSize($fil)
   if $siz
   {output d,concat('L_',basename($fil))
    if ${CUR.LAST}->write_tail($fil,$TAIL)
     var $lnk = concat('[[',${CUR.LAST}->get_file,'][_blank][',$lnk,']]')
    call $[OUT]->end_report(${CUR.LAST})
   }
   write '|',$lnk,' | ',$siz,'|',\
             getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
  }
 }

 # Search for dar.box
 once
 {if loadCommand($PS_ARG)
  {loop $lin (grepLastFile('\bdar(\s|\z)'))
   {var ($dir,$sid) = match($lin,'\s(\S+/(\+?\w+))/dar(\s|\z)')
    if match($sid,$pat,true)
     call copy_dar($ext,concat($grp,'_dar',uc($sid)),$dir,$sid)
   }
   break isCreated(true)
   if grepLastFile('\bdar_sys\.sh(\s|\z)')
    call copy_err(match(last,'\s(\S+)/dar_sys\.sh(\s|\z)'))
  }
  else
  {var $cmd = cond(${OS.linux},$PS_ELF,$PS_EF)
   loop $lin (grepCommand($cmd,'\bdar(\s|\z)'))
   {var ($dir,$sid) = match($lin,'\s(\S+/(\+?\w+))/dar(\s|\z)')
    if match($sid,$pat,true)
     call copy_dar($ext,concat($grp,'_dar',uc($sid)),$dir,$sid)
   }
   break isCreated(true)
   if grepCommand($cmd,'\bdar_sys\.sh(\s|\z)')
    call copy_err(match(last,'\s(\S+)/dar_sys\.sh(\s|\z)'))
  }
 }

 # Insert the report in the table of content
 if isCreated(true)
  toc '2:[[',getFile(),'][rda_report][Database Activity Recorder]]'
}

=head1 SEE ALSO

L<OSaix|modules::OSaix>, L<OSdarwin|modules::OSdarwin>,
L<OShpux|modules::OShpux>, L<OSlinux|modules::OSlinux>,
L<OSosf|modules::OSosf>, L<OSptx|modules::OSptx>,
L<OSsunos|modules::OSsunos>, L<OSunix|modules::OSunix>,
L<OSvms|modules::OSvms>, L<OSwin32|modules::OSwin32>

=begin credits

=over 10

=item RDA 4.3:  Michel Villette.

=item RDA 4.22: Philippe Jennequin, Michel Villette.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
