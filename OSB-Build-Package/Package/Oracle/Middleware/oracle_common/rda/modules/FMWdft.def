# FMWdft.def: Collects Oracle Fusion Middleware Plugin Information
# $Id: FMWdft.def,v 1.45 2012/08/27 14:32:41 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/FMWdft.def,v 1.45 2012/08/27 14:32:41 mschenke Exp $
#
# Change History
# 20120824  KRA  Include WLS_EPMA_Log section.

=head1 NAME

FMWdft - Collects Oracle Fusion Middleware Plugin Information

=head1 DESCRIPTION

This module collects Oracle Fusion Middleware Plugin-related information.

=head1 REPORTS

=cut

keep $KEEP_BLOCK

return

# -----------------------------------------------------------------------------
# Section Init: Define the plugin capabilities
# -----------------------------------------------------------------------------

section Init

# Define the plugin capabilities
var $plg = $arg[0]
var $ctl = {WLS => {col    => {OAM       => 'FMWdft-WLS_OAM_Collect',\
                               OIM       => 'FMWdft-WLS_OIM_Collect',\
                               OSB       => 'FMWdft-WLS_OSB_Collect',\
                               SOA       => 'FMWdft-WLS_SOA_Collect',\
                               WC        => 'FMWdft-WLS_WC_Collect'},\
                    domcfg => {MinDomCfg => 'FMWdft-WLS_MinDomCfg_Config'},\
                    domext => {ExtDomCfg => 'FMWdft-WLS_ExtDomCfg_Config'},\
                    domlog => {WLI       => 'FMWdft-WLS_WLI_Log'},\
                    domprd => {ASA       => 'FMWdft-WLS_ASA_Config',\
                               BIPL      => 'FMWdft-WLS_BIPL_Config',\
                               HFR       => 'FMWdft-WLS_HFR_Config',\
                               HSS       => 'FMWdft-WLS_HSS_Config',\
                               OFA       => 'FMWdft-WLS_OFA_Config',\
                               OSB       => 'FMWdft-WLS_OSB_Config'},\
                    ini    => {grid      => 'FMWdft-WLS_GRID_Init',\
                               oam       => 'FMWdft-WLS_OAM_Init',\
                               oim       => 'FMWdft-WLS_OIM_Init',\
                               osb       => 'FMWdft-WLS_OSB_Init',\
                               soa       => 'FMWdft-WLS_SOA_Init',\
                               wc        => 'FMWdft-WLS_WC_Init'},\
                    srvcfg => {MinSrvCfg => 'FMWdft-WLS_MinSrvCfg_Config'},\
                    srvext => {ExtSrvCfg => 'FMWdft-WLS_ExtSrvCfg_Config'},\
                    srvlog => {BIPL      => 'FMWdft-WLS_BIPL_Log',\
                               DEV       => 'FMWdft-WLS_DEV_Log',\
                               EPMA      => 'FMWdft-WLS_EPMA_Log',\
                               ESS       => 'FMWdft-WLS_ESS_Log',\
                               FCM       => 'FMWdft-WLS_FCM_Log',\
                               GRID      => 'FMWdft-WLS_GRID_Log',\
                               HCM       => 'FMWdft-WLS_HCM_Log',\
                               HFM       => 'FMWdft-WLS_HFM_Log',\
                               HFR       => 'FMWdft-WLS_HFR_Log',\
                               HSS       => 'FMWdft-WLS_HSS_Log',\
                               JMS       => 'FMWdft-WLS_JMS_Log',\
                               OAM       => 'FMWdft-WLS_OAM_Log',\
                               OFA       => 'FMWdft-WLS_OFA_Log',\
                               OID       => 'FMWdft-WLS_OID_Log',\
                               OSB       => 'FMWdft-WLS_OSB_Log',\
                               OWSM      => 'FMWdft-WLS_OWSM_Log',\
                               PDC       => 'FMWdft-WLS_PDC_Log',\
                               SOA       => 'FMWdft-WLS_SOA_Log',\
                               STA       => 'FMWdft-WLS_STA_Log',\
                               WC        => 'FMWdft-WLS_WC_Log'},\
                    srvprd => {DEV       => 'FMWdft-WLS_DEV_Config',\
                               DSCV      => 'FMWdft-WLS_DSCV_Config',\
                               HFR       => 'FMWdft-WLS_HFR_SrvCfg_Config',\
                               HSS       => 'FMWdft-WLS_HSS_SrvCfg_Config',\
                               OFA       => 'FMWdft-WLS_OFA_SrvCfg_Config',\
                               OSB       => 'FMWdft-WLS_OSB_SrvCfg_Config',\
                               PDA       => 'FMWdft-WLS_PDA_Config',\
                               WC        => 'FMWdft-WLS_WC_Config'}}}
loop $key (keys($ctl,'*'))
 var $plg->{@{$key}} = $ctl->{@{$key}}

if isFiltered()
{delete $ctl->{'WLS','col','OIM'}
 delete $ctl->{'WLS','col','SOA'}
 delete $ctl->{'WLS','ini','oim'}
 delete $ctl->{'WLS','ini','soa'}
}

# Load the common macros
run EMdiag()
run library()
run WASlib()
run WLSlib()

# -----------------------------------------------------------------------------
# Section WLS_ASA_Config: Collect ASA config files from Oracle WebLogic Domain
# -----------------------------------------------------------------------------

section WLS_ASA_Config

=head2 adapter_files - Adapter Configuration Files

Collects the Oracle Application Server Adapter configuration files.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering adapter configuration files'

# Get the application files
var (%dir,%fil) = ()
if testFile('fr',catFile($dir,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 loop $xml (xmlFind($obj,'domain/app-deployment'))
 {var ($fil,$pth) = ()
  if match(xmlData(xmlFind($xml,'name')),'Adapter')
  {if xmlFind($xml,'source-path')
    var $fil{getNativePath(xmlData(last))} = true
   if xmlFind($xml,'plan-dir')
   {if !isAbsolute($pth = getNativePath(xmlData(last)))
     var $pth = catDir($dir,$pth)
    var $dir{$pth} = true
   }
   if xmlFind($xml,'plan-path')
   {if !isAbsolute($fil = getNativePath(xmlData(last)))
     var $fil = catFile($pth,$fil)
    var $fil{$fil} = true
   }
  }
 }
}

# Write the application files
report adapter_files
prefix
{write '---+ Adapter Configuration Files'
 write '   * Links point to files that have been collected in their \
             original format. Opening them directly in your browser \
             can present risks. To prevent them, access the file \
             outside the browser or use the link to save them and use \
             an adequate viewer.'
 write '|*File Name*| *Size*|*Last Modified Date*|'
}
loop $dir (keys(%dir))
{loop $fil (grepDir($dir,'^[^\.]','np'))
  var $fil{$fil} = true
}
loop $fil (keys(%fil))
{if testFile('fr',$fil)
 {var $lnk = encode(addSymbol($fil))
  var $siz = getSize($fil)
  if $siz
  {output d,concat('asa_',basename($fil))
   if ${CUR.LAST}->write_data($fil)
    var $lnk = concat('[[',${CUR.LAST}->get_raw(true),'][_blank][',$lnk,']]')
   end ${CUR.LAST}
  }
  write '|',$lnk,' | ',$siz,'|',\
            getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
 }
}
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Adapter Configuration Files]]'

# -----------------------------------------------------------------------------
# Section WLS_BIPL_Config: Collect BIPL config files for Oracle WebLogic Domain
# -----------------------------------------------------------------------------

section WLS_BIPL_Config

=head2 Oracle Business Intelligence Publisher Configuration Files

Collects the Oracle Business Intelligence Publisher-related configuration
files for Oracle WebLogic Domain.

=cut

var ($dir) = @arg

var $dir = catDir($dir,'config','bipublisher','repository','Admin')
debug '   - Inside FMWdft module, gathering BIPL configuration files'
pretoc '2:BI Publisher Configuration Files'
var %flt = (\
  'datasources.xml',       ['i', '<password>','</password>'],\
  'principals.xml',        ['is','user\s+username=".*?"\s+password="','"'],\
  'xmlp-server-config.xml',['i', 'property\s+name=".*password"\s+value="','"'])
loop $fil (catFile($dir,'Configuration','principals.xml'),\
           catFile($dir,'Configuration','security.xml'),\
           catFile($dir,'Configuration','xmlp-server-config.xml'),\
           catFile($dir,'DataSource','datasources.xml'))
{if testFile('r',$fil)
 {var $nam = basename($fil)
  report $nam
  prefix
  {write '---+ Display of ',encode($nam),' File'
   write '---## Information Taken from ',encode($fil)
  }
  call statFile('b',$fil)
  if !exists($flt{$nam})
   call writeFile($fil)
  elsif createBuffer('XML','F',$fil)
  {call filterBuffer('XML','%R:PASSWORD%',@{$flt{$nam}})
   call writeBuffer('XML')
   call deleteBuffer('XML')
  }
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][',encode($nam),']]'
 }
}
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_DEV_Config: Collect DEV config files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_DEV_Config

=head2 Forms/Reports Configuration Files

Collects the Oracle Forms/Reports-related configuration files for Oracle
WebLogic Server.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering DEV configuration files'
var @tbl = ()
loop $sub (grepDir(catDir($dir,'stage','formsapp'),'^\d+(\.\d+){2}$','np'))
 call push(@tbl,grepDir(catDir($sub,'formsapp','config'),'^\.+$','pv'))
call push(@tbl,grepDir(\
 catDir($dir,'stage','reports','reports','configuration'),'^\.+$','pv'))
pretoc '2:Forms/Reports Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_DSCV_Config: Collect DSCV config files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_DSCV_Config

=head2 Oracle Discoverer Configuration Files

Collects the Oracle Discoverer-related configuration files for Oracle
WebLogic Server.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering DSCV configuration files'
var @tbl = ()
loop $sub (grepDir(catDir($dir,'stage','discoverer'),'^\d+(\.\d+){2,4}$','np'))
{call push(@tbl,\
  catFile($sub,'discoverer','configuration','configuration.xml'),\
  catFile($sub,'discoverer','install-plan.properties'),\
  catFile($sub,'discoverer','mbeans.xml'),\
  grepDir(catDir($sub,'discoverer','discoverer.war','WEB-INF'),'\.xml$','ip'),\
  grepDir(catDir($sub,'discoverer','META-INF'),'\.xml$','ip'))
}
loop $prd (grepDir(catDir($dir,'tmp','_WL_user'),'^discoverer','np'))
{loop $sub (grepDir($prd,'^\.+$','npv'))
  call push(@tbl,catFile($sub,'war','WEB-INF','web.xml'))
}
pretoc '2:Oracle Discoverer Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_ExtDomCfg_Config: Collect extended domain common config files
# -----------------------------------------------------------------------------

section WLS_ExtDomCfg_Config

=head2 Extended Domain Common Configuration Files

Gathers domain-wide Oracle WebLogic Server-related C<properties> and C<xml>
domain configuration files from the F<$DOMAIN_HOME> directory structure but
outside the F<$DOMAIN_HOME/config> directory structure.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering extended domain configuration files'
var @tbl = ()
call get_config(\@tbl,$dir,\
  '^(appl|config|osb|sbgen|security|servers|ucm)$',false)
pretoc '2:Extended Domain Common Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_ExtSrvCfg_Config: Collect extended server common config files
# -----------------------------------------------------------------------------

section WLS_ExtSrvCfg_Config

=head2 Extended Domain Server Common Configuration Files

Gathers server-wide Oracle WebLogic Server-related C<properties> and C<xml>
server configuration files from the F<$DOMAIN_HOME/servers> directory structure
but outside F<$DOMAIN_HOME/config/servers> directory structure.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering extended server configuration files'
var @tbl = ()
call push(@tbl,grepDir($dir,'\.(properties|xml)$','dir'))
call get_app_conf(\@tbl,$dir,'ldap','data')
call get_app_conf(\@tbl,$dir,'nodemanager','data')
call get_app_conf(\@tbl,$dir,'OIF','stage')
pretoc '2:Extended Domain Server Common Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HFR_Config: Collect HFR config files from Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HFR_Config

=head2 HFR Domain Configuration Files

Gathers domain-wide Oracle Hyperion Financial Reporting-related Oracle WebLogic
Server configuration files.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering HFR domain configuration files'
pretoc '2:HFR Domain Configuration Files'
call sort_files(3,0,catFile($dir,'config','config.xml'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HFR_SrvCfg_Config: Collect HFR server config files from Oracle
#                                WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HFR_SrvCfg_Config

=head2 HFR Domain Server Configuration Files

Collects the Oracle Hyperion Financial Reporting-related configuration files
for Oracle WebLogic Server.

=cut

var ($dir,$top,$srv) = @arg

debug '   - Inside FMWdft module, gathering HFR configuration files'
var $cfg = catDir($top,'config','fmwconfig','servers','FinancialReporting0')
pretoc '2:HFR Domain Server Configuration Files'
call sort_files(3,0,catFile($cfg,'logging.xml'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HSS_Config: Collect HSS config files from Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HSS_Config

=head2 HSS Domain Configuration Files

Gathers domain-wide Oracle Hyperion Shared Services-related Oracle WebLogic
Server configuration files.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering HSS domain configuration files'
pretoc '2:HSS Domain Configuration Files'
call sort_files(3,0,\
  catFile($dir,'fileRealm.properties'),\
  catFile($dir,'config','config.xml'),\
  catFile($dir,'config','jdbc','EPMSystemRegistry-jdbc.xml'),\
  catFile($dir,'config','jdbc','raframework_datasource-jdbc.xml'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HSS_SrvCfg_Config: Collect HSS server config files from Oracle
#                                WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HSS_SrvCfg_Config

=head2 HSS Domain Server Configuration Files

Collects the Oracle Hyperion Shared Services-related configuration files for
Oracle WebLogic Server.

=cut

var ($dir,$top,$srv) = @arg

debug '   - Inside FMWdft module, gathering HSS configuration files'
var $cfg = catDir($top,'config','fmwconfig','servers','FoundationServices0')
pretoc '2:HSS Domain Server Configuration Files'
call sort_files(3,0,catFile($cfg,'logging.xml'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_MinDomCfg_Config: Collect minimum domain common config files
# -----------------------------------------------------------------------------

section WLS_MinDomCfg_Config

=head2 Domain Common Configuration Files

Gathers domain-wide Oracle WebLogic Server-related configuration files
from the F<$DOMAIN_HOME/config> directory structure.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering minimum domain configuration files'
var @tbl = ()
call get_config(\@tbl,\
 catDir($dir,'config'),'^(backup|servers|bipublisher)$',true)
pretoc '2:Domain Common Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_MinSrvCfg_Config: Collect minimum server common config files
# -----------------------------------------------------------------------------

section WLS_MinSrvCfg_Config

=head2 Domain Server Common Configuration Files

Gathers server-wide Oracle WebLogic Server-related configuration files from
the F<$DOMAIN_HOME/config/servers> directory structure.

=cut

var ($dir,$srv) = @arg

debug '   - Inside FMWdft module, gathering minimum server configuration files'
var @tbl = ()
call get_conf(\@tbl,catDir($dir,'fmwconfig','servers',$srv))
call get_conf(\@tbl,catDir($dir,'oracle','servers',$srv))
pretoc '2:Domain Server Common Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OAM_Collect: Collect OAM policy data from Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OAM_Collect

=head2 Oracle Access Manager

=head3 policydata - Policy Data

Collects Oracle Access Manager-related policy data.

RDA uses C<exportPolicy> in connected mode.

=cut

var ($dom,$srv,$hst,$prt,$usr,$pwd) = @arg

if ?$OAM
{if match($OAM,quote($srv),true)
 {debug '   - Inside FMWdft module, gathering OAM policy data'
  pretoc '3:Oracle Access Manager'
  set $cod
  {exportPolicy(out)
  "
  }

  # Set the OAM environment
  var ($hom,%env) = (catDir(nvl(getHome('.'),''),upDir()))
  var $env{'ORACLE_HOME'} = setEnv('ORACLE_HOME',$hom)
  var $env{'WLST_HOME'}   = setEnv('WLST_HOME',catDir($hom,'common','wlst'))
  if testFile('e',catFile($hom,'common','bin',${AS.CMD:'setOAMWlstEnv'}))
   call source(getNativePath(lastFile()),true)
  else
   call source(getNativePath(catFile($hom,'common','bin',\
                                     ${AS.CMD:'setWlstEnv'})),true)

  # Get the policy data
  output F,policydata
  prefix
  {write "---+ '",$srv,"' Policy Data (",$dom,')'
   write '---## Using: exportPolicy'
  }
  var $out = newTemp('OAM')
  call setWasLogin($usr,$pwd,concat($hst,':',$prt))
  call requestWas($cod,{out => quote($out,'x')})
  call writeFile($out)
  call unlinkTemp('OAM')
  if isCreated(true)
   toc '4:[[',getFile(),'][rda_report][Policy Data]]'

  # Restore the previous environment
  loop $key (keys(%env))
   call setEnv($key,$env{$key})
  unpretoc
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OIM_Collect: Collect OIM metadata for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OIM_Collect

=head2 Oracle Identity Manager

Gathers application metadata for the OIM related-server by exporting metadata.

RDA uses C<exportMetadata> in connected mode.

=cut

var ($dom,$srv,$hst,$prt,$usr,$pwd) = @arg

if ?$OIM
{var ($key,$trg) = split('\|',$OIM,2)
 if match($trg,quote($srv),true)
 {debug '   - Inside FMWdft module, collecting OIM server metadata'
  set $cod
  {exportMetadata(application=app,server=ins,toLocation=out,\
                  applicationVersion=ver)
  "
  }
  var ($app,$ver) = split('\#',$key)
  data concat('metadata_i_',$srv,'.zip')
  var ($out,$lnk) = (getFile('/'),getFile('.'))
  call setWasLogin($usr,$pwd,concat($hst,':',$prt))
  call requestWas($cod,{app => $app,\
                        ins => $srv,\
                        out => join('/',splitDir(${OUT.C}),$lnk),\
                        ver => $ver})
  report concat('i_',$srv,'_metadata')
  if $siz = getSize($out)
  {write "---+ '",$srv,"' Metadata (",$dom,')'
   write '   * Links point to files that have been collected in their \
               original format. Opening them directly in your browser can \
               present security risks. To prevent them, access the file \
               outside the browser or use the link to save them and use an \
               adequate viewer.'
   write '|*Metadata Name*| *Size*|*Last Modified Date*|'
   write '|[[',$lnk,'][_blank][',$app,'.zip]]| ',$siz,'|',\
               getLastModify($out,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
   toc '3:Oracle Identity Manager'
   toc '4:[[',getFile(),'][rda_report][Metadata Information]]'
  }
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OSB_Collect: Collect OSB data from Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OSB_Collect

=head2 Oracle Service Bus

Collects the Oracle Service Bus-related runtime management objects
information.

=head3 JMSServer Information

Collects JMS server runtime and JMS destination runtime management objects
information.

=cut

var ($dom,$srv,$hst,$prt,$usr,$pwd) = @arg

if ?$OSB
{if match($OSB,quote($srv),true)
 {debug '   - Inside FMWdft module, gathering OSB JMS-related data'
  pretoc '3:Oracle Service Bus'
  set $cod
  {import re
  "
  "domainRuntime()
  "cd("ServerRuntimes")
  "print '---# RDA:BEGIN SECTION:4:JMSServer Information'
  "try:
  " for srv in ls('c',returnMap='true'):
  "  cd(srv+"/JMSRuntime/"+srv+".jms/JMSServers")
  "  print "---# RDA:BEGIN SECTION:5:'"+srv+"' Server"
  "  for jms in ls('c',returnMap='true'):
  "   cd(jms)
  "   print '---# RDA:BEGIN'
  "   ls()
  "   print "---# RDA:END MACRO MBean:6|'"+jms+"' JMS Server|'"+srv+"' JMS \
            Server Runtime Information ("+bas+')|'+pwd()+'|i_'+srv+'_svr_'+jms+\
            '_jms_attr'
  "   cd('Destinations')
  "   print '---# RDA:BEGIN'
  "   ls()
  "   print "---# RDA:END MACRO MBean:7|JMS Destination|'"+srv+"' JMS \
            Destination Runtime Information ("+bas+')|'+pwd()+'|i_'+srv+\
            '_svr_'+jms+'_jms_dest'
  "   for des in ls('c',returnMap='true'):
  "    cd(des)
  "    print '---# RDA:BEGIN'
  "    ls()
  "    print "---# RDA:END MACRO MBean:8|"+des+"|'"+srv+"' JMS Destination \
             Runtime Information ("+bas+')|'+pwd()+'|i_'+srv+'_svr_'+jms+\
             '_jms_'+des
  "    cd('..')
  "   cd('../..')
  "  print '---# RDA:END SECTION'
  "  cd('../../../..')
  "except WLSTException,e:
  " pass
  "print '---# RDA:END SECTION'
  "cd('..')
  "
  }
  call setWasLogin($usr,$pwd,concat($hst,':',$prt))
  call writeWas($cod,{bas => $dom,\
                      ins => $srv})
  unpretoc
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OFA_Config: Collect OFA config files from Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OFA_Config

=head2 OFA Domain Configuration Files

Gathers domain-wide Oracle Fusion Applications-related Oracle WebLogic
Server configuration files.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering OFA domain configuration files'

# Macro to get the OFA-related configuration files
macro get_ofa_config
{var (\@tbl,$dir,$pat,$flg) = @arg

 # Analyze the directory
 loop $nam (grepDir($dir,'^\.+$','nv'))
 {next match($nam,$pat,true)
  var $pth = catFile($dir,$nam)
  if testDir('d',$pth)
   call push(@sub,$pth)
  elsif $flg
   next
  else
   call push(@tbl,$pth)
 }

 # Treat the subdirectories
 loop $sub (@sub)
  call get_ofa_config(\@tbl,$sub,'^servers$',false)
}

var @tbl = ()
call get_config(\@tbl,catDir($dir,'config'),\
  '^(backup|(deployments|fmwconfig|servers|bipublisher)$)',true)
call push(@tbl,\
  catFile($dir,'config','fmwconfig','jps-config-jse.xml'),\
  catFile($dir,'config','fmwconfig','jps-config.xml'),\
  catFile($dir,'config','fmwconfig','keystores.xml'),\
  catFile($dir,'config','fmwconfig','logging-template.xml'),\
  catFile($dir,'config','fmwconfig','opss-resource-types.xml'),\
  catFile($dir,'config','fmwconfig','policy-accessor-config.xml'),\
  catFile($dir,'config','fmwconfig','system-jazn-data.xml'),\
  catFile($dir,'config','fmwconfig','usermessagingconfig.xml'))
call get_ofa_config(\@tbl,catDir($dir,'config','fmwconfig'),\
  '^(arisidprovider|carml|jboss|ovd|servers|server-config-template)$',true)
pretoc '2:OFA Domain Configuration Files'
call sort_files(3,0,@tbl)
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OFA_SrvCfg_Config: Collect OFA config files for Oracle WebLogic
#                                Server
# -----------------------------------------------------------------------------

section WLS_OFA_SrvCfg_Config

=head2 OFA Domain Server Configuration Files

Collects the Oracle Fusion Applications-related configuration files for Oracle
WebLogic Server.

=cut

var ($dir,$top,$srv) = @arg

debug '   - Inside FMWdft module, gathering OFA configuration files'
var $cfg = catDir($top,'config','fmwconfig','servers',$srv)
pretoc '2:OFA Domain Server Configuration Files'
call sort_files(3,0,\
  grepDir($cfg,'backup','npv'),\
  grepDir(catDir($cfg,'applications'),'^oracle-webservices.xml$','dr'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OSB_Config: Collect OSB config files for Oracle WebLogic Domain
# -----------------------------------------------------------------------------

section WLS_OSB_Config

=head2 OSB Domain Configuration Files

Collects the Oracle Service Bus-related configuration files for Oracle WebLogic
Domain.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering OSB configuration files'
pretoc '2:OSB Domain Configuration Files'
call sort_all_files(3,0,\
 grepDir(catDir($dir,'lib'),'\.(bat|cmd|jar|sh|txt|xml)$|^README','ip'),\
 grepDir(catDir($dir,'osb'),'^\.+$','rv'),\
 grepDir(catDir($dir,'sbgen'),'^\.+$','rv'),\
 grepDir(catDir($dir,'security'),'\.ldift$','ip'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OSB_SrvCfg_Config: Collect OSB config files for Oracle WebLogic
#                                Server
# -----------------------------------------------------------------------------

section WLS_OSB_SrvCfg_Config

=head2 OSB Domain Server Configuration Files

Collects the Oracle Service Bus-related configuration files for Oracle
WebLogic Server.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering OSB configuration files'
pretoc '2:OSB Domain Server Configuration Files'
call sort_files(3,0,\
 grepDir(catDir($dir,'data','ldap'),'\.ldift$','ip'),\
 grepDir(catDir($dir,'data','ldap','conf'),'^\.+$','pv'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_SOA_Collect: Collect SOA metadata for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_SOA_Collect

=head2 Oracle SOA Suite

=head3 metadata - SOA Configuration Information

Gathers application metadata for the SOA related-server by exporting metadata.

RDA uses C<exportMetadata> in connected mode.

=head3 soa_comp_diag_dump - SOA Composite Diagnostic Dump

Gathers SOA composite diagnostic dump.

RDA uses C<executeDump> in connected mode.

=head3 soa_wsdl_diag_dump - SOA WSDL Diagnostic Dump

Gathers SOA WSDL diagnostic dump.

RDA uses C<executeDump> in connected mode.

=cut

var ($dom,$srv,$hst,$prt,$usr,$pwd) = @arg

if ?$SOA
{var ($key,$trg) = split('\|',$SOA,2)
 if or(match($trg,quote($srv),true),\
       and(defined($CLUSTER{$srv}),match($trg,quote($CLUSTER{$srv}),true)))
 {debug '   - Inside FMWdft module, collecting SOA server metadata'
  pretoc '3:Oracle SOA Suite'
  set $cod
  {exportMetadata(application=app,server=ins,toLocation=out,\
                  docs='/soa/configuration/default/**')
  "
  }
  var ($app,undef) = split('\#',$key)
  var $rpt = $[OUT]->add_report('d',concat('metadata_i_',$srv),0,'.zip')
  var ($out,$lnk) = ($rpt->get_file(true),$rpt->get_file)
  call setWasLogin($usr,$pwd,concat($hst,':',$prt))
  call requestWas($cod,{app => $app,\
                        ins => $srv,\
                        out => join('/',splitDir(${OUT.C}),$lnk)})
  end $rpt
  report concat('i_',$srv,'_metadata')
  if $siz = getSize($out)
  {write "---+ '",$srv,"' SOA Configuration Information (",$dom,')'
   write '   * Links point to files that have been collected in their \
               original format. Opening them directly in your browser can \
               present security risks. To prevent them, access the file \
               outside the browser or use the link to save them and use an \
               adequate viewer.'
   write '|*Metadata Name*| *Size*|*Last Modified Date*|'
   write '|[[',$lnk,'][_blank][',$app,'.zip]]| ',$siz,'|',\
               getLastModify($out,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
   toc '4:[[',getFile(),'][rda_report][SOA Configuration Information]]'
  }

  # Collect soa diagnostic dump to get composite information
  if ${SOA_COMP_DIAG_DUMP}
  {debug '   - Inside FMWdft module, collecting SOA composite diag dump'
   set $cod
   {executeDump(name='soa.composite',appName=app,\
                args={'compositeName':'*','output':out})
   "
   }
   call setWasLogin($usr,$pwd,concat($hst,':',$prt))
   call requestWas($cod,{app => $app,\
                         out => join('/',splitDir(${OUT.C}))})
   if grepDir(${OUT.C},'^soa_composite\d+\.zip$','it')
   {var ($nam) = (last)
    data $nam
    if transfer(${OUT.C},$nam,${OUT.C},$lnk = getFile('.'))
    {report concat('i_',$srv,'_soa_comp_diag_dump')
     write "---+ '",$srv,"' SOA Composite Diagnostic Dump (",$dom,')'
     write '   * Links point to files that have been collected in their \
                 original format. Opening them directly in your browser can \
                 present security risks. To prevent them, access the file \
                 outside the browser or use the link to save them and use an \
                 adequate viewer.'
     write '|*Diagnostic Dump Name*|'
     write '|[[',$lnk,'][_blank][',$nam,']]|'
     toc '4:[[',getFile(),'][rda_report][SOA Composite Diagnostic Dump]]'
    }
   }
  }

  # Collect soa diagnostic dump to get WSDL information
  if ${SOA_WSDL_DIAG_DUMP}
  {debug '   - Inside FMWdft module, collecting SOA WSDL diag dump'
   set $cod
   {print '---# RDA:BEGIN'
   "executeDump(name='soa.wsdl',appName=app,args={'compositeName':'*'})
   "print "---# RDA:END REPORT:4|SOA WSDL Diagnostic Dump|'"+ins+"' SOA WSDL \
           Diagnostic Dump ("+bas+')|'+pwd()+'|i_'+ins+'_soa_wsdl_diag_dump'
   "
   }
   call setWasLogin($usr,$pwd,concat($hst,':',$prt))
   call writeWas($cod,{app => $app,\
                       bas => $dom,\
                       ins => $srv})
  }

  # Collect common information only once for a domain
  if !$SOA_COMMON
  {debug '   - Inside FMWdft module, gathering SOA MBean-related information'
   set $cod
   {custom()
   "try:
   " cd('/oracle.as.soainfra.bpel')
   " cd('oracle.as.soainfra.bpel:type=BPELEngine,name=BPELEngine')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|BPEL Engine Runtime|BPEL Engine Runtime \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_bpel_eng_runtime'
   " cd('/oracle.as.soainfra.bpm')
   " cd('oracle.as.soainfra.bpm:name=CubeDispatcher,type=bpel')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|BPEL Cube Dispatcher Runtime|BPEL Cube \
            Dispatcher Runtime Information ('+bas+')|'+pwd()+'|i_'+ins+\
            '_bpel_cubedisp_runtime'
   " cd('..')
   " cd('oracle.as.soainfra.bpm:name=CubeDispatcher,type=bpmn')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|BPMN Cube Dispatcher Runtime|BPMN Cube \
            Dispatcher Runtime Information ('+bas+')|'+pwd()+'|i_'+ins+\
            '_bpmn_cubedisp_runtime'
   " cd('/oracle.as.soainfra.config')
   " cd('oracle.as.soainfra.config:name=bpel,type=BPELConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|BPEL Configuration|BPEL Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_bpel_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=adapter,type=AdapterConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|Adapter Configuration|Adapter \
            Configuration Information ('+bas+')|'+pwd()+'|i_'+ins+'_adp_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=b2b,type=B2BConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|B2B Configuration|B2B Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_b2b_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=bpmn,type=BPMNConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|BPMN Configuration|BPMN Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_bpmn_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=business-rules,\
         type=BusinessRulesConfig,Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|Business Rules Configuration|Business \
            Rules Configuration Information ('+bas+')|'+pwd()+'|i_'+ins+\
            '_br_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=cep,type=CEPConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|CEP Configuration|CEP Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_cep_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=edn,type=EDNConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|EDN Configuration|EDN Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_edn_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=human-workflow,type=HWFMailerConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|HWF Configuration|HWF Configuration \
            Information ('+bas+')|'+pwd()+'|i_'+ins+'_hwf_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=mediator,type=MediatorConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|Mediator Configuration|Mediator \
            Configuration Information ('+bas+')|'+pwd()+'|i_'+ins+'_med_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=soa-infra,type=SoaInfraConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|SOA Infra Configuration|SOA Infra \
            Configuration Information ('+bas+')|'+pwd()+'|i_'+ins+'_soa_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=human-workflow,type=WorkflowConfig,\
         Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|Workflow Configuration|Workflow \
            Configuration Information ('+bas+')|'+pwd()+'|i_'+ins+'_wf_config'
   " cd('..')
   " cd('oracle.as.soainfra.config:name=human-workflow,\
         type=WorkflowIdentityConfig,Application=soa-infra')
   " print '---# RDA:BEGIN'
   " ls()
   " print '---# RDA:END MACRO MBean:4|Workflow Identity Configuration|\
            Workflow Identity Configuration Information ('+bas+')|'+pwd()+\
            '|i_'+ins+'_wfi_config'
   "except:
   " pass
   }

   # Set the SOA environment
   var ($dir,%env) = (catDir(nvl(getHome('.'),''),'common','wlst'))
   var $env{'WLST_HOME'} = setEnv('WLST_HOME',$dir)
   var $cls = getEnv($key = 'CLASSPATH',undef,true)
   call setEnv($key,join(${RDA.SEPARATOR},$cls,\
                         grepDir(catDir($dir,'lib'),'\.jar$','ip'),\
                         grepDir(catDir($dir,'resources'),'\.jar$','ip')))
   var $env{$key} = $cls

   call setWasLogin($usr,$pwd,concat($hst,':',$prt))
   if !writeWas($cod,{bas => $dom,\
                      ins => $srv})
   {var $SOA_COMMON = true
    keep $SOA_COMMON
   }

   # Restore the previous environment
   loop $key (keys(%env))
    call setEnv($key,$env{$key})
  }
  unpretoc
 }
}

# -----------------------------------------------------------------------------
# Section WLS_WC_Collect: Collect WC information in Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_WC_Collect

=head2 Oracle WebCenter Suite

Collects the Oracle WebCenter Suite-related configuration management objects
information.

=cut

var ($dom,$srv,$hst,$prt,$usr,$pwd) = @arg

if ?$WC
{if match($WC,quote($srv),true)
 {debug '   - Inside FMWdft module, gathering WC MBean-related information'
  pretoc '3:Oracle WebCenter Suite'
  set $cod
  {print '---# RDA:BEGIN'
  "try:
  " listCommunityEventConnections('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Community Event Connections|'"+ins+"' \
          Community Event Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_com_evt'
  "print '---# RDA:BEGIN'
  "try:
  " listPersonalEventConnections(appName='webcenter',verbose=true)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Personal Event Connections|'"+ins+"' Personal \
          Event Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_per_evt'
  "print '---# RDA:BEGIN'
  "try:
  " listWebConfConnections('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Web Conference Connections|'"+ins+"' Web \
          Conference Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_con'
  "print '---# RDA:BEGIN'
  "try:
  " listDiscussionForumConnections(appName='webcenter',verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Discussion Forum Connections|'"+ins+"' \
          Discussion Forum Connections Information ("+bas+')|'+pwd()+\
          '|i_'+ins+'_wc_dis'
  "print '---# RDA:BEGIN'
  "try:
  " listIMPConnections(appName='webcenter',verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|IMP Connections|'"+ins+"' IMP Connections \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_imp'
  "print '---# RDA:BEGIN'
  "try:
  " listMailConnections(appName='webcenter',verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Mail Connections|'"+ins+"' Mail Connections \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_mail'
  "print '---# RDA:BEGIN'
  "try:
  " listExtAppConnections(appName='webcenter',verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|ExtApp Connections|'"+ins+"' ExtApp \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_ext'
  "print '---# RDA:BEGIN'
  "try:
  " listWorklistConnections(appName='webcenter',verbose=true)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Worklist Connections|'"+ins+"' Worklist \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_wrk'
  "print '---# RDA:BEGIN'
  "try:
  " getSpacesWorkflowConnectionName('webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Spaces Workflow|'"+ins+"' Spaces Workflow \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_spaces'
  "print '---# RDA:BEGIN'
  "try:
  " listWSRPProducers('webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|WSRP Producers|'"+ins+"' WSRP Producers \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_wsrp_prod'
  "print '---# RDA:BEGIN'
  "try:
  " listPDKJavaProducers('webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|PDK Java Producers|'"+ins+"' PDK Java \
          Producers Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_pdk_java_prod'
  "print '---# RDA:BEGIN'
  "try:
  " listJCRContentServerConnections('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|JCR Content Server Connections|'"+ins+"' JCR \
          Content Server Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_jcr_cs'
  "print '---# RDA:BEGIN'
  "try:
  " listJCRFileSystemConnections('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|JCR File System Connections|'"+ins+"' JCR \
          File System Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_jcr_fs'
  "print '---# RDA:BEGIN'
  "try:
  " listJCRPortalConnections('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|JCR Portal Connections|'"+ins+"' JCR Portal \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_jcr_portal'
  "print '---# RDA:BEGIN'
  "try:
  " listTaskConnection('webcenter',false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Task Connection|'"+ins+"' Task Connection \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_task'
  "print '---# RDA:BEGIN'
  "try:
  " listSESConnections(appName='webcenter',verbose=true)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|SES Connections|'"+ins+"' SES Connections \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_ses'
  "print '---# RDA:BEGIN'
  "try:
  " listAnalyticsCollectorConnections(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Analytics Collector Connection|'"+ins+"' \
          Analytics Collector Connection Information ("+bas+')|'+pwd()+\
          '|i_'+ins+'_wc_analytics_coll'
  "print '---# RDA:BEGIN'
  "try:
  " listDefaultAnalyticsCollectorConnection(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Default Analytics Collector Connection|'"+\
          ins+"' Default Analytics Collector Connection Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_dft_analytics_coll'
  "print '---# RDA:BEGIN'
  "try:
  " listAnalyticsCollectorConfig(appName='analytics-collector')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Analytics Collector Configuration|'"+\
          ins+"' Analytics Collector Configuration Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_analytics_coll_cfg'
  "print '---# RDA:BEGIN'
  "try:
  " listAnalyticsEventTypes(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Analytics Collector Configuration|'"+\
          ins+"' Analytics Collector Configuration Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_analytics_coll_cfg'
  "print '---# RDA:BEGIN'
  "try:
  " listJCRSharePointConnections(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|JCR Share Point Connections|'"+\
          ins+"' JCR Share Point Connections Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_jcr_shrpoint_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listDocumentsSpacesProperties(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Documents Spaces Properties|'"+\
          ins+"' Documents Spaces Properties Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_doc_space_prop'
  "print '---# RDA:BEGIN'
  "try:
  " listDefaultDiscussionForumConnection(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Default Discussion Forum Connection|'"+\
          ins+"' Default Discussion Forum Connection Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_dft_disc_forum_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listDiscussionForumServiceProperties(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Discussion Forum Service Properties|'"+\
          ins+"' Discussion Forum Service Properties Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_dft_disc_forum_svc_prop'
  "print '---# RDA:BEGIN'
  "try:
  " listAnnouncementServiceProperties(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Announcement Service Properties|'"+\
          ins+"' Announcement Service Properties Information ("+bas+\
          ')|'+pwd()+'|i_'+ins+'_wc_annoc_svc_prop'
  "print '---# RDA:BEGIN'
  "try:
  " listIMPAdapters()
  "except:
  " pass
  "print "---# RDA:END REPORT:4|IMP Adapters|'"+ins+"' IMP Adapters \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_imp_adapters'
  "print '---# RDA:BEGIN'
  "try:
  " listDefaultIMPConnection(appName='webcenter',verbose=true)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Default IMP Connection|'"+ins+"' Default IMP \
          Connection Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_dft_imp_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listIMPServiceProperties(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|IMP Service Properties|'"+ins+"' IMP Service \
          Properties Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_imp_svc_prop'
  "print '---# RDA:BEGIN'
  "try:
  " listDefaultMailConnection(appName='webcenter',verbose=true)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Default Mail Connection|'"+ins+"' Default Mail \
          Connection Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_dft_mail_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listMailServiceProperties(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Mail Service Properties|'"+ins+"' Mail Service \
          Properties Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_mail_svc_prop'
  "print '---# RDA:BEGIN'
  "try:
  " listWCPSCMISConnections(verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|WCPSCMIS Connections|'"+ins+"' WCPSCMIS \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_wcpscmis_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listWCPSActivityGraphConnections(verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|WCPS Activity Graph Connections|'"+\
          ins+"' WCPS Activity Graph Connections Information ("+bas+')|'+\
          pwd()+'|i_'+ins+'_wc_wcps_act_graph_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listWCPSPeopleConnections(verbose=false)
  "except:
  " pass
  "print "---# RDA:END REPORT:4|WCPS People Connections|'"+ins+"' WCPS People \
          Connections Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_wcps_people_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listPageletProducers(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Pagelet Producers|'"+ins+"' Pagelet Producers \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_pagelet_prod'
  "print '---# RDA:BEGIN'
  "try:
  " listSearchSESConfig(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Search SES Configuration|'"+ins+"' Search SES \
          Configuration Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_sch_ses_cfg'
  "print '---# RDA:BEGIN'
  "try:
  " listSearchConfig(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Search Configuration|'"+ins+"' Search \
          Configuration Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_sch_cfg'
  "print '---# RDA:BEGIN'
  "try:
  " listBPELConnections(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|BPEL Connections|'"+ins+"' BPEL Connections \
          Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_bpel_conn'
  "print '---# RDA:BEGIN'
  "try:
  " listWebCenterIdStoreSearchConfig(appName='webcenter')
  "except:
  " pass
  "print "---# RDA:END REPORT:4|Id Store Search Configuration|'"+ins+"' Id \
          Store Search Configuration Information ("+bas+')|'+pwd()+'|i_'+ins+\
          '_wc_id_str_sch_cfg'
  "if ses == 1:
  " print '---# RDA:BEGIN'
  " try:
  "  listSpacesCrawler(appName='webcenter',sesUrl=sesurl,sesPassword=sespwd,\
                       host=hst,port=prt)
  " except:
  "  pass
  " print "---# RDA:END REPORT:4|Spaces Crawler|'"+ins+"' Spaces Crawler \
           Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_spaces_crawler'
  " print '---# RDA:BEGIN'
  " try:
  "  listDocumentsCrawler(appName='webcenter',sesUrl=sesurl,sesPassword=sespwd,\
                          host=hst,port=prt)
  " except:
  "  pass
  " print "---# RDA:END REPORT:4|Documents Crawler|'"+ins+"' Documents Crawler \
           Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_docs_crawler'
  " print '---# RDA:BEGIN'
  " try:
  "  listDiscussionsCrawler(appName='webcenter',sesUrl=sesurl,\
                            sesPassword=sespwd,host=hst,port=prt)
  " except:
  "  pass
  " print "---# RDA:END REPORT:4|Discussions Crawler|'"+ins+"' Discussions \
           Crawler Information ("+bas+')|'+pwd()+'|i_'+ins+'_wc_disc_crawler'
  }

  # Set the WebCenter environment
  var ($dir,%env) = (catDir(nvl(getHome('.'),''),'common','wlst'))
  var $env{'WLST_HOME'} = setEnv('WLST_HOME',$dir)
  var $cls = getEnv($key = 'CLASSPATH',undef,true)
  call setEnv($key,join(${RDA.SEPARATOR},$cls,\
                        grepDir(catDir($dir,'lib'),'\.jar$','ip'),\
                        grepDir(catDir($dir,'resources'),'\.jar$','ip')))
  var $env{$key} = $cls

  call setWasLogin($usr,$pwd,concat($hst,':',$prt))
  if and($WC_SES_HOST,$WC_SES_PORT,$WC_SES_PWD)
   call writeWas($cod,{\
     '+ses',1,\
     '+prt',$prt,\
     bas => $dom,\
     ins => $srv,\
     hst => $hst,\
     sesurl => concat('http://',$WC_SES_HOST,':',$WC_SES_PORT,\
                      '/search/api/admin/AdminService'),\
     sespwd => $WC_SES_PWD})
  else
   call writeWas($cod,{'+ses',0,\
                       bas => $dom,\
                       ins => $srv})

  # Restore the previous environment
  loop $key (keys(%env))
   call setEnv($key,$env{$key})
  unpretoc
 }
}

# -----------------------------------------------------------------------------
# Section WLS_GRID_Init: Get the GRID servers
# -----------------------------------------------------------------------------

section WLS_GRID_Init

var ($top,$dom) = @arg
delete $GRID

if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {loop $xml (xmlFind($obj,'domain/app-deployment'))
  {if match($app = xmlData(xmlFind($xml,'name')),'^emgc$')
   {var $GRID = join('|',$app,xmlData(xmlFind($xml,'target')))
    keep $GRID
    break
   }
  }
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OAM_Init: Get the OAM Admin Server
# -----------------------------------------------------------------------------

section WLS_OAM_Init

var ($top,$dom) = @arg
delete $OAM

if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {var $OAM = xmlData(xmlFind($obj,'domain/admin-server-name'))
  keep $OAM
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OIM_Init: Get the OIM servers containing Metadata
# -----------------------------------------------------------------------------

section WLS_OIM_Init

var ($top,$dom) = @arg
delete $OIM

if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {loop $xml (xmlFind($obj,'domain/app-deployment'))
  {if match($app = xmlData(xmlFind($xml,'name')),'^(OIMMetadata|oim)')
   {var $OIM = join('|',$app,xmlData(xmlFind($xml,'target')))
    keep $OIM
    break
   }
  }
 }
}

# -----------------------------------------------------------------------------
# Section WLS_OSB_Init: Get the OSB Admin Server
# -----------------------------------------------------------------------------

section WLS_OSB_Init

var ($top,$dom) = @arg
delete $OSB

if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {var $OSB = xmlData(xmlFind($obj,'domain/admin-server-name'))
  keep $OSB
 }
}

# -----------------------------------------------------------------------------
# Section WLS_SOA_Init: Get the SOA servers containing Metadata
# -----------------------------------------------------------------------------

section WLS_SOA_Init

var ($top,$dom) = @arg
delete $SOA,$SOA_COMMON,%CLUSTER

if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {# Identify SOA-related target servers
  loop $xml (xmlFind($obj,'domain/app-deployment'))
  {if match($app = xmlData(xmlFind($xml,'name')),'^soa-infra')
   {var $SOA = join('|',$app,xmlData(xmlFind($xml,'target')))
    keep $SOA
    break
   }
  }

  # Identify if the target server is linked to a cluster
  if xmlFind($obj,'domain/server')
  {loop $xml (last)
   {if xmlFind($xml,'cluster')
     var $CLUSTER{xmlData(xmlFind($xml,'name'))} = xmlData(last)
    else
     var $CLUSTER{xmlData(xmlFind($xml,'name'))} = undef
   }
   keep %CLUSTER
  }
 }
}

# -----------------------------------------------------------------------------
# Section WLS_WC_Init: Get the WC Admin Server
# -----------------------------------------------------------------------------

section WLS_WC_Init

var ($top,$dom) = @arg
delete $WC,$WC_SES_HOST,$WC_SES_PORT,$WC_SES_PWD

# Get the WC Admin Server
if testFile('fr',catFile($top,'config','config.xml'))
{var $obj = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'BCDEPR'))
 if match(xmlData(xmlFind($obj,'domain/name')),quote($dom),true)
 {var $WC = xmlData(xmlFind($obj,'domain/admin-server-name'))
  keep $WC
 }
}

# Get the admin password for SES
once ${WC_SES_COLLECT}
{var $WC_SES_HOST = getSetting('WC_SES_HOST')
 var $WC_SES_PORT = getSetting('WC_SES_PORT')

 if !length($WC_SES_HOST)
 {echo 'Missing host name for Oracle Secure Enterprise Search instance'
  break
 }
 if !match($WC_SES_HOST,'^[\w\-\.]+$')
 {echo 'Invalid Oracle Secure Enterprise Search host name'
  break
 }
 if !and(match($WC_SES_PORT,'^\d+$'),\
         expr('>=',$WC_SES_PORT,1),\
         expr('<=',$WC_SES_PORT,65535))
 {echo 'Invalid Oracle Secure Enterprise Search port number'
  break
 }
 var $WC_SES_PWD = askPassword(\
   'Enter the Admin password for Oracle Secure Enterprise Search:')
 keep $WC_SES_HOST,$WC_SES_PORT,$WC_SES_PWD
}

# -----------------------------------------------------------------------------
# Section WLS_PDA_Config: Collect PDA config files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_PDA_Config

=head2 Portal Configuration Files

Collects the Oracle Portal-related configuration files for Oracle WebLogic
Server.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering PDA configuration files'
pretoc '2:Portal Configuration Files'
call sort_files(3,0,grepDir(\
 catDir($dir,'stage','portal','portal','configuration'),'\.conf$','ip'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_WC_Config: Collect WC config files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_WC_Config

=head2 WebCenter Configuration Files

Collects the Oracle WebCenter Suite-related configuration files for Oracle
WebLogic Server.

=cut

var ($dir) = @arg

debug '   - Inside FMWdft module, gathering WC configuration files'
pretoc '2:WebCenter Configuration Files'
call sort_files(3,0,\
 grepDir(catDir($dir,'data','ldap','conf'),'^\.+$','pv'),\
 grepDir(catDir($dir,'data','ldap','ldapfiles'),'^\.+$','pv'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_BIPL_Log: Collect BIPL log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_BIPL_Log

=head2 BI Publisher Local Log Files

Collects the Oracle Business Intelligence Publisher-related local log files for
Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering BIPL log files'
pretoc '3:BI Publisher Local Log Files'
call sort_files(4,$lim,\
 catFile($dir,'logs','bipublisher','bipublisher.log'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_DEV_Log: Collect DEV log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_DEV_Log

=head2 Forms/Reports Local Log Files

Collects the Oracle Forms/Reports-related local log files for Oracle WebLogic
Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering DEV log files'
pretoc '3:Forms/Reports Local Log Files'
call sort_files(4,$lim,\
 grepDir(catDir($dir,'logs','formsapp'),'formsapp-diagnostic\.log$','ip'),\
 grepDir(catDir($dir,'logs','reports'),'_diagnostic\.log$','ip'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_EPMA_Log: Collect EPMA log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_EPMA_Log

=head2 EPMA Local Log Files

Collects the Oracle Hyperion Enterprise Performance Management Architect-
related local log files for Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering EPMA log files'
pretoc '3:EPMA Local Log Files'
call sort_files(4,$lim,\
  grepDir(catDir($dir,'logs'),'^(datasync|epma)(-\d+)?\.log$','ip'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_ESS_Log: Collect ESS log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_ESS_Log

=head2 ESS Local Log Files

Collects the Oracle Hyperion Essbase-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering ESS log files'
pretoc '3:ESS Local Log Files'
call sort_files(4,$lim,catFile($dir,'logs','easserver.log'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_FCM_Log: Collect FCM log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_FCM_Log

=head2 FCM Local Log Files

Collects the Oracle Hyperion Financial Close Management-related local log files
for Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering FCM log files'
pretoc '3:FCM Local Log Files'
call sort_files(4,$lim,catFile($dir,'logs','FinancialClose.log'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_GRID_Log: Collect GRID log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_GRID_Log

=head2 OMS Log Errors

Extracts C<ERROR> records from the specified Oracle Management Server-related
log files.

=cut

var ($dir,$lim) = @arg

if ?$GRID
{debug '   - Inside FMWdft module, gathering OMS log errors'
 var ($max,@fil) = (${WREQ_ROTATED_LOGS:2})
 var (undef,$trg) = split('\|',$GRID,2)
 loop $nam (grepDir(catDir($dir,'logs'),\
                    concat('^',$trg,'-diagnostic-?\d*\.log$'),'it'))
 {call push(@fil,catFile($dir,'logs',$nam))
  if match($nam,concat('^',$trg,'-diagnostic\.log$'),true)
  {break !$max
   next
  }
  break !decr($max)
 }
 call extract_errors('log_errors',3,'OMS Log Errors',$lim,@fil)
}

# -----------------------------------------------------------------------------
# Section WLS_HCM_Log: Collect HCM log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HCM_Log

=head2 HCM Local Log Files

Collects the Oracle Hyperion Calculation Manager-related local log files for
Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering HCM log files'
pretoc '3:HCM Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs'),\
  '^(apsserver|CalcManager|datasource|listener|Planning_Adf|ProxyFilter|\
     registry)\.log$','p'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HFM_Log: Collect HFM log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HFM_Log

=head2 HFM Local Log Files

Collects the Oracle Hyperion Financial Management-related local log files for
Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering HFM log files'
pretoc '3:HFM Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs','hfm'),'^[^\.]','p'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HFR_Log: Collect HFR log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HFR_Log

=head2 HFR Local Log Files

Collects the Oracle Hyperion Financial Reporting-related local log files for
Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering HFR log files'
pretoc '3:HFR Local Log Files'
call sort_files(4,getSetting('HFR_TAIL',$lim),\
  grepDir(catDir($dir,'logs'),\
          '^(audit_client|datasource|Framework|FRLogging|listener|registry|\
             SharedServices.*)\.log$','np'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_HSS_Log: Collect HSS log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_HSS_Log

=head2 HSS Local Log Files

Collects the Oracle Hyperion Shared Services-related local log files for
Oracle WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering HSS log files'
pretoc '3:HSS Local Log Files'
call sort_files(4,getSetting('HSS_TAIL',$lim),\
  grepDir(catDir($dir,'logs'),'^(SharedServices.*\.log$|\
                                 audit_client\.log|Framework\.log$)','rt'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_JMS_Log: Collect JMS log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_JMS_Log

=head2 OWSM Local Log Files

Collects the Oracle JMS Server-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering JMS log files'
pretoc '3:JMS Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs','jmsServers'),'^[^\.]','r',1))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OAM_Log: Collect OAM log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OAM_Log

=head2 OAM Local Log Files

Collects the Oracle Access Manager-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering OAM log files'
pretoc '3:OAM Local Log Files'
call sort_files(4,$lim,\
 grepDir(catDir($dir,'logs','auditlogs'),'^audit.log$','r',1))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OFA_Log: Collect OFA log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OFA_Log

=head2 OFA Local Log Files

Collects the Oracle Fusion Applications-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering OFA log files'
pretoc '3:OFA Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs','apps'),'^[^\.]','p'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OID_Log: Collect OID log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OID_Log

=head2 OID Local Log Files

Collects the Oracle Internet Directory-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering OID log files'
pretoc '3:OID Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'sysman','log'),'^\.+$','pv'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_OSB_Log: Collect OSB log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OSB_Log

=head2 OSB Local Log Files

Collects the Oracle Service Bus-related local log files for Oracle WebLogic
Server.

=head3 JRockit Flight Recorder Files

Collects the Oracle Service Bus-related JRockit flight recorder files.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering OSB log files'
pretoc '3:OSB Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'data','ldap','log'),'^\.+$','pv'))

# Collect JRockit flight recorder files
var ($max,$img,@jfr) = (3,catDir($dir,'logs','diagnostic_images'))
pretoc '4:JRockit Flight Recorder Files'
loop $fil (grepDir($img,'\.jfr$','t'))
{next match($fil,'^_')
 call push(@jfr,catFile($img,$fil))
 break !decr($max)
}
call sort_all_files(5,0,@jfr)
unpretoc 2

# -----------------------------------------------------------------------------
# Section WLS_OWSM_Log: Collect OWSM log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_OWSM_Log

=head2 OWSM Local Log Files

Collects the Oracle Web Services Manager-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering OWSM log files'
pretoc '3:OWSM Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs','owsm'),'^[^\.]','r',1))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_PDC_Log: Collect PDC log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_PDC_Log

=head2 PDC Local Log Files

Collects the Pricing Design Center-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering PDC log files'
pretoc '3:PDC Local Log Files'
call sort_files(4,$lim,\
  grepDir(catDir($dir,'logs'),'^PricingAppServer\d*\.log\.\d+$','inp'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_SOA_Log: Collect SOA log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_SOA_Log

=head2 SOA Local Log Files

Collects the Oracle SOA Suite-related local log files for Oracle WebLogic
Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering SOA log files'
pretoc '3:SOA Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs','soa'),'^[^\.]','p'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_STA_Log: Collect STA log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_STA_Log

=head2 STA Local Log Files

Collects the StorageTek Tape Analytics-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering STA log files'
pretoc '3:STA Local Log Files'
call sort_files(4,$lim,grepDir(catDir($dir,'logs'),\
  '^(monitor_staserver|shutdown|weblogic(_sta)?)\.(log|\d+)$','p'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_WC_Log: Collect WC log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_WC_Log

=head2 WC Local Log Files

Collects the Oracle WebCenter Suite-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering WC log files'
pretoc '3:WC Local Log Files'
call sort_files(4,$lim,\
  grepDir(catDir($dir,'data','ldap','log'),'^\.+$','pv'),\
  grepDir(catDir($dir,'sysman','log'),'^\.+$','pv'),\
  catFile($dir,'logs','analytics-collector','collector.trc'))
unpretoc

# -----------------------------------------------------------------------------
# Section WLS_WLI_Log: Collect WLI log files for Oracle WebLogic Server
# -----------------------------------------------------------------------------

section WLS_WLI_Log

=head2 WLI Local Log Files

Collects the Oracle WebLogic Integration-related local log files for Oracle
WebLogic Server.

=cut

var ($dir,$lim) = @arg

debug '   - Inside FMWdft module, gathering WLI domain log files'
pretoc '2:WLI Local Log Files'
call sort_files(3,$lim,catFile($dir,'workshop_debug.log'),\
                       catFile($dir,'workshop_errors.log'),\
                       catFile($dir,'workshop.log'))
unpretoc

# -----------------------------------------------------------------------------
# Section WSP_DEV_Config: Collect DEV config files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_DEV_Config

# -----------------------------------------------------------------------------
# Section WSP_PDA_Config: Collect PDA config files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_PDA_Config

# -----------------------------------------------------------------------------
# Section WSP_DEV_Log: Collect DEV log files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_DEV_Log

# -----------------------------------------------------------------------------
# Section WSP_HFM_Log: Collect HFM log files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_HFM_Log

# -----------------------------------------------------------------------------
# Section WSP_OFA_Log: Collect OFA log files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_OFA_Log

# -----------------------------------------------------------------------------
# Section WSP_SOA_Log: Collect SOA log files for IBM WebSpere
# -----------------------------------------------------------------------------

section WSP_SOA_Log

=head1 SEE ALSO

L<EMdiag.def|modules::EMdiag>,
L<library.def|modules::library>,
L<WASlib.def|modules::WASlib>,
L<WLSlib.def|modules::WLSlib>

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
