# HCVEload.def: Collects HCVE Reports
# $Id: HCVEload.def,v 2.5 2012/01/03 13:34:42 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/HCVEload.def,v 2.5 2012/01/03 13:34:42 mschenke Exp $
#
# Change History
# 20120103  MSC  Change the copyright notice.

=head1 NAME

HCVEload - Collects HCVE Reports

=head1 DESCRIPTION

This module gets reports generated by the Health Check/Validation Engine.

The following report is produced:

=head2 hcve - Health Check/Validation Engine

Gets reports generated by the Health Check/Validation engine.

=cut

macro get_hcve_link
 return concat(basename($arg[0],'.txt'),'.htm')

debug ' Inside LOAD module, gathering HCVE reports'
report hcve
prefix
{write '---+ Health Check/Validation Results'
 write '|*Rule Set*|*Results*|*Errors*|'
}
var $pat = '<!-- Module:TSThcve Version:\S+ Report:(.*?) OS:'
var (%err,%res,%set) = ()
loop $fil (grepDir(${OUT.C},concat('^',${CUR.GROUP},'_HCVE_.*\.txt$'),'i'))
{var ($set,$typ) = match($fil,'_HCVE_(.*)_(res|err)\.txt$',true)

 # Treat other file name formats
 if !$typ
 {var ($rpt) = grepFile(catFile(${OUT.C},$fil),$pat,'f')
  var ($rpt) = match($rpt,$pat)
  if match($rpt,'^(res|err)$')
   var ($set,$typ) = ('?',last)
  else
   var ($typ,$set) = match($rpt,'^HCVE_(res|err)_(.*)$')
 }

 # Store the report links
 if match($typ,'res',true)
  var $res{$set} = concat('[[',get_hcve_link($fil),'][_blank][results]]')
 elsif match($typ,'err',true)
  var $err{$set} = concat('[[',get_hcve_link($fil),'][_blank][errors]]')
}
loop $set (keys(%res))
 write '|',nvl(getHcveName($set),$set),'|',$res{$set},' |',$err{$set},' |'
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Health Check/Validation Engine]]'

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
