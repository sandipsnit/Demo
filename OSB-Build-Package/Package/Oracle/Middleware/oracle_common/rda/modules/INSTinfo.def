# INSTinfo.def: Defines Common Installation/Inventory Macros
# $Id: INSTinfo.def,v 2.6 2012/01/03 13:34:42 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/INSTinfo.def,v 2.6 2012/01/03 13:34:42 mschenke Exp $
#
# Change History
# 20120103  MSC  Change the copyright notice.

=head1 NAME

INSTinfo - Defines Common Installation/Inventory Macros

=head1 DESCRIPTION

This persistent submodule regroups common installation/inventory macros.

The following macro is available:

=cut

# Make the module persistent and share macros
keep $KEEP_BLOCK,@SHARE_MACROS
var @SHARE_MACROS = ('inventory_details')

=head2 S<inventory_details($dir[,$flag])>

This macro reports the inventory details. When the flag is set, it adds the
file or directory list for the interim patches.

=cut

macro inventory_details
{var ($dir,$flg) = @arg
 import $TOP

 if testFile('fr',catFile($dir,'ContentsXML','comps.xml'))
 {var $flt = isFiltered()
  var $inv = xmlLoadFile(lastFile())

  macro fmt_date
  {if match($arg[0],'^(\d{4})\.(\w{3})\.(\d{2})(.*)$')
   {var ($yea,$mon,$day,$tim) = (last)
    return concat($day,'-',$mon,'-',$yea,replace($tim,' ','&nbsp;',true))
   }
   return $arg[0]
  }

  macro fmt_file
  {var ($dir,$fil) = @arg
   if and($dir,$fil)
    return catFile($dir,$fil)
   if $dir
    return $dir
   return $fil
  }

  macro fmt_version
   return replace($arg[0],'\.','&#46;',true)

  # Explore the top level products
  var ($cnt,%all,%top_dsc,%top_set,%top_ver) = (0)
  loop $xml (xmlFind($inv,'PRD_LIST/TL_LIST/COMP'))
  {var $nam = xmlValue($xml,'NAME')
   var $ver = xmlValue($xml,'VER')
   var $dsc = xmlData(xmlFind($xml,'EXT_NAME'))

   var $key = uc($dsc)
   var $all{$key} = join('"',$all{$key},$nam)

   var $top_dsc{$nam} = $dsc
   var $top_ver{$nam} = cond($flt,fmt_version($ver),$ver)
  }

  # Explore the patchsets
  loop $xml (xmlFind($inv,'PRD_LIST/TL_LIST/PATCHSET'))
  {var $nam = xmlValue($xml,'NAME')
   var $ver = xmlValue($xml,'VER')
   var $dsc = xmlData(xmlFind($xml,'EXT_NAME'))

   if $flt
    var $ver = fmt_version($ver)

   if missing($top_dsc{$nam})
   {var $key = uc($dsc)
    var $all{$key} = join('"',$all{$key},$nam)
    var $top_dsc{$nam} = $dsc
   }
   var $top_set{$nam} = join(', ',$top_set{$nam},$ver)

   incr $cnt
   var $dsc[$cnt] = $dsc
   var $ver[$cnt] = $ver
   var $tim[$cnt] = xmlValue($xml,'INSTALL_TIME')
  }

  # Report top level products
  write '---+ Top Level Products'
  prefix
   write '|*Name*|*Version*|*PatchSet(s)*|'
  loop $key (keys(%all))
  {loop $nam (split('"',$all{$key}))
    write '|',encode($top_dsc{$nam}),'|',$top_ver{$nam},' |',\
          nvl($top_set{$nam},"''&lt;none&gt;''"),' |'
  }
  if !hasOutput(true)
   write 'There are no top level products found in Oracle Home inventory.%BR%'
  write $TOP

  # Explore the installed products and the patches
  var (%all,%prd_dsc,%prd_set,%prd_ver) = ()
  loop $xml (xmlFind($inv,'PRD_LIST/COMP_LIST/COMP'))
  {var $nam = xmlValue($xml,'NAME')
   var $ver = xmlValue($xml,'VER')
   var $dsc = xmlData(xmlFind($xml,'EXT_NAME'))

   if $flt
    var $ver = fmt_version($ver)

   var $key = uc($dsc)
   var $all{$key} = join('"',$all{$key},$nam)
   var $prd_dsc{$nam} = $dsc
   var $prd_ver{$nam} = $ver
  }

  # Explore the patches
  loop $xml (xmlFind($inv,'PRD_LIST/COMP_LIST/PATCH'))
  {var $nam = xmlValue($xml,'NAME')
   var $ver = xmlValue($xml,'VER')
   var $dsc = xmlData(xmlFind($xml,'EXT_NAME'))

   if $flt
    var $ver = fmt_version($ver)

   if missing($prd_dsc{$nam})
   {if exists($top_dsc{$nam})
     var ($dsc,$prd_ver{$nam}) = ($top_dsc{$nam},$top_ver{$nam})
    var $key = uc($dsc)
    var $all{$key} = join('"',$all{$key},$nam)
    var $prd_dsc{$nam} = $dsc
   }
   var $prd_set{$nam} = join(', ',$prd_set{$nam},$ver)
  }

  # Report the installed products
  write '---+ Installed Products'
  prefix
   write '|*Name*|*Version*|*Patch(es)*|'
  loop $key (keys(%all))
  {loop $nam (split('"',$all{$key}))
    write '|',encode($prd_dsc{$nam}),'|',$prd_ver{$nam},' |',\
          $prd_set{$nam},' |'
  }
  if !hasOutput(true)
   write 'There are no products found in Oracle Home inventory.%BR%'
  write $TOP

  # Report on patchsets
  if $cnt
  {write '---+ PatchSets'
   write '|*Name*|*Version*|*Installed on*|'
   for $off (1,$cnt)
    write '|',encode($dsc[$off]),'|',$ver[$off],' |',\
          fmt_date($tim[$off]),' |'
   write $TOP
  }

  # Report of one-off patches
  prefix
  {write '---+ Interim Patches'
   if $flg
    write '|*Patch*|*Base Bug(s)*|*Installed on*|*File/Directory List*|'
   else
    write '|*Patch*|*Base Bug(s)*|*Installed on*|'
  }
  loop $xml (xmlFind($inv,'PRD_LIST/ONEOFF_LIST/ONEOFF'))
  {var (@bug,%bug,%fil) = ()

   if grepDir(catDir($dir,'oneoffs',xmlValue($xml,'REF_ID'),'etc','config'),\
              '^inventory(\.xml)?$','fip')
   {var ($fil) = last
    loop $det (xmlFind($xml,'BUG_LIST/BUG'))
    {var $bug = xmlData($det)
     var ($dsc) = grepFile($fil,concat('<bug number="',$bug,'"'),'f')
     if match($dsc,'description="(.*)"')
      var $bug{$bug} = cond($flt,fmt_version(encode(last)),encode(last))
     else
      var $bug{$bug} = undef
    }
   }
   else
   {loop $det (xmlFind($xml,'BUG_LIST/BUG'))
     var $bug{xmlData($det)} = undef
   }
   loop $bug (keys(%bug,'ID'))
    call push(@bug,join('%NEXT%',$bug,$bug{$bug}))
   if $flg
   {loop $det (xmlFind($xml,'FILE_LIST/FILE'))
     var $fil{fmt_file(xmlValue($det,'PARENT_PATH'),\
                       xmlValue($det,'CHILD_PATH'))} = 1
    write '|',xmlValue($xml,'REF_ID'),'|%TBL%%ID:bug:abstract%',\
          join('%BR%',@bug),'%ENDTBL% |',\
          fmt_date(xmlValue($xml,'INSTALL_TIME')),'|',\
          encode(join('%BR%',keys(%fil))),' |'
   }
   else
    write '|',xmlValue($xml,'REF_ID'),'|%TBL%%ID:bug:abstract%',\
          join('%BR%',@bug),'%ENDTBL% |',\
          fmt_date(xmlValue($xml,'INSTALL_TIME')),'|'
  }
  if hasOutput(true)
   write $TOP
 }
}
 
=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
