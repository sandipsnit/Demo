# M244IPM.def: Collects Local IPMI Information
# $Id: M244IPM.def,v 1.3 2012/04/25 16:57:50 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/M244IPM.def,v 1.3 2012/04/25 16:57:50 mschenke Exp $
#
# Change History
# 20120424  KRA  Use check_patch macro.

=head1 NAME

M244IPM - Collects Local Intelligent Platform Management Interface Information

=head1 DESCRIPTION

This module collects local Intelligent Platform Management Interface (IPMI)
information.

=cut

use Mrc

# Initialization
var $VALIDATE = true
keep $VALIDATE

section begin

var $ERR = '---## Associated Errors'
var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'

run XPLRlib('ipmi')

#------------------------------------------------------------------------------
# XPLR_ipmi section
#------------------------------------------------------------------------------

section XPLR_ipmi

# Validate the execution context
if !${XPLR_GLOBAL:true}
 return
call log_run('Processing IPMI sections ...')

# Determine the executable to run
var $ipm = undef
loop $pgm ('/opt/ipmitool/bin/ipmitool',\
           '/usr/sbin/ipmitool',\
           '/usr/sfw/bin/ipmitool')
{if testFile('x',$pgm)
 {var $ipm = $pgm
  break
 }
}
if !?$ipm
 return log_info('ipmitool is not installed')

# Check the patch level on Solaris 10
if and(${OS.solaris},expr('==',get_osv(),10))
{var ($ptc,$rev) = check(get_arc(),'sparc',list('119764','03'),\
                                   'i386', list('119765','03'),\
                                           list())
 if !check_patch($ptc,$rev)
  return log_info(concat(' Patch ',$ptc,'-',$rev,' required'))
}

=head2 ipmi - Intelligent Platform Management Interface

Gathers the Intelligent Platform Management Interface information using the
following commands:

=over 2

=item o C<ipmitool -I bmc chassis poh>

=item o C<ipmitool -I bmc chassis power status>

=item o C<ipmitool -I bmc chassis restart_cause>

=item o C<ipmitool -I bmc chassis status>

=item o C<ipmitool -I bmc fru>

=item o C<ipmitool -I bmc fru print>

=item o C<ipmitool -I bmc mc getenables>

=item o C<ipmitool -I bmc mc info>

=item o C<ipmitool -I bmc pef list>

=item o C<ipmitool -I bmc pef status>

=item o C<ipmitool -I bmc sdr elist full>

=item o C<ipmitool -I bmc sdr list all info>

=item o C<ipmitool -I bmc sel elist>

=item o C<ipmitool -I bmc sel info>

=item o C<ipmitool -I bmc sensor list>

=item o C<ipmitool -I bmc sunoem cli version | /bin/grep SP>

=item o C<ipmitool -I bmc sunoem led get>

=item o C<ipmitool -I bmc sunoem sbled get>

=item o C<ipmitool -I bmc -v sel elist>

=item o C<ipmitool -V>

=item o C</usr/sbin/ilomconfig list system-summary>

=back

=cut

debug ' Inside IPMI collection, gathering IPMI data information'

# Determine the commands to collect
var @cmd = (\
  ['ipmi/ipmitool_mc_info',\
   $ipm,'-I bmc mc info',\
   '---+ BMC Hardware Information'],\
  ['ipmi/ipmitool_chassis_restart_cause',\
   $ipm,'-I bmc chassis restart_cause',\
   '---+ Cause of the Last System Restart'],\
  ['ipmi/ipmitool_chassis_power_status',\
   $ipm,'-I bmc chassis power status',\
   '---+ Chassis Power Status'],\
  ['ipmi/ipmitool_mc_getenables',\
   $ipm,'-I bmc mc getenables',\
   '---+ Enabled Options for the BMC'],\
  ['ipmi/ipmitool_fru',\
   $ipm,'-I bmc fru',\
   '---+ Field Replaceable Unit (FRU) Information'],\
  ['ipmi/ipmitool_fru_print',\
   $ipm,'-I bmc fru print',\
   '---+ Field Replaceable Unit (FRU) Information'],\
  ['ipmi/ipmitool_sdr_elist_full',\
   $ipm,'-I bmc sdr elist full',\
   '---+ Full Sensor Data Records (SDR)'],\
  ['ipmi/ipmitool_sunoem_cli_version',\
   $ipm,'-I bmc sunoem cli version | /bin/grep SP',\
   '---+ Output of Version ILOM CLI Command'],\
  ['ipmi/ipmitool_pef_status',\
   $ipm,'-I bmc pef status',\
   '---+ Platform Event Filtering (PEF) Status'],\
  ['ipmi/ipmitool_pef_list',\
   $ipm,'-I bmc pef list',\
   '---+ Platform Event Filtering (PEF) Table Entries'],\
  ['ipmi/ipmitool_chassis_poh',\
   $ipm,'-I bmc chassis poh',\
   '---+ Power-On Hours Counter'],\
  ['ipmi/ipmitool_sunoem_led_get',\
   $ipm,'-I bmc sunoem led get',\
   '---+ Read LED Status'],\
  ['ipmi/ipmitool_sunoem_sbled_get',\
   $ipm,'-I bmc sunoem sbled get',\
   '---+ Read LED Status'],\
  ['ipmi/ipmitool_sensor_list',\
   $ipm,'-I bmc sensor list',\
   '---+ Sensors and Thresholds Information'],\
  ['ipmi/ipmitool_sdr_list_all_info',\
   $ipm,'-I bmc sdr list all info',\
   '---+ Sensor Data Repository Entries and Readings'],\
  ['ipmi/ipmitool_chassis_status',\
   $ipm,'-I bmc chassis status',\
   '---+ Status of the System Chassis and Main Power'],\
  ['ipmi/ipmitool_sel_elist',\
   $ipm,'-I bmc sel elist',\
   '---+ System Event Log (SEL) Contents'],\
  ['ipmi/ipmitool_sel_info',\
   $ipm,'-I bmc sel info',\
   '---+ System Event Log (SEL) Contents'],\
  ['ipmi/ipmitool_-v_sel_elist',\
   $ipm,'-I bmc -v sel elist',\
   '---+ System Event Log (SEL) Contents with Increased Verbosity'],\
  ['ipmi/ipmitool_-v',\
   $ipm,'-V',\
   '---+ Version Information for Ipmitool'])
if testFile('x','/usr/sbin/ilomconfig')
 call push(@cmd,\
   ['ipmi/ilomconfig_list_system-summary',\
    '/usr/sbin/ilomconfig','list system-summary',\
    '---+ List System Summary'])

# Generate the report
report ipmi
title '---+!! Intelligent Platform Management Interface'
title $TOC
call do_exec(@cmd)
if isCreated(true)
 toc '2:[[',getFile(),\
     '][rda_report][Intelligent Platform Management Interface]]'

=head1 SEE ALSO

L<S150XPLR.def|modules::S150XPLR>,
L<XPLRlib.def|modules::XPLRlib>

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
