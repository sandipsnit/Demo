# M250DISK.def: Collects Disks and Controllers Information
# $Id: M250DISK.def,v 1.7 2012/09/14 12:32:39 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/M250DISK.def,v 1.7 2012/09/14 12:32:39 mschenke Exp $
#
# Change History
# 20120914  MSC  Fix luxadm collection.

=head1 NAME

M250DISK - Collects Disks and Controllers Information

=head1 DESCRIPTION

This module collects information about disks and controllers installed on the
system.

=cut

use Mrc
use Buffer

# Initialization
var $VALIDATE = true
keep $VALIDATE

section begin

var $ERR = '---## Associated Errors'
var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
var $WRN = '* Links point to files that have been collected in their original \
              format. Opening them directly in your browser can present risks. \
              To prevent them, access the file outside the browser or use the \
              link to save them and use an adequate viewer.'

run XPLRlib('disks')

#------------------------------------------------------------------------------
# XPLR_disks section
#------------------------------------------------------------------------------

section XPLR_disks

# Validate the execution context
call log_run('Processing DISK sections ...')

=head2 disks - Disks and Controllers Information

Gathers disks and controllers information using the following commands:

=over 2

=item o C<${DISKINFO} -d>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -R>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -T>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -a>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -g>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -i>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -j>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -l>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -o>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -r>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd -x>

=item o C<${HDBASE}/SUNWhd/hd/bin/hd>

=item o C<${HDBASE}/SUNWhd/hd/bin/hdadm diskqual all>

=item o C<${HDBASE}/SUNWhd/hd/bin/hdadm read_cache display all>

=item o C<${HDBASE}/SUNWhd/hd/bin/hdadm smart all>

=item o C<${HDBASE}/SUNWhd/hd/bin/hdadm write_cache display all>

=item o C</opt/SUNWhwrdg/dptutil -L all>

=item o C</opt/SUNWhwrdg/dptutil -L controller>

=item o C</opt/SUNWhwrdg/dptutil -L logical>

=item o C</opt/SUNWhwrdg/dptutil -L physical>

=item o C</opt/SUNWhwrdg/dptutil -L raid>

=item o C</opt/SUNWhwrdg/dptutil -L spare>

=item o C</usr/bin/df -al>

=item o C</usr/bin/df -alZ>

=item o C</usr/bin/df -el>

=item o C</usr/bin/df -elZ>

=item o C</usr/bin/df -gl>

=item o C</usr/bin/df -glZ>

=item o C</usr/bin/df -kl>

=item o C</usr/bin/df -klZ>

=item o C</usr/bin/echo ::sata_dmsg_dump | /usr/bin/mdb -k>

=item o C</usr/bin/find /dev -type d -print | xargs ls -lL>

=item o C</usr/bin/iostat -E>

=item o C</usr/bin/iostat -iE>

=item o C</usr/bin/iostat -xpnc 3 3>

=item o C</usr/bin/ls -l /dev/cfg/>

=item o C</usr/bin/ls -l /dev/fc>

=item o C</usr/bin/ls -l /dev/nrst*>

=item o C</usr/bin/ls -l /dev/rdsk>

=item o C</usr/bin/ls -l /dev/rmt*>

=item o C</usr/bin/ls -l /dev/rst*>

=item o C</usr/bin/ls -lAR /dev /devices>

=item o C</usr/bin/ls -lAR /dev>

=item o C</usr/bin/ls -lL /dev/*dsk/>

=item o C</usr/bin/ls -lL /dev/rmt/>

=item o C</usr/bin/ls -ld /tmp>

=item o C</usr/sbin/format>

=item o C</usr/sbin/fstyp -v ${DEVICE}>

=item o C</usr/sbin/iscsiadm list discovery-address -v>

=item o C</usr/sbin/iscsiadm list discovery>

=item o C</usr/sbin/iscsiadm list initiator-node>

=item o C</usr/sbin/iscsiadm list isns-server -v>

=item o C</usr/sbin/iscsiadm list static-config>

=item o C</usr/sbin/iscsiadm list target -S>

=item o C</usr/sbin/iscsiadm list target -v>

=item o C</usr/sbin/iscsiadm list target-param -v>

=item o C</usr/sbin/iscsitadm list initiator -v>

=item o C</usr/sbin/iscsitadm list target -v>

=item o C</usr/sbin/iscsitadm list tpgt -v>

=item o C</usr/sbin/iscsitadm show admin>

=item o C</usr/sbin/itadm list-defaults>

=item o C</usr/sbin/itadm list-initiator -v>

=item o C</usr/sbin/itadm list-target -v>

=item o C</usr/sbin/itadm list-tpg -v>

=item o C</usr/sbin/luxadm -e dump_map ${HBA_PORT}>

=item o C</usr/sbin/luxadm -e port>

=item o C</usr/sbin/luxadm -e rdls ${HBA_PORT}>

=item o C</usr/sbin/luxadm -e rdls ${HBA_PORT}> (Collected twice)

=item o C</usr/sbin/luxadm fcode_download -p>

=item o C</usr/sbin/luxadm inq /dev/es/${ES}>

=item o C</usr/sbin/luxadm probe -p>

=item o C</usr/sbin/luxadm probe>

=item o C</usr/sbin/luxadm qlgc_s_download>

=item o C</usr/sbin/mount -v>

=item o C</usr/sbin/mount>

=item o C</usr/sbin/mpathadm list LU>

=item o C</usr/sbin/mpathadm list initiator-port>

=item o C</usr/sbin/mpathadm list mpath-support>

=item o C</usr/sbin/mpathadm show  mpath-support ${LIB_PATH}>

=item o C</usr/sbin/mpathadm show LU ${LOGICAL_UNIT}>

=item o C</usr/sbin/mpathadm show initiator-port ${INITIATOR}>

=item o C</usr/sbin/prtvtoc /dev/rdsk/${DISK}${NUM}>

=item o C</usr/sbin/raidconfig list all -v>

=item o C</usr/sbin/raidctl -S>

=item o C</usr/sbin/raidctl -l ${VOLNAME}>

=item o C</usr/sbin/raidctl -l -g ${DISK} ${CONTROLLER}>

=item o C</usr/sbin/raidctl -l>

=item o C</usr/sbin/raidctl>

=item o C</usr/sbin/sas2ircu 0 display all>

=item o C</usr/sbin/sas2ircu 0 status>

=item o C</usr/sbin/sas2ircu 1 display all>

=item o C</usr/sbin/sas2ircu 1 status>

=item o C</usr/sbin/stmfadm list-hg -v>

=item o C</usr/sbin/stmfadm list-lu -v>

=item o C</usr/sbin/stmfadm list-state>

=item o C</usr/sbin/stmfadm list-target -v>

=item o C</usr/sbin/stmfadm list-tg -v>

=item o C</usr/sbin/stmfadm list-view -l ${LU}>

=item o C</usr/sbin/swap -l>

=item o C</usr/sbin/swap -s>

=back

Collects also the following files:

=over 2

=item o F<${HDBASE}/SUNWhd/web/hd_map.html>

=item o F</etc/iscsi/*>

=item o F</kernel/drv/st.conf>

=item o F</var/opt/SUNWhwrdg/dptelog.*>

=back

=cut

debug ' Inside DISK collection, gathering disks information'
pretoc '2:Disks'

# Define global variables imported by some macros
var ($RE,$SOCAL,$a35,@ret) = ('',false,false)

# Define the capture macro
macro capture_results
{var ($rpt,$wrk) = @arg
 import @ret

 var @ret = ()
 while ?$wrk->get_line()
 {var $lin = chomp(last)
  write {$rpt} $lin
  call push(@ret,$lin)
 }
}

# Define the clip macro
macro clip_results
{var ($rpt,$wrk) = @arg
 import @ret,$RE

 var @ret = ()
 while ?$wrk->get_line()
 {var $lin = chomp(last)
  break match($lin,$RE)
  write {$rpt} $lin
  call push(@ret,$lin)
 }
}

# Define a macro to collect luxadm results, optionally with dump_map
macro collect_luxadm
{var ($ttl,$ver,$dmp) = @arg
 import $SOCAL

 call do_exec({cmd => 'TITLE',txt => $ttl})
 loop $dev (grepCommand('/usr/sbin/luxadm -e port 2>/dev/null',\
                       '^(\S*).*\s{2}CONNECTED','1'))
 {if $flg = and(not(match($dev,'devctl')),match($dev,'socal'))
   var $SOCAL = true
  var $prt = cond($flg,replace(replace($dev,':0','\/sf@0,0:devctl'),\
                               ':1','\/sf@1,0:devctl'),\
                       $dev)
  var $fil = replace($prt,'\/','-',true)
  if $dmp
   call do_exec(\
     [concat('disks/luxadm_-e_dump_map_',$fil),\
      '/usr/sbin/luxadm',concat('-e dump_map ',$prt),\
      '---++ WWN Data on Specified Fibre Channel Port'])
  else
   var $fil = concat($fil,'-',localtime('%H:%M:%S'))

  # Avoid command if SOCAL has multi-initiator on Solaris 2.6
  if and($flg,\
         compare('SAME',$ver,'5.6'),\
         grepCommand(concat('/usr/sbin/luxadm -e dump_map ',$prt),\
                     '0000000000000000 0000000000000000 0x1f','f'))
   call do_exec(\
     [concat('disks/luxadm_-e_rdls',$fil,'.err'),\
      undef,\
      'Explorer did not run this command on the SOCAL HBA because this is a \
       SOCAL multi initiator configuration and causes momentary Loop \
       offline/online if executed.',\
      '---++ Link Error Status for Available Devices on the Loop'])
  else
   call do_exec(\
     [concat('disks/luxadm_-e_rdls',$fil),\
      '/usr/sbin/luxadm',concat('-e rdls ',$prt),\
      '---++ Link Error Status for Available Devices on the Loop'])
 }
 call do_exec({cmd => 'UNTITLE'})
}

# Perform the collections
loop $rec (get_zones(true))
{if $loc = defined($nam = $rec->[0])
 {var ($ttl,$pre,$exe) = (concat('From Zone ',$nam),\
                          concat('zones/',$nam),\
                          concat('/usr/sbin/zlogin ',$nam))
  call log_info(concat('disks: RUNNING: zone ',$nam),\
                concat(' Inside DISK collection, collecting from zone ',$nam))
 }
 else
  var ($ttl,$pre,$exe) = ('From Global Zone')
 var $top = $rec->[1]

 report concat('disks_z_',nvl($nam,'global'))
 title '---+!! ',$ttl
 title $TOC

 if !$loc
 {# Push files and directories to collect
  var @fil = (\
    ['G','disks/st.conf','/kernel/drv/st.conf'],\
    ['G','disks/hwraid', '/var/opt/SUNWhwrdg',undef,undef,'^dptelog\..*','n'],\
    ['G','etc/iscsi',    '/etc/iscsi',undef,undef,'^\.+$','nv'])

  # Perform the first luxadm collection with dump_map option as true
  call collect_luxadm('---+ Fibre Channel Information (First Run)',$rec->[2],\
    true)

  # Collect available disks
  var $RE = '^Specify disk'
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ Available Disks'},\
    ['disks/format','/usr/sbin/format','2>&1','---++ format Command',\
     {inp=>'0',out=>{fct=>'caller:clip_results'}}])
  var $a35 = grep(@ret,'A3500FC')
  if get_bin_tool('diskinfo')
   call do_exec(\
     ['disks/diskinfo',last,'-d','---++ Diskinfo Tool',true])
  call do_exec({cmd => 'UNTITLE'})

  # Get directory contents
  var $cmd = '/usr/bin/ls'
  var @dir = command('/usr/bin/find /dev -type d -print')
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ Information from Filesystem'},\
    ['disks/ls-l_dev_cfg', $cmd,'-l /dev/cfg/', '---++ /dev/cfg/'],\
    ['disks/ls-l_dev_fc',  $cmd,'-l /dev/fc',   '---++ /dev/fc',   {nul=>{}}],\
    ['disks/ls-l_dev_nrst',$cmd,'-l /dev/nrst*','---++ /dev/nrst*',{nul=>{}}],\
    ['disks/ls-l_dev_rdsk',$cmd,'-l /dev/rdsk', '---++ /dev/rdsk'],\
    ['disks/ls-l_dev_rmt', $cmd,'-l /dev/rmt*', '---++ /dev/rmt*'],\
    ['disks/ls-l_dev_rst', $cmd,'-l /dev/rst*', '---++ /dev/rst*', {nul=>{}}],\
    ['disks/ls_-lAR_@dev_@devices',$cmd,'-lAR /dev /devices',\
     '---++ /dev and /devices'],\
    ['disks/maj_min_dev_num',$cmd,'-lL /dev/*dsk/',    '---++ /dev/*dsk/'],\
    ['disks/ls-lL_dev_rmt',  $cmd,'-lL /dev/rmt/',     '---++ /dev/rmt/'],\
    ['disks/ls-ld_tmp',      $cmd,'-ld /tmp',          '---++ /tmp'],\
    ['disks/dev-lL',         $cmd,join(' ','-lL',@dir),'---++ /dev Contents'],\
    {cmd => 'UNTITLE'})

  # Collect run-time information
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ I/O Statistics'},\
    ['disks/iostat_-E',       '/usr/bin/iostat','-E','---++ Errors'])
  if compare('VALID',$rec->[2],'5.9')
   call do_exec(\
     ['disks/iostat-iE',      '/usr/bin/iostat','-iE','---++ Errors (with ID)'])
  call do_exec(\
    ['disks/iostat_-xpnc_3_3','/usr/bin/iostat','-xpnc 3 3','---++ Extended'],\
    {cmd => 'UNTITLE'},\
    {cmd => 'TITLE',txt => '---+ Swap'},\
    ['disks/swap-l','/usr/sbin/swap','-l','---++ Status'],\
    ['disks/swap-s','/usr/sbin/swap','-s','---++ Summary'],\
    {cmd => 'UNTITLE'})

  call do_exec(\
    {cmd => 'TITLE',txt => '---+ Disk Free'},\
    ['disks/df-al','/usr/bin/df','-al','---++ All'],\
    ['disks/df-el','/usr/bin/df','-el','---++ Files'],\
    ['disks/df-gl','/usr/bin/df','-gl','---++ Full'],\
    ['disks/df-kl','/usr/bin/df','-kl','---++ Summary'],\
    {cmd => 'UNTITLE'})

  # Collect disk partitions information
  call do_exec({cmd => 'TITLE',txt => '---+ Disk Partitions'})
  loop $dsk (grepCommand('/usr/bin/ls /dev/rdsk/*s2','^/dev/rdsk/(.*)s2$','1'))
  {for $i (0,7)
   {var $dev = concat($dsk,'s',$i)
    call command(concat('/usr/sbin/devinfo -p /dev/rdsk/',$dev,' 2>/dev/null'))
    next status()
    call do_exec(\
      [concat('disks/prtvtoc/',$dev),\
       '/usr/sbin/prtvtoc',concat('/dev/rdsk/',$dev),\
       concat('---++ On Device: ',$dev),true])
    break
   }
  }
  call do_exec({cmd => 'UNTITLE'})

  # Collect UFS file systems information
  call do_exec({cmd => 'TITLE',txt => '---+ UFS Filesystems'})
  loop $ret (command('/usr/bin/df -lFufs'))
  {var ($fs,$dev) = match($ret,'^(.*?)\s*\((.*?)\)')
   var $RE = '^cylinder number '
   call do_exec(\
     [concat('disks/ufs/fstyp_-v_header=',replace($fs,'/','_',true)),\
      '/usr/sbin/fstyp',concat('-v ',$dev),\
      concat('---++ Filesystem: ',$fs),{out=>{fct=>'caller:clip_results'}}])
  }
  call do_exec({cmd => 'UNTITLE'})

  # Collect mounted file systems information
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ Mounted File Systems'},\
    ['disks/mount',  '/usr/sbin/mount',undef,'---++ Status'],\
    ['disks/mount-v','/usr/sbin/mount','-v','---++ Verbose Status'],\
    {cmd => 'UNTITLE'})

  # Collect E450 Raid controller information
  if testFile('x',$cmd = '/opt/SUNWhwrdg/dptutil')
   call do_exec({cmd => 'TITLE',txt => '---+ E450 Raid Controller'},\
     ['disks/hwraid/dptutil-L_all',       $cmd,'-L all',\
      '---++ All'],\
     ['disks/hwraid/dptutil-L_controller',$cmd,'-L controller',\
      '---++ Controller'],\
     ['disks/hwraid/dptutil-L_logical',   $cmd,'-L logical',\
      '---++ Logical'],\
     ['disks/hwraid/dptutil-L_physical',  $cmd,'-L physical',\
      '---++ Physical'],\
     ['disks/hwraid/dptutil-L_raid',      $cmd,'-L raid',\
      '---++ Raid'],\
     ['disks/hwraid/dptutil-L_spare',     $cmd,'-L spare',\
      '---++ Spare'],\
     {cmd => 'UNTITLE'})

  # Collect disk arrays information
  if testDir('d','/dev/es')
  {call do_exec({cmd => 'TITLE',txt => '---+ Disk Arrays'})
   loop $fil (grepDir('/dev/es','^\.+$','nv'))
   {call do_exec(\
      [concat('disks/luxadm_inq_dev_es_',$fil),\
       '/usr/sbin/luxadm',concat('inq /dev/es/',$fil),\
       concat('---++ Inquire: ',$fil)])
    sleep 1
   }
   call do_exec({cmd => 'UNTITLE'})
  }

  # Collect FCAL information
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ FCAL'},\
    ['disks/luxadm_probe','/usr/sbin/luxadm','probe',\
     '---++ Attached Subsystems'],\
    {cmd => 'SLEEP',cnt => 1},\
    ['disks/luxadm_probe_-p','/usr/sbin/luxadm','probe -p',\
     '---++ Attached Subsystems (with Physical Pathname)'],\
    {cmd => 'SLEEP',cnt => 1},\
    ['disks/luxadm_-e_port','/usr/sbin/luxadm','-e port',\
     '---++ Installed HBA'],\
    {cmd => 'SLEEP',cnt => 1})

  # Collect unless this system has Sonoma A3500FC
  if !$a35
   call do_exec(\
     ['disks/luxadm_fcode_download_-p','/usr/sbin/luxadm','fcode_download -p',\
      '---++ Card Fcode Version'],\
     ['disks/luxadm_qlgc_s_download',  '/usr/sbin/luxadm','qlgc_s_download',\
      '---++ Adapter Fcode Version'])
  call do_exec({cmd => 'UNTITLE'})

  # Collect RAID information if FCAL disks have socal interface
  if $SOCAL
  {call do_exec(\
     {cmd => 'TITLE',txt => '---+ RAID Information'},\
     ['disks/raidctl',\
      '/usr/sbin/raidctl',undef,\
      '---++ Available Controllers, Volumes and Disks'],\
     ['disks/raidctl_-S',\
      '/usr/sbin/raidctl','-S',\
      '---++ Configuration Information'],\
     ['disks/raidctl_-l',\
      '/usr/sbin/raidctl','-l',\
      '---++ Available Controllers, Volumes and Disks',\
      {out=>{fct=>'caller:capture_results'}}])
   if grep(@ret,'controller','fi')
   {loop $ret (grep(@ret,'volume','i'))
    {var (undef,$vol) = split(':',$ret,2)
     call do_exec(\
       [concat('disks/raidctl_-l_',trim($vol)),\
        '/usr/sbin/raidctl',concat('-l ',$vol),\
        concat('---++ Volume ',trim($vol),' Information')])
    }

    # Collect just one Explorer file with all controller/disk pairs
    loop $ret (@ret)
    {next !match($ret,'controller|disk','i')
     if match($ret,'controller','i')
     {var (undef,$ctl) =  split('\s+',$ret,2)
      next
     }
     var (undef,$dsk) =  split('\s+',$ret,2)
     call do_exec(\
       ['disks/raidctl_-l_-g',\
        '/usr/sbin/raidctl',concat('-l -g ',$dsk,' ',$ctl),\
        '---++ Disk/Controller Information',\
        {out=>{mod=>true,cat=>'T'}}])
    }
   }
   call do_exec({cmd => 'UNTITLE'})
  }

  # Collect RAID information with sas2ircu and raidconfig commands
  if testFile('x',$cmd = '/usr/sbin/sas2ircu')
   call do_exec(\
     {cmd => 'TITLE',txt => '---+ sas2ircu RAID Information'},\
     ['disks/sas2ircu_0_display_all',$cmd,'0 display all',\
      '---++ Controller #0 Information'],\
     ['disks/sas2ircu_0_status',     $cmd,'0 status',\
      '---++ Controller #0 Status'],\
     ['disks/sas2ircu_1_display_all',$cmd,'1 display all',\
      '---++ Controller #1 Information'],\
     ['disks/sas2ircu_1_status',     $cmd,'1 status',\
      '---++ Controller #1 Status'],\
     {cmd => 'UNTITLE'})
  if testFile('x',$cmd = '/usr/sbin/raidconfig')
   call do_exec(\
     {cmd => 'TITLE',txt => '---+ raidconfig RAID Information'},\
     ['disks/raidconfig_list_all_-v',$cmd,'list all -v',\
      '---++ Detailed RAID Information'],\
     {cmd => 'UNTITLE'})

  # Collect MultiPath information
  call do_exec(\
    {cmd => 'TITLE',txt => '---+ MultiPath Information'},\
    ['disks/mpathadm/mpathadm_list_initiator-port',\
     '/usr/sbin/mpathadm','list initiator-port',\
     '---++ Initiators',{out=>{fct=>'caller:capture_results'}}])
  loop $ret (@ret)
  {var $ini = trim(replace($ret,'Initiator Port: ','',true))
   call do_exec(\
     [concat('disks/mpathadm/mpathadm_show_initiator-port_',$ini),\
      '/usr/sbin/mpathadm',concat('show initiator-port ',$ini),\
      concat('---+++ Initiator: ',$ini)])
  }
  call do_exec(\
    ['disks/mpathadm/mpathadm_list_LU','/usr/sbin/mpathadm','list LU',\
     '---++ Logical Units',{out=>{fct=>'caller:capture_results'}}])
  loop $ret (grep(@ret,'rdsk'))
  {var $lun = trim(replace($ret,'Logical Unit:','',true))
   call do_exec(\
     [concat('disks/mpathadm/mpathadm_show_LU_',basename($lun)),\
      '/usr/sbin/mpathadm',concat('show LU ',$lun),\
      concat('---+++ Logical Unit: ',$lun)])
  }
  call do_exec(\
    ['disks/mpathadm/mpathadm_list_mpath-support',\
     '/usr/sbin/mpathadm','list mpath-support',\
     '---++ Support',{out=>{fct=>'caller:capture_results'}}])
  loop $ret (@ret)
  {var $pth = trim(replace($ret,'mpath-support:','',true))
   call do_exec(\
     [concat('disks/mpathadm/mpathadm_show_mpath-support_',$pth),\
      '/usr/sbin/mpathadm',concat('show  mpath-support ',$pth),\
      concat('---+++ Path: ',$pth)])
  }
  call do_exec({cmd => 'UNTITLE'})

  # Collect iSCSI information
  call do_exec({cmd => 'TITLE',txt => '---+ iSCSI Information'})
  if compare('SAME',$rec->[2],'5.10')
  {var ($ptc,$rev) = check(get_arc(),'sparc',list('119090','26'),\
                                     'i386', list('119091','27'),\
                                             list())
   var $flg = check_patch($ptc,$rev)
  }
  else
   var $flg = compare('VALID',$rec->[2],'5.11')
  if $flg
  {if testFile('x',$cmd = '/usr/sbin/iscsiadm')
    call do_exec(\
      {cmd => 'TITLE',txt => '---++ iscsiadm Information'},\
      ['disks/iscsi/iscsiadm_list_initiator-node',\
       $cmd,'list initiator-node',\
       '---+++ Initiator Nodes'],\
      ['disks/iscsi/iscsiadm_list_discovery',\
       $cmd,'list discovery',\
       '---+++ Discovery Methods and Status'],\
      ['disks/iscsi/iscsiadm_list_discovery-address',\
       $cmd,'list discovery-address -v',\
       '---+++ All Known Targets'],\
      ['disks/iscsi/iscsiadm_list_static-config',\
       $cmd,'list static-config',\
       '---+++ Static Targets'],\
      ['disks/iscsi/iscsiadm_list_isns-server-v',\
       $cmd,'list isns-server -v',\
       '---+++ isns-server Objects'],\
      ['disks/iscsi/iscsiadm_list_target-v',\
       $cmd,'list target -v',\
       '---+++ Targets'],\
      ['disks/iscsi/iscsiadm_list_target-S',\
       $cmd,'list target -S',\
       '---+++ Detailed Targets'],\
      ['disks/iscsi/iscsiadm_list_target-param-v',\
       $cmd,'list target-param -v',\
       '---+++ Target Parameters'],\
      {cmd => 'UNTITLE'})
   if testFile('x',$cmd = '/usr/sbin/iscsitadm')
    call do_exec(\
      {cmd => 'TITLE',txt => '---++ iscsitadm Information'},\
      ['disks/iscsi/iscsitadm_list-initiator_-v',$cmd,'list initiator -v',\
       '---+++ Initiators'],\
      ['disks/iscsi/iscsitadm_list-target_-v',   $cmd,'list target -v',\
       '---+++ Targets'],\
      ['disks/iscsi/iscsitadm_list-tpgt_-v',     $cmd,'list tpgt -v',\
       '---+++ Target Groups'],\
      ['disks/iscsi/iscsitadm_show_admin',       $cmd,'show admin',\
       '---+++ Administrative Information'],\
      {cmd => 'UNTITLE'})
  }
  if compare('VALID',$rec->[2],'5.11')
  {if testFile('x',$cmd = '/usr/sbin/itadm')
    call do_exec(\
      {cmd => 'TITLE',txt => '---++ itadm Information'},\
      ['disks/iscsi/itadm_list-defaults',    $cmd,'list-defaults',\
       '---+++ Default Properties'],\
      ['disks/iscsi/itadm_list-initiator_-v',$cmd,'list-initiator -v',\
       '---+++ Initiators'],\
      ['disks/iscsi/itadm_list-target_-v',   $cmd,'list-target -v',\
       '---+++ Targets'],\
      ['disks/iscsi/itadm_list-tpg_-v',      $cmd,'list-tpg -v',\
       '---+++ Portal Group Targets'],\
      {cmd => 'UNTITLE'})
   if testFile('x',$cmd = '/usr/sbin/stmfadm')
   {call do_exec(\
      {cmd => 'TITLE',txt => '---++ stmfadm Information'},\
      ['disks/iscsi/stmfadm_list-hg_-v',    $cmd,'list-hg -v',\
       '---+++ Host Groups'],\
      ['disks/iscsi/stmfadm_list-lu_-v',    $cmd,'list-lu -v',\
       '---+++ Logical Units'],\
      ['disks/iscsi/stmfadm_list-state',    $cmd,'list-state',\
       '---+++ Operational and Configuration State'],\
      ['disks/iscsi/stmfadm_list-target_-v',$cmd,'list-target -v',\
       '---+++ Targets'],\
      ['disks/iscsi/stmfadm_list-tg_-v',    $cmd,'list-tg -v',\
       '---+++ Target Groups'])
    loop $lin (command(concat($cmd,' list-lu')))
    {var (undef,undef,$lun) = split('\s+',$lin,3)
     call do_exec(\
       [concat('disks/iscsi/stmfadm_list-view_-l_',$lun),\
        $cmd,concat('list-view -l ',$lun),\
        concat('---+++ View Entries for: ',$lun)])
    }
    call do_exec({cmd => 'UNTITLE'})
   }
   if grepCommand('/usr/sbin/modinfo','sata','f')
    call do_exec(\
      ['disks/sata_dmsg_dump','/usr/bin/mdb','-k','---++ SATA Ring Buffer',\
       {inp => "::sata_dmsg_dump\012",\
        det => '/usr/bin/echo "::sata_dmsg_dump" | /usr/bin/mdb -k'}])
  }
  call do_exec({cmd => 'UNTITLE'})

  # Collect luxadm data again but without dump_map this time
  call collect_luxadm('---+ Fibre Channel Information (Second Run)',$rec->[2],\
    false)

  # Collect HD tools information
  if is_pkg_installed('SUNWhd')
  {call do_exec({cmd => 'TITLE',txt => '---+ HD Tool Information'})
   if ?$dir = get_pkg_base('SUNWhd','SUNWhd')
   {if testFile('x',$cmd = catFile($dir,'hd','bin','hd'))
    {call do_exec(\
       ['disks/hd/hd',  $cmd,undef,'---++ Logical Name to Slot# Mapping'],\
       ['disks/hd/hd-a',$cmd,'-a', '---++ fdisk Partition Type Drives'],\
       ['disks/hd/hd-g',$cmd,'-g', '---++ Drive Slot List with Temperature'],\
       ['disks/hd/hd-l',$cmd,'-l', '---++ Accessible Disks'],\
       ['disks/hd/hd-r',$cmd,'-r', '---++ SMART Data for Disks'],\
       ['disks/hd/hd-R',$cmd,'-R', '---++ SMART Data Individual ID'],\
       ['disks/hd/hd-j',$cmd,'-j', '---++ HBA Controller# and PCI Nodes'],\
       ['disks/hd/hd-T',$cmd,'-T', '---++ VTOC for Drives'],\
       ['disks/hd/hd-i',$cmd,'-i', '---++ cXtY, sd and PCI Path'],\
       ['disks/hd/hd-o',$cmd,'-o', '---++ LSI HBA#, Target#, and cXtY List'],\
       ['disks/hd/hd-x',$cmd,'-x', '---++ hd_map HTML File Generation'])
     call push(@fil,\
       ['G','disks/hd/hd_map.html',catFile($dir,'web','hd_map.html')])
    }
    if testFile('x',$cmd = catFile($dir,'hd','bin','hdadm'))
     call do_exec(\
       ['disks/hd/hdadm-smart-all',             $cmd,'smart all',\
        '---++ SMART Information'],\
       ['disks/hd/hdadm-read_cache-display-all',$cmd,'read_cache display all',\
        '---++ Read Cache Status'],\
       ['disks/hd/hdadm-write_cache-display-all',\
                                                $cmd,'write_cache display all',\
        '---++ Write Cache Status'],\
       ['disks/hd/hdadm-diskqual-all',          $cmd,'diskqual all',\
        '---++ Hard Drive Performance Test'])
    call do_exec({cmd => 'UNTITLE'})
   }
  }

  if and(has_zones(),${XPLR_LOCAL:1})
   call do_exec(\
     {cmd => 'TITLE',txt => '---+ Zone Disk Free'},\
     ['disks/df-alZ','/usr/bin/df','-alZ','---++ All'],\
     ['disks/df-elZ','/usr/bin/df','-elZ','---++ Files'],\
     ['disks/df-glZ','/usr/bin/df','-glZ','---++ Full'],\
     ['disks/df-klZ','/usr/bin/df','-klZ','---++ Summary'],\
     {cmd => 'UNTITLE'})
 }
 else
 {# Gather information from local zones
  var @fil = ()
  var @dir = command(join(' ',$exe,'/usr/bin/find /dev -type d -print'))
  call do_remote($pre,$exe,$top,\
    {cmd => 'TITLE',txt => '---+ Devices and Files Lists'},\
    ['disks/ls-lAR_dev','/usr/bin/ls','-lAR /dev','---++ /dev'],\
    ['disks/ls-ld_tmp', '/usr/bin/ls','-ld /tmp', '---++ /tmp'],\
    ['disks/dev-lL','/usr/bin/ls',join(' ','-lL',@dir),'---++ /dev Contents'],\
    {cmd => 'TITLE',txt => '---+ Swap'},\
    ['disks/swap-l','/usr/sbin/swap','-l','---++ Status'],\
    {cmd => 'UNTITLE'},\
    {cmd => 'TITLE',txt => '---+ Disk Free'},\
    ['disks/df-al','/usr/bin/df','-al' ,'---++ All'],\
    ['disks/df-el','/usr/bin/df','-el','---++ Files'],\
    ['disks/df-gl','/usr/bin/df','-gl','---++ Full'],\
    ['disks/df-kl','/usr/bin/df','-kl','---++ Summary'],\
    {cmd => 'UNTITLE'},\
    {cmd => 'TITLE',txt => '---+ Mounted Filesystems'},\
    ['disks/mount','/usr/sbin/mount',undef,'---++ Status'],\
    {cmd => 'UNTITLE'})
 }

 # Collect files
 prefix
 {write '---+ Collected files'
  write $WRN
  write '|*File Path*| *Size*|*Last Modified Date*|'
 }
 call do_collect_rem($pre,$top,@fil)

 if hasOutput(true)
  write $TOP

 # Add the report to the table of content
 if isCreated(true)
  toc '3:[[',getFile(),'][rda_report][',$ttl,']]'
}
unpretoc 2

=head1 SEE ALSO

L<S150XPLR.def|modules::S150XPLR>,
L<XPLRlib.def|modules::XPLRlib>

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
