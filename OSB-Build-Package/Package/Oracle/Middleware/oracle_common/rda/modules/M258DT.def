# M258DT.def: Collects StorEdge T3 Information
# $Id: M258DT.def,v 1.1 2012/08/10 21:36:04 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/M258DT.def,v 1.1 2012/08/10 21:36:04 mschenke Exp $
#
# Change History
# 20120620  PRO  Initial Version
#
=head1 NAME

M258DT - Collects StorEdge T3 Information

=head1 DESCRIPTION

Collects StorEdge T3 information.

The following reports can be generated and are regrouped under C<StorEdge T3>:

=cut

use Buffer
use Mrc

# Initialization
var $VALIDATE = true
keep $VALIDATE

section begin

var $ERR = '---## Associated Errors'
var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'

run XPLRlib('t3')

# -----------------------------------------------------------------------------
# XPLR_t3 section
# -----------------------------------------------------------------------------

section XPLR_t3

# Validate the execution context
if !${XPLR_GLOBAL:true}
 return
call log_run('Processing T3 sections...')

pretoc '2: StorEdge T3'

=head2 t3_cmd_scsi_${DEV} - SCSI Drives

For each drive (DEV) returned by the F</usr/sbin/format> command, collects the 
command C</usr/sbin/format -e -f ${FIL} -d ${DEV}>. ${FIL} holds the format 
command file, which is created as part of this collection.

=cut

if testFile('f','/usr/sbin/format')
{if !grepCommand('/usr/sbin/format','(SUN-T300)|(SUN-T4)','f')
  return log_info('T3 and T4 not installed')

 debug '  Inside T3 collection, gathering SCSI commands'
 pretoc '3: SCSI Drives'

 # Create the format command file
 var $fil = createTemp('FCF')
 call writeTemp('FCF','scsi')
 call writeTemp('FCF','inquiry')
 call writeTemp('FCF','quit')
 call writeTemp('FCF','quit')
 call closeTemp('FCF')

 # Get the SUN-T3 drives from the disk list
 loop $lin (command('/usr/sbin/echo 0 | /usr/sbin/format 2>&1'))
 {next !match($lin,'(\w+)\s*.SUN-T3')
  var ($dev) = last

  # Collect SCSI drive information for each drive found
  report concat('t3_cmd_scsi_',$dev)
  title '---+!! SCSI Drive ',$dev,' Information'
  prefix
  {write '---## Using: /usr/sbin/format -e -f <script> -d ',$dev
   call beginBlock(true)
   call addBlock('E','D',concat('disks/t3/',$dev,'.scsiinfo'))
  }

  if loadCommand(concat('/usr/sbin/format -e -f ',$fil,' -d ',$dev,' 2>&1'))
  {var $buf = getLastBuffer()
   while $buf->grep('Inquiry:','fr')
   {while ?$buf->get_line()
    {var $lin = last
     break match($lin,'scsi>')
     write $lin
    }
   }
   if hasOutput(true)
   {call endBlock()
    write $TOP
   }
  }

  if isCreated(true)
   toc '4:[[',getFile(),'][rda_report][',$dev,']]'
 }

 # Remove the format command file
 call unlinkTemp('FCF')

 # Adjust the table of contents
 unpretoc
}

=head2 SENA Drives

For each Sun Enterprise Network Array (SENA) returned by the
C</usr/sbin/luxadm probe> command, collects the following commands:

=over 2

=item o C</usr/sbin/luxadm display ${SENA}>

=item o C</usr/sbin/luxadm -e dump_map ${SENA}>

=back

=cut

if testFile('f','/usr/sbin/luxadm')
{debug '  Inside T3 collection, gathering SENA commands'
 pretoc '3: SENA Drives'

 # Determine the SENAs
 var %dev = ()
 loop $dev (grepCommand('/usr/sbin/luxadm probe 2>/dev/null','WWN:(\w+)','1'))
 {var ($dev) = last
  var $dev{$dev} = 1
 }

 # Collect commands for each SENA
 loop $dev (keys(%dev))
 {# Determine the commands to collect
  var @cmd = (\
    [concat('disks/t3/luxadm_display_',$dev),\
     '/usr/sbin/luxadm',concat('display ',$dev),\
     '---+ Device Data'],\
    [concat('disks/t3/luxadm_-e_dump_map_',$dev),\
     '/usr/sbin/luxadm',concat('-e dump_map ',$dev),\
     '---+ World Wide Name Data'])

  # Generate the report
  report concat('t3_cmd_sena_',$dev)
  title '---+!! Sun Enterprise Network Array ',$dev,' Information'
  title $TOC
  loop $rec (@cmd)
  {sleep
   call do_exec($rec)
  }
  if isCreated(true)
   toc '4:[[',getFile(),'][rda_report][',$dev,']]'
 }

 # Adjust the table of contents
 unpretoc
}

# Adjust the table of contents
unpretoc

=head1 SEE ALSO

L<S150XPLR.def|modules::S150XPLR>,
L<XPLRlib.def|modules::XPLRlib>

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
