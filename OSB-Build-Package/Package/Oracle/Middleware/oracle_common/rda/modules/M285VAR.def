# M285VAR.def: Collects /var Related Files and Commands
# $Id: M285VAR.def,v 1.1 2012/08/14 10:25:56 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/M285VAR.def,v 1.1 2012/08/14 10:25:56 mschenke Exp $
#
# Change History
# 20120629  JGS  Improve module

=head1 NAME

M285VAR - Collects /var Related Files and Commands

=head1 DESCRIPTION

This module collects information related to F</var> directory.

=cut

use Mrc

# Initialization
var $VALIDATE = true
keep $VALIDATE

section begin

var $ERR = '---## Associated Errors'
var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
var $WRN = '* Links point to files that have been collected in their original \
              format. Opening them directly in your browser can present risks. \
              To prevent them, access the file outside the browser or use the \
              link to save them and use an adequate viewer.'

run XPLRlib('var')

#------------------------------------------------------------------------------
# XPLR_var section
#------------------------------------------------------------------------------

section XPLR_var

# Validate the execution context
call log_run('Processing VAR sections ...')

=head2 var - /var file and command collection

Gathers /var related information using the following commands:

=over 2

=item o C<ls -ld /var>

=item o C<ls -ld /var/adm>

=item o C<ls -ld /var/sadm>

=item o C<ls -l /var/cron/log>

=item o C<ls -la /var/spool/cron/crontabs>

=item o C<ls -l /var/ntp>

=item o C<ls -l /var/tmp>

=item o C<ls -al /var/tmp>

=item o C<ls -l /var/yp/binding>

=back

Collects the following configuration files:

=over 2

=item o F<${LOGDIR_LWACT}/${HOSTID}.lwact.xml>

=item o F</etc/krb5/*>

=item o F</var/ep/*>

=item o F</var/krb5/*>

=item o F</var/ntp/ntp.drift>

=item o F</var/opt/sun/jet/config/host.config>

=item o F</var/run/psn>

=item o F</var/sadm/system/admin/CLUSTER>

=item o F</var/sun/include/*>

=item o F</var/spool/cron/crontabs/${USER}>

=item o F</var/yp/binding/*>

=back

Also collects the following log and diagnostic files:

=over 2

=item o Last 1000 lines from F</var/cpudiag/log/error.log>

=item o Last 1000 lines from F</var/cpudiag/log/info.log>

=item o Last 10000 lines from F</var/cron/log>

=item o Last 2000 lines from F</var/log/webconsole/console/console_debug_log>

=item o Last 2000 lines from F</var/log/webconsole/console_debug_log>

=item o Last 2000 lines from F</var/log/webconsole/debug_se6130ui.log>

=item o F</var/cpudiag/data/bad_cpu_id.*>

=item o F</var/log/install_stb-v*.log>

=item o F</var/log/sunfire/*>

=item o F</var/opt/sun/jet/jumpstart_install.log>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-audit-log.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-checksums.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-install-log.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-manifest.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-script-list.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-undo-log.txt>

=item o F</var/opt/SUNWjass/run/${TIMESTAMP}/jass-version.txt>

=item o F</var/opt/SUNWuce/agent/logs/*>

=item o F</var/opt/SUNWvts/logs/sunvts.info>

=item o F</var/sadm/install/contents>

=item o F</var/sadm/install/se6000/*>

=item o F</var/sadm/install_data/*>

=item o F</var/sadm/softinfo/INST_RELEASE>

=item o F</var/scn/update-agent/logs/*>

=item o F</var/sun/EIS-CD.log>

=item o F</var/sun/GOLD-CD.log>

=item o F</var/sun/install-ORIG/*>

=item o F</var/sunvts/logs/sunvts.info>

=item o F</var/svc/log/*>

=back

=cut

# Run reports
debug ' Inside VAR collection, gathering /var related information'
pretoc '2:/var'
loop $rec (get_zones(true))
{if $loc = defined($nam = $rec->[0])
 {var ($ttl,$pre,$exe) = (concat('From Zone ',$nam),\
                          concat('zones/',$nam),\
                          concat('/usr/sbin/zlogin ',$nam))
  call log_info(concat('var: RUNNING: zone ',$nam),\
                concat(' Inside VAR collection, collecting from ',$nam,' zone'))
 }
 else
  var ($ttl,$pre,$exe) = ('From Global Zone')
 var $top = $rec->[1]

 # Determine tha commands to execute
 if !$loc
 {var @cmd = (\
    '---+ /var Related File Lists',\
    ['var/ls-ld',\
     '/usr/bin/ls','-ld /var',\
     '---++ /var'],\
    ['var/adm-ld',\
     '/usr/bin/ls','-ld /var/adm',\
     '---++ /var/adm'],\
    ['var/cron/ls_-la_@var@spool@cron@crontabs',\
     '/usr/bin/ls','-la /var/spool/cron/crontabs',\
     '---++ /var/spool/cron/crontabs'],\
    ['var/sadm-ld',\
     '/usr/bin/ls','-ld /var/sadm',\
     '---++ /var/sadm'],\
    ['var/ntp',\
     '/usr/bin/ls','-l /var/ntp',\
     '---++ /var/ntp'],\
    ['var/tmp-l',\
     '/usr/bin/ls','-l /var/tmp',\
     '---++ /var/tmp'],\
    ['var/tmp-al',\
     '/usr/bin/ls','-al /var/tmp',\
     '---++ /var/tmp - with Hidden Files'],\
    ['var/yp_binding_ls-l',\
     '/usr/bin/ls','-l /var/yp/binding',\
     '---++ /var/yp/binding'])
  if testFile('f','/var/cron/log')
   call push(@cmd,\
     ['var/cron/log/ls_-l_@var@cron@log',\
      '/usr/bin/ls','-l /var/cron/log',\
      '---+ Crontab Log'])
 }
 else
  var @cmd = ()

 # Determine the configuration files to collect
 if grepFile(catFile($top,'/etc/default/lwact'),'^LOGDIR=','f')
  var $wdr = value(last)
 else
  var $wdr = '/var/log'
 var ($hid) = grepCommand(join(' ',$exe,'/usr/bin/hostid'),'^[0-9a-fA-F]{8}$')
 var @cfg = (\
   ['B','etc/krb5',                  '/etc/krb5',\
    undef,undef,'^\.+$','drv'],\
   ['B','var/krb5',                  '/var/krb5',\
    undef,undef,'^\.+$','drv'],\
   ['B',concat('var/lwact/',$hid,'.lwact.xml'),\
    catFile($wdr,concat($hid,'.lwact.xml'))],\
   ['B','var/yp/binding',            '/var/yp/binding',\
    undef,undef,'^\.+$','drv'])
 if !$loc
 {call push(@cfg,\
    ['G','var/ep',                    '/var/ep',\
     undef,undef,'^\.+$','drv'],\
    ['G','var/ntp/ntp.drift',         '/var/ntp/ntp.drift'],\
    ['G','var/opt/sun/jet/config/host.config',\
     '/var/opt/sun/jet/config/host.config'],\
    ['G','var/CLUSTER',               '/var/sadm/system/admin/CLUSTER'],\
    ['G','var/psn',                   '/var/run/psn'],\
    ['G','var/sse',                   '/var/sun/include',\
     undef,undef,'^\.+$','drv'])

  # Get usernames for whom to collect crontab file
  loop $usr (split('\|',getSetting('XPLR_VAR_CRON')))
   call push(@cfg,\
     ['G',concat('var/cron/',$usr),catFile('/var/spool/cron/crontabs',$usr)])
 }

 # Determine the log files to collect
 var @log = (\
   ['B','var/opt/SUNWuce/agent/logs','/var/opt/SUNWuce/agent/logs',\
    undef,undef,'^\.+$','drv'],\
   ['B','var/sadm/install_data',     '/var/sadm/install_data',\
    undef,undef,'^\.+$','drv'],\
   ['B','var/scn/update-agent/logs', '/var/scn/update-agent/logs',\
    undef,undef,'^\.+$','drv'],\
   ['B','var/svc/log',               '/var/svc/log',\
    undef,undef,'^\.+$','drv'])
 if !$loc
 {call push(@log,\
    {cmd=>'TAIL',nam=>'var/cpudiag/log/error.log.out',\
     fil=>'/var/cpudiag/log/error.log',cnt=>'1000'},\
    {cmd=>'TAIL',nam=>'var/cpudiag/log/info.log.out',\
     fil=>'/var/cpudiag/log/info.log',cnt=>'1000'},\
    {cmd=>'TAIL',nam=>'var/cron/log/tail_-10000_@var@cron@log.out',\
     fil=>'/var/cron/log',cnt=>'10000'},\
    {cmd=>'TAIL',\
     nam=>'var/log/webconsole/console/tail_-2000_console_debug_log.out',\
     fil=>'/var/log/webconsole/console/console_debug_log',cnt=>'2000'},\
    {cmd=>'TAIL',nam=>'var/log/webconsole/tail_-2000_console_debug_log.out',\
     fil=>'/var/log/webconsole/console_debug_log',cnt=>'2000'},\
    {cmd=>'TAIL',nam=>'var/log/webconsole/tail_-2000_debug_se6130ui.log.out',\
     fil=>'/var/log/webconsole/debug_se6130ui.log',cnt=>'2000'},\
    ['G','var/cpudiag/data',         '/var/cpudiag/data',\
     undef,undef,'^bad_cpu_id.*','np'],\
    ['G','var',                      '/var/log',\
     undef,undef,'^install_stb-v.*\.log$','n'],\
    ['G','var/log/sunfire',          '/var/log/sunfire',\
     undef,undef,'^\.+$','drv'],\
    ['G','var/opt/sun/jet/jumpstart_install.log',\
     '/var/opt/sun/jet/jumpstart_install.log'],\
    ['G','var/contents',             '/var/sadm/install/contents'],\
    ['G','var/sadm/install/se6000',  '/var/sadm/install/se6000',\
     undef,undef,'^\.+$','drv'],\
    ['G','var/INST_RELEASE',         '/var/sadm/softinfo/INST_RELEASE'],\
    ['G','var/sun/EIS-CD.log',       '/var/sun/EIS-CD.log'],\
    ['G','var/sun/GOLD-CD.log',      '/var/sun/GOLD-CD.log'],\
    ['G','var/sun/install-ORIG',     '/var/sun/install-ORIG',\
     undef,undef,'^\.+$','drv'])
  if testFile('f','/var/sunvts/logs/sunvts.info')
   call push(@log,\
     ['G','var/sunvts.info.old',     '/var/opt/SUNWvts/logs/sunvts.info'],\
     ['G','var/sunvts.info',         '/var/sunvts/logs/sunvts.info'])
  else
   call push(@log,\
     ['G','var/sunvts.info',         '/var/opt/SUNWvts/logs/sunvts.info'])

  # Add Security Toolkit log files
  if testDir('d','/var/opt/SUNWjass')
  {loop $sub (findDir('/var/opt/SUNWjass/run','^\.+$','nv'))
   {var $dir = catDir('/var/opt/SUNWjass/run',$tst)
    loop $fil ('jass-audit-log','jass-checksums','jass-install-log',\
               'jass-manifest','jass-script-list','jass-undo-log',\
               'jass-version')
     call push(@log,\
       ['G',concat('var/jass/',$fil,'.',$sub,'.txt'),\
        catFile($dir,concat($fil,'.txt'))])
   }
  }
 }

 # Produce the report
 report concat('var_cfg_z_',nvl($nam,'global'))
 title '---+!! ',$ttl
 title $TOC

 call do_remote($pre,$exe,$top,@cmd)

 prefix
 {write '---+ Configuration Files'
  write $WRN
  write '|*File Path*| *Size*|*Last Modified Date*|'
 }
 call do_collect_rem($pre,$top,@cfg)
 if hasOutput(true)
  write $TOP

 prefix
 {write '---+ Log Files'
  write $WRN
  write '|*File Path*| *Size*|*Last Modified Date*|'
 }
 call do_collect_rem($pre,$top,@log)
 if hasOutput(true)
  write $TOP

 if isCreated(true)
  toc '3:[[',getFile(),'][rda_report][',$ttl,']]'
}

# Adjust the table of content
unpretoc

#------------------------------------------------------------------------------
# Input section
#------------------------------------------------------------------------------

section input

if ?${ENV.EXP_CRON_WHICH}
 call setTempSetting('XPLR_VAR_CRON',replace(last,',','|',true))
else
 call setTempSetting('XPLR_VAR_CRON','adm|lp|root|sys|uucp')
call setTempSetting('xplr_var_accept',true)

=head1 SEE ALSO

L<S150XPLR.def|modules::S150XPLR>,
L<XPLRlib.def|modules::XPLRlib>

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
