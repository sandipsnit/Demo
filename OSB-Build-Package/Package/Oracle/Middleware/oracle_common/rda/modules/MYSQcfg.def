# MYSQcfg.def: Assists Oracle MySQL Server Collection Setup
# $Id: MYSQcfg.def,v 1.7 2012/03/02 13:56:40 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/MYSQcfg.def,v 1.7 2012/03/02 13:56:40 mschenke Exp $
#
# Change History
# 20120302  KRA  Improve get_dat_dir section.

=head1 NAME

MYSQcfg - Assists Oracle MySQL Server Collection Setup

=head1 DESCRIPTION

This module provided associated logic for the setup of the Oracle MySQL Server
collections.

=cut

#------------------------------------------------------------------------------
# Section init: Module initialization
#------------------------------------------------------------------------------
section init

#------------------------------------------------------------------------------
# Section chk_con_det: Check which connection parameters are present
#------------------------------------------------------------------------------
section chk_con_det

var ($cfg,$ins) = (${MYSQ_CONFIG},${MYSQ_DB_INS})

if createBuffer('CFG','R',$cfg)
{if grepBuffer('CFG',concat('^\[',quote($ins),'\]'),'f')
 {var (${AUX.dft},$mem,$prt,$soc) = (1)
  while ?getLine('CFG')
  {var $lin = chomp(last)
   break match($lin,'^\[')
   if match($lin,'^[^\043]*\bport\s*=\s*(\d+)')
    var ($prt) = last
   elsif match($lin,'^[^\043]*\bsocket\s*=\s*(.*?)\s*$')
    var ($soc) = last
   elsif match($lin,'^[^\043]*\bshared-memory-base-name\s*=\s*(.*?)\s*$')
    var ($mem) = last
  }
  if ?$prt
  {call setTempSetting('TMP_PROTOCOL','TCP')
   call setTempSetting('TMP_PORT',$prt)
  }
  elsif ?$soc
  {call setTempSetting('TMP_PROTOCOL',\
     cond(or(isWindows(),isCygwin()),'PIPE','SOCKET'))
   call setTempSetting('TMP_SOCKET',$soc)
  }
  elsif ?$mem
  {call setTempSetting('TMP_PROTOCOL','MEMORY')
   call setTempSetting('TMP_MEMORY',$mem)
  }
 }
 call deleteBuffer('CFG')
}

#------------------------------------------------------------------------------
# Section chk_db_ins: Check which database instances are present
#------------------------------------------------------------------------------
section chk_db_ins

var ($cfg,$cnt,$dft,@itm) = (${MYSQ_CONFIG},0)
if grepFile($cfg,'^\[(mysqld\d*)\]','1')
{var @ins = last
 var (${AUX.dft},$val) = (1,${MYSQ_DB_INS})

 # Generate temporary setting
 loop $ins (@ins)
 {call push(@itm,incr($cnt),$ins)
  if compare('eq',$val,$ins)
   var $dft = $ins
 }
 call setTempSetting('TMP_DFT_DB_INS',$dft)
 call setTempSetting('TMP_ITM_DB_INS',join('|',@itm))
}

#------------------------------------------------------------------------------
# Section find_config: Find the Oracle MySQL Server configuration file from PATH
#------------------------------------------------------------------------------
section find_config

var ($cfg,$nam) = ('',cond(isUnix(),'my.cnf','my.ini'))
if findCommand('mysql',true)
{var $dir = getNativePath(catDir(dirname(last),upDir()))
 if testFile('fr',catFile($dir,$nam))
  var $cfg = lastFile()
}
if length($cfg)
 var ${AUX.dft} = $cfg

#------------------------------------------------------------------------------
# Section get_bas_dir: Get the Oracle MySQL Server basedir directory
#------------------------------------------------------------------------------
section get_bas_dir

var ($cfg,$dir) = (${MYSQ_CONFIG})
if grepFile($cfg,'^[^\043]*\bbasedir\s*=\s*(\042)?(.*)?\1','f2')
 var ($dir) = last
elsif findCommand('mysql',true)
 var $dir = catDir(dirname(last),upDir())
elsif isUnix()
{if testFile('fx','/usr/bin/mysql')
  var $dir = '/usr'
}
elsif or(isWindows(),isCygwin())
{var @dir = ()
 if findDir(catDir(${ENV.PROGRAMFILES},'MySQL'),'^MySQL Server','p')
  call push(@dir,last)
 elsif findDir(catDir(${ENV.ProgramFiles},'MySQL'),'^MySQL Server','p')
  call push(@dir,last)
 elsif findDir(catDir(${ENV.ProgramW6432},'MySQL'),'^MySQL Server','p')
  call push(@dir,last)
 loop $pth (@dir)
 {if testFile('fr',catFile($pth,'bin',${AS.EXE:'mysql'}))
  {var $dir = $pth
   break
  }
 }
}
if length($dir)
 var ${AUX.dft} = $dir

#------------------------------------------------------------------------------
# Section get_dat_dir: Get the Oracle MySQL Server datadir directory
#------------------------------------------------------------------------------
section get_dat_dir

var ($cfg,$dir) = (${MYSQ_CONFIG})
if grepFile($cfg,'^[^\043]*\bdatadir\s*=\s*(\042)?(.*)?\1','f2')
 var ($dir) = last
elsif isUnix()
{if testDir('d','/var/lib/mysql')
  var $dir = '/var/lib/mysql'
}
elsif or(isWindows(),isCygwin())
{var @dir = ()
 if testDir('d',catDir(${MYSQ_HOME},'data'))
  var $dir = lastDir()
 elsif findDir(catDir(${ENV.ALLUSERSPROFILE},'Application Data','MySQL'),\
               '^MySQL Server','p')
  call push(@dir,last)
 elsif findDir(catDir(${ENV.APPDATA},'MySQL'),'^MySQL Server','p')
  call push(@dir,last)
 loop $pth (@dir)
 {if testDir('d',catDir($pth,'Data'))
  {var $dir = lastDir()
   break
  }
 }
}
if length($dir)
 var ${AUX.dft} = $dir

#------------------------------------------------------------------------------
# Section get_user: Get the Oracle MySQL Server user
#------------------------------------------------------------------------------
section get_user

var ($cfg,$usr) = (${MYSQ_CONFIG})
if createBuffer('CFG','R',$cfg)
{loop $str (grepBuffer('CFG','^\[client|mysql\]','o'))
 {var ($off,$lin) = split(':',$str,2)
  call setPos('CFG',$off)
  while ?getLine('CFG')
  {var $lin = chomp(last)
   break match($lin,'^\[')
   if match($lin,'^[^\043]*\buser\s*=\s*(\S+)')
   {var ($usr) = last
    break
   }
  }
  if length($usr)
  {var ${AUX.dft} = $usr
   break
  }
 }
 call deleteBuffer('CFG')
}

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
