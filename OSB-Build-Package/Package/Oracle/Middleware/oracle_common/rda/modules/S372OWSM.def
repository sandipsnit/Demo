# S372OWSM.def: Collects Oracle Web Services Manager Information
# $Id: S372OWSM.def,v 2.6 2012/01/03 13:34:46 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/S372OWSM.def,v 2.6 2012/01/03 13:34:46 mschenke Exp $
#
# Change History
# 20120103  MSC  Change the copyright notice.

=head1 NAME

S372OWSM - Collects Oracle Web Services Manager Information

=head1 DESCRIPTION

This module collects the Oracle Web Services Manager-related information.

The following reports can be generated and are regrouped under C<Oracle
Web Services Manager>:

=cut

echo tput('bold'),'Processing OWSM module ...',tput('off')

# Initialization
var $ORACLE_HOME = getSetting('ORACLE_HOME','')
var $OWSM_AUTO   = getSetting('OWSM_DB_AUTO',1)
var $OWSM_LOCAL  = getSetting('OWSM_LOCAL')
var $TAIL        = getSetting('RDA_TAIL',1000)

var $OWSM_HOME   = catDir($ORACLE_HOME,'owsm')

var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
pretoc '1:Oracle Web Services Manager'

# Load the common macros
run library()
run DBinfo()

=head2 rep_info - Repository Information

Collects the repository information from the Oracle Web Services Manager
database.

=cut

# Define a database connection macro
macro set_db
{var ($sid) = @arg
 var $usr = uc(getSetting('OWSM_LOGIN','ORAWSM'))

 # Determine the user password
 if compare('eq',$usr,'/')
  var ($usr,$pwd) = ('','')
 elsif hasSqlPassword($usr,$sid)
  var $pwd = undef
 else
  var $pwd = askPassword(concat('Enter ',$usr,'@',$sid,' user password:'))

 # Change the database context
 var $old = setSqlLogin($usr,$pwd,$sid,getSetting('OWSM_SYSDBA'))
 var $env = cond(getSetting('OWSM_SWITCH'),setSqlSid($sid))
 var $try = setSqlFailure(0)

 # Test the database connection
 call testSql()

 # Return the previous context
 return (true,$old,$env,$try)
}

# Get the SID from config file
if $OWSM_AUTO
{var $sid = undef
 loop $lin (grepFile(catFile($OWSM_HOME,'bin','coresv.properties'),\
                     concat('^',quote('dataload.messagelog.db.url'),'\s*='),\
                     'i'))
 {var $sid = replace(value($lin),'^.*@')
  if match($sid,'^//([\w\-\.]+:{1}\d+/{1}.*)$')
  {# Pattern for service name, eg: //hostname:port/service
   var $sid = replace(last,'/','::')
  }
  elsif match($sid,'ldap',true)
  {echo tput('reverse'),'Warning:'
   echo "RDA does not support database connection using LDAP. Run the setup \
         again in\012advanced mode to provide the connection details. You \
         can use the\012following command:"
   echo '<rda> -SCRP -p advanced OWSM',tput('off')
   var ($OWSM_LOCAL,$flg) = (true)
   break
  }
  var ($flg,$old,$env,$try) = set_db($sid)
  break
 }
}
elsif $OWSM_LOCAL
 var $flg = true
elsif getSetting('OWSM_SID')
 var ($flg,$old,$env,$try) = set_db(last)
else
 var ($OWSM_LOCAL,$flg) = (true)

# Collect the repository information
if $flg
{debug ' Inside OWSM module, gathering the repository information'
 report rep_info
 var $TTL = '---+!! Oracle Web Services Manager Repository Information'
 var @DBG = ('',\
             '  - Getting tablespace information',\
             '  - Getting free space in default tablespaces for ORAWSM',\
             '  - Getting extents of default tablespaces for ORAWSM',\
             '  - Getting total number of invalid objects for ORAWSM',\
             '  - Getting list of invalid objects for ORAWSM',\
             '  - Getting total number of rows in Policy_Manager_Objects \
                  table',\
             '  - Getting total number of rows in Messagelogs table',\
             '  - Getting total number of rows in Log_Objects table',\
             '  - Getting total number of rows in Policy_Set table',\
             '  - Getting total number of rows in Policies table',\
             '  - Getting total number of rows in Pipelines table',\
             '  - Getting total number of rows in Policy_Set_Objects table',\
             '  - Getting list of objects for ORAWSM')
 var @TTL = ('',\
             '---+ Tablespace Information',\
             '---+ Free Space in Default Tablespaces for ORAWSM',\
             '---+ Extents of Default Tablespaces for ORAWSM',\
             '---+ Total Number of Invalid Objects for ORAWSM',\
             '---+ List of Invalid Objects for ORAWSM',\
             '---+ Number of Rows in Policy_Manager_Objects Table',\
             '---+ Number of Rows in Messagelogs Table',\
             '---+ Number of Rows in Log_Objects Table',\
             '---+ Number of Rows in Policy_Set Table',\
             '---+ Number of Rows in Policies Table',\
             '---+ Number of Rows in Pipelines Table',\
             '---+ Number of Rows in Policy_Set_Objects Table',\
             '---+ List of Objects for ORAWSM')
 var @HDR = ('',\
             '|*Username*|*Created*|*Default Tablespace*|*Temp Tablespace*|',\
             '|*Default Tablespace*|*Free Tablespace (MiB)*|',\
             '|*Tablespace Name*|*Initial Extent*|*Next Extent*|*Pct Increase*|\
               *Allocation Type*|*Segment Space Management*|\
               *Extent Management*|',\
             '| *Count*|',\
             '|*Owner*|*Object Name*|*Object Type*|*Status*|',\
             '| *Count*|',\
             '| *Count*|',\
             '| *Count*|',\
             '| *Count*|',\
             '| *Count*|',\
             '| *Count*|',\
             '| *Count*|',\
             '|*Object Type*|*Object Name*|*Status*|')
 set $sql
 {SELECT '|' ||
 "       username || ' |' ||
 "       TO_CHAR(created,'DD-Mon-YYYY HH24:MI:SS') || ' |' ||
 "       default_tablespace || ' |' ||
 "       temporary_tablespace || ' |'
 " FROM dba_users
 " WHERE username = 'ORAWSM';
 "PROMPT ___Macro_separator(2)___
 "SELECT '|' ||
 "       tablespace_name || ' | ' ||
 "       SUM(bytes) / 1048576 || '|'
 " FROM dba_free_space
 " WHERE tablespace_name IN (
 "        SELECT default_tablespace
 "         FROM dba_users
 "         WHERE username = 'ORAWSM')
 " GROUP BY tablespace_name
 " ORDER BY tablespace_name;
 "PROMPT ___Macro_separator(3)___
 "SELECT '|' ||
 "       tablespace_name || ' | ' ||
 "       initial_extent || '| ' ||
 "       next_extent || '| ' ||
 "       pct_increase || '|' ||
 "       allocation_type || ' |' ||
 "       segment_space_management || ' |' ||
 "       extent_management || ' |'
 " FROM dba_tablespaces
 " WHERE tablespace_name IN (
 "        SELECT default_tablespace
 "         FROM dba_users
 "         WHERE username = 'ORAWSM')
 " ORDER BY tablespace_name;
 "PROMPT ___Macro_separator(4)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM all_objects
 " WHERE status = 'INVALID'
 "   AND owner = 'ORAWSM';
 "PROMPT ___Macro_separator(5)___
 "SELECT '|' ||
 "       owner || ' |' ||
 "       object_name || ' |' ||
 "       object_type || ' |' ||
 "       status || ' |'
 " FROM all_objects
 " WHERE status = 'INVALID'
 "   AND owner = 'ORAWSM';
 "PROMPT ___Macro_separator(6)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM policy_manager_objects;
 "PROMPT ___Macro_separator(7)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM messagelogs;
 "PROMPT ___Macro_separator(8)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM log_objects;
 "PROMPT ___Macro_separator(9)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM policy_set;
 "PROMPT ___Macro_separator(10)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM policies;
 "PROMPT ___Macro_separator(11)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM pipelines;
 "PROMPT ___Macro_separator(12)___
 "SELECT '| ' ||
 "       COUNT(*) || '|'
 " FROM policy_set_objects;
 "PROMPT ___Macro_separator(13)___
 "SELECT '|' ||
 "       object_type || ' |' ||
 "       object_name || ' |' ||
 "       status || ' |'
 " FROM all_objects
 " WHERE owner = 'ORAWSM'
 " ORDER BY object_type,object_name;
 }
 call separator(1)
 call writeSql($sql)
 call separator(0,'Repository Information')
}

# Restore the previous context
if !$OWSM_LOCAL
{if defined($env)
  call setSqlSid($env)
 call setSqlLogin($old)
 call setSqlFailure($try)
}

=head2 coresv - $OH/owsm/lib/coresv*.jar Files

Lists the F<coresv*.jar> files present in the F<$ORACLE_HOME/owsm/lib>
directory.

=cut

debug ' Inside OWSM module, getting the list of coresv jar files'
report coresv
prefix
 write '---+ List of coresv jar files from OH/owsm/lib directory'
call statFile('b',grepDir(catDir($ORACLE_HOME,'owsm','lib'),\
                          '^coresv.*\.jar$','p'))
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][$OH/owsm/lib/coresv*.jar Files]]'

=head2 Configuration Files

Gathers Oracle Web Services Manager-related configuration files.

=cut

debug ' Inside OWSM module, collecting the configuration files'
pretoc '2:Configuration Files'
call sort_files(3,$TAIL,\
                grepDir(catDir($OWSM_HOME,'bin'),\
                        '(install|coresv|agent|manageUserGroups)\.properties',\
                        'p'),\
                catFile($OWSM_HOME,'config','gateway',\
                        'gateway-config-installer.properties'),\
                catFile($OWSM_HOME,'config','serveragent',\
                        'serveragent-config-installer.properties'),\
                grepDir(catDir($OWSM_HOME,'config','ccore'),\
                        '(ui-config-installer|monitorui-config-installer|\
                          policyui-config-installer)\.properties',\
                        'p'),\
                grepDir(catDir($OWSM_HOME,'config','coreman'),\
                        '(collector-config-installer|monitor-config-installer)\
                         \.properties',\
                        'p'),\
                catFile($OWSM_HOME,'config','clientagent',\
                        'clientagent-config-installer.properties'),\
                catFile($OWSM_HOME,'config','policymanager',\
                        'policymanager-config-installer.properties'))
unpretoc

=head2 Log Files

Gathers Oracle Web Services Manager-related log files.

=cut

debug ' Inside OWSM module, collecting the log files'
pretoc '2:Log Files'

# Get the instance list
var ($dir,@tbl) = (getSetting('J2EE_TOP',catDir($ORACLE_HOME,'j2ee')))
if testFile('r',catFile($ORACLE_HOME,'opmn','conf','opmn.xml'))
{var $top = xmlLoadFile(lastFile(),xmlDisable(xmlParser(),'DR'))
 loop $xml (xmlFind($top,\
              'opmn/process-manager/ias-instance/ias-component/process-type \
               module-id="OC4J"'))
  call push(@tbl,xmlValue($xml,'id'))
}
else
 var @tbl = ('home')

# Collect log files
loop $ins (@tbl)
 call sort_files(3,$TAIL,grepDir(catDir($dir,$ins,'log'),\
                                 '^(ccore|coreman|gateway|policymanager|\
                                    serveragent)\.log$',\
                                 'dir'))
unpretoc 2

=head1 SEE ALSO

L<DBinfo.def|modules::DBinfo>, L<library.def|modules::library>

=begin credits

=over 10

=item RDA 4.10:  Sunil Hingorani, Allan Jackson.

=item RDA 4.17:  Miguel Hernandez.

=item RDA 4.20:  Miguel Hernandez.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
