# S410GRID.def: Controls Grid Control Data Collection
# $Id: S410GRID.def,v 2.33 2012/05/21 21:43:08 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/S410GRID.def,v 2.33 2012/05/21 21:43:08 mschenke Exp $
#
# Change History
# 20120517  KRA  Remove $OH and $OH1 variable assignment.

=head1 NAME

S410GRID - Collects Oracle Management Server and Repository Information

=head1 DESCRIPTION

This module collects Oracle Enterprise Manager (OMS) and Repository-related
information. Some reports require that you install the EMDIAG kit.

The following reports can be generated and are regrouped under C<Enterprise
Manager Server>:

=cut

use Buffer

echo tput('bold'),'Processing GRID module ...',tput('off')

# Initialization
var $AUDIT_AGE     = getSetting('GRID_AUDIT_AGE',30)
var $EMDIAG_IN_USE = getSetting('GRID_EMDIAG_IN_USE')
var $EMDIAG_TOP    = getSetting('GRID_EMDIAG_TOP')
var $GRID_HOME     = catDir(getSetting('GRID_SERVER_HOME',''))
var $ORACLE_HOME   = catDir(getSetting('ORACLE_HOME',''))
var $PING_TEST     = getSetting('GRID_PING_TEST')
var $TAIL          = getSetting('RDA_TAIL',1000)
var $VIOLATION_AGE = getSetting('GRID_VIOLATION_AGE',15)

var $EMCTL = catCommand($GRID_HOME,'bin',${AS.BATCH:'emctl'})

var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
var $ERR = ' (error)'

if getSetting('GRID_REQ_IREQ')
{toc '0:   * Enterprise Manager Server'
 toc '1+:Oracle Management Server Home'
}
else
 toc '1:Enterprise Manager Server'

# Validate the ages
if !isNumber($AUDIT_AGE)
 var $AUDIT_AGE = 30
if !isNumber($VIOLATION_AGE)
 var $VIOLATION_AGE = 15

# Load the common macros
run library()
run EMdiag()
run INSTinfo()

# Determine the EM config home
if testFile('fr',catFile($GRID_HOME,'sysman','config',\
                        'emInstanceMapping.properties'))
{var $prp = value(grepFile(lastFile(),'^[^#]*\bemgc\.properties\s*$','f'))
 var @dir = splitDir($prp)
 call splice(@dir,-3)
 var $EM_CFG_HOME = catDir(@dir)
 var $MW_HOME= value(grepFile($prp,'^[^#]*\bMW_HOME=','f'))
}

# Set the OMS home as current target
call setCurrent(addTarget('OH_Grid',{ORACLE_HOME=>$GRID_HOME}))

=head1 ORACLE MANAGEMENT SERVER HOME

=head2 abbr_used - Abbreviations

Displays the RDA abbreviations defined for data collection.

=cut

report abbr_used
prefix
{write '---+ Oracle Management Server Home Abbreviations'
 write '|*Abbreviation*|*Location*|'
}
var %hsh = getSymbols()
loop $abr (keys(%hsh))
 write '|',$abr,' |',catDir(@{$hsh{$abr}}),' |'
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Abbreviations]]'

=head2 no_access - No Repository Access

Indicates whether the Oracle Enterprise Manager repository is not accessible
(for versions earlier than 12c).

=head2 not_found - No EMDIAG Kit

Indicates whether the EMDIAG kit is not found (for versions earlier than 12c).

=head2 diagkit - EMDIAG Kit Information

Displays the information collected by the EMDIAG kit. It generates this report
only when the EMDIAG kit is installed in the Enterprise Manager repository. To
trigger EMDIAG kit collections, use C<RDA -T em> before running this module
(for versions earlier than 12c).

=head2 violations - Violation List

Collects the diagnostic violation list (for versions earlier than 12c).

=head2 audit - Audit Log

Lists all actions taken in the last days (for versions earlier than 12c).

=cut

var $ver = undef
if grepCommand(concat($EMCTL,' status oms'),'\sRelease\s','f')
 var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
if !$ver
{if grepCommand(concat($EMCTL,' getversion oms'),'\sOMS Version\s','f')
  var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
}
if and($EMDIAG_IN_USE,compare('older',$ver,'12'))
{# Determine the user and password if EMDIAG kit results are requested.
 var $log = nvl(get_em_login($GRID_HOME),'sysman')
 var $sid = get_em_conn($GRID_HOME)
 if !$sid
 {loop $lin (grepCommand(concat($EMCTL,' config oms -list_repos_details'),\
                         '^Repository '))
  {if match($lin,'^Repository Connect Descriptor')
    var (undef,$sid) = split('\s*:\s*',$lin,2)
   elsif match($lin,'^Repository User')
    var (undef,$log) = split('\s*:\s*',$lin,2)
  }
  if !$sid
  {if testFile('fr',$prp)
   {var $sid = replace(value(grepFile($prp,'^EM_REPOS_CONNECTDESCRIPTOR','f')),\
                       '\\','',true)
    var $log = value(grepFile($prp,'^EM_REPOS_USER','f'))
   }
  }
 }
 if hasDbPassword($log,'Oracle',$sid)
  var $pwd = undef
 elsif getSetting('SQL_PASSWORD_EM_REPOS_USER')
  var ($pwd) = unpack('u',last)
 else
  var $pwd = askPassword(concat('Enter ',join('@',$log,$sid),' user password:'))

 # Collect kit information
 debug ' Inside GRID module, collecting EMDIAG kit information'
 call switchDb('Oracle',$log,$pwd,$sid)
 if testDb()
 {report no_access
  write '**Repository database connection disabled**%BR%',getDbMessage()
  toc '2:[[',getFile(),'][rda_report][No Repository Access]]'
 }
 else
 {if check_emdiag_kit()
  {# Get kit results
   call call_emdiag_kit($VIOLATION_AGE,$AUDIT_AGE)

   # Collect kit log files
   if $EMDIAG_TOP
   {pretoc '2:EMDIAG Kit Log Files'
    call sort_files(3,$TAIL,grepDir(catDir($EMDIAG_TOP,'log'),'\.log$','np'))
    unpretoc
   }
  }

=head2 secstatus - OMS Secure Status

Collects the OMS secure status from the repository

=cut

  set $job
  {# SQL
  "SELECT '|' ||
  "       host_url || ' |' ||
  "       timestamp || ' |' ||
  "       value || ' |'
  " FROM (SELECT DISTINCT oms.host_url host_url,
  "              oms.timestamp timestamp,
  "              DECODE(oms.value,0,'Unsecured',
  "                               1,'Secured and Unlocked',
  "                               2,'Secured and Locked',
  "                               'error:'||oms.value) value
  "        FROM mgmt_oms_parameters oms,
  "             (SELECT host_url,
  "                     name,
  "                     MAX(timestamp) last_time
  "               FROM mgmt_oms_parameters
  "               WHERE name = 'oms_secure_status'
  "               GROUP BY host_url,name) s
  "        WHERE oms.host_url = s.host_url
  "          AND oms.timestamp = s.last_time
  "          AND oms.name = s.name)
  " ORDER BY host_url
  "/
  }
  debug ' Inside GRID module, getting OMS secure status information'
  report secstatus
  prefix
  {write '---+ OMS Secure Status'
   write '|*Host URL*|*Timestamp*|*Status*|'
  }
  call writeDb($job)
  if isCreated(true)
   toc '2:[[',getFile(),'][rda_report][OMS Secure Status]]'
 }
}

=head2 emctl - emctl Command Output

For version 12c and later, it collects the output of the following F<emctl>
command options:

=over 4

=item o C<emctl getversion oms>

=item o C<emctl status oms -details>

=item o C<emctl list oms>

=item o C<emctl list properties -module emoms>

=item o C<emctl list properties -module logging>

=item o C<emctl config oms -list_repos_details>

=item o C<emctl status emkey>

=item o C<emctl partool check>

=item o C<emctl dump omsthread>

=back

For version 11g, it collects the output of the following F<emctl> command
options:

=over 4

=item o C<emctl getversion oms>

=item o C<emctl status oms>

=item o C<emctl list oms>

=item o C<emctl list properties -module emoms>

=item o C<emctl list properties -module logging>

=item o C<emctl config oms -list_repos_details>

=item o C<emctl status oms -details>

=item o C<emctl status emkey>

=item o C<emctl dump omsthread>

=item o C<emctl partool check>

=back

For earlier versions, it collects the output of the following F<emctl> command
options:

=over 4

=item o C<emctl getversion oms>

=item o C<emctl status oms>

=item o C<emctl status blackout>

=item o C<emctl secure status oms> or C<emctl status oms -secure>

=back

=cut

debug ' Inside GRID module, collecting emctl information'
report emctl
if compare('older',$ver,'11')
{var @opt = ('getversion oms',\
             'status oms',\
             'status blackout',\
             cond(compare('older',$ver,'10.2.0.3'),'secure status oms',\
                                                   'status oms -secure'))
 var @dsc = ('OMS version',\
             'Current OMS status',\
             'OMS blackout status',\
             'OMS secure status')
 var $cmd = exec_emctl($EMCTL,$ORACLE_HOME,\@opt,\@dsc)
}
else
{# Define the code to get the password
 code get_pwd
 {if !?$pwd
  {if getSetting('SQL_PASSWORD_EM_REPOS_USER')
    var ($pwd) = unpack('u',last)
   else
    var $pwd = askPassword('Enter Enterprise Manager Root (SYSMAN) Password :')
  }
  return $pwd
 }

 # Generate the report
 if compare('valid',$ver,'12')
 {var @opt = ('getversion oms',\
              ['status oms -details'],\
              'list oms',\
              'config oms -list_repos_details',\
              ['list properties -module emoms'],\
              ['list properties -module logging'],\
              ['status emkey'],\
              ['partool check'],\
              'dump omsthread')
  var @dsc = ('OMS version',\
              'OMS detail status',\
              'OMS list',\
              'Repository details',\
              'Module emoms properties',\
              'Module logging properties',\
              'Status emkey',\
              'Partool check',\
              'OMS thread dump')
 }
 else
 {var @opt = ('getversion oms',\
              'status oms',\
              'list oms',\
              'dump omsthread',\
              'config oms -list_repos_details',\
              ['list properties -module emoms'],\
              ['list properties -module logging'],\
              ['status oms -details'],\
              ['status emkey'],\
              ['partool check'])
  var @dsc = ('OMS version',\
              'Current OMS status',\
              'OMS list',\
              'OMS thread dump',\
              'Repository details',\
              'Module emoms properties',\
              'Module logging properties',\
              'OMS detail status',\
              'Status emkey',\
              'Partool check')
 }
 var $cmd = exec_emctl($EMCTL,$ORACLE_HOME,\@opt,\@dsc,&get_pwd)
}

=head2 product_info - Product Information

Produces the inventory for the Oracle Enterprise Manager Grid Control (OMS)
home.

=cut

debug ' Inside GRID module, providing the OMS inventory (can take time)'
report product_info
prefix
{write '---+!! GRID Control (OMS) Product Information'
 write $TOC
}
call inventory_details(catDir($GRID_HOME,'inventory'),\
                       getSetting('GRID_INTERIM'))
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Product Information]]'

=head2 omsvfy - EMDIAG Omsvfy Detail Output

Collects EMDIAG OMS verification results (for version 12c).

=cut

if and($EMDIAG_IN_USE,compare('valid',$ver,'12'))
{debug ' Inside GRID module, running omsvfy'
 report omsvfy
 if testFile('fx',catFile($EMDIAG_TOP,'bin',${AS.BATCH:'omsvfy'}))
 {var $cmd = concat(lastCommand(),' verify all -level 9 -detail 2>&1')
  prefix
  {write '---+ EMDIAG Omsvfy Detail Output'
   write '---## Using: ',encode($cmd)
  }
  call writeCommand($cmd)
  if isCreated(true)
   toc '2:[[',getFile(),'][rda_report][EMDIAG Omsvfy Detail Output]]'
 }

 # Collect kit log files
 if $EMDIAG_TOP
 {pretoc '2:EMDIAG Kit Log Files'
  call sort_files(3,$TAIL,grepDir(catDir($EMDIAG_TOP,'log'),'\.log$','np'))
  unpretoc
 }
}

=head2 oms_config - OMS Configuration

Collects the following configuration files:

=over 24

=item F<emoms.properties>

This file contains all the operational parameters for the Oracle Management
Server (for versions earlier than 11g).

=item F<emomslogging.properties>

This file contains the logging setup for the Java fetchlets (for versions
earlier than 11g).

=item F<OUIinventories.add>

This file contains the list of all Oracle Universal Installer inventories on
the machine to be considered by the agent.

=item F<agntstmp.txt>

This file contains the time stamp of the last heartbeat to the Oracle
Management Server.

=item F<discover.lst>

This file contains a list of all discovery scripts that must be run for
discovery. Discovery is run only once, typically during the installation of the
Enterprise Manager Agent.

=item F<httpd_em.conf>

This file contains virtual hosts and other directives required for the
Enterprise Manager Central Console to function correctly.

=item F<lastupld.xml>

This file has information about categories properties computed for various
targets.

=item F<nsupportedtzs.lst>

This file contains the names of all supported time zones.

=item F<protocol.ini>

This file contains the version-specific information of the Oracle Management
Server, which is required by the agent to communicate properly.

=item F<setupinfo.txt>

This file is generated by Oracle Universal Installer during the installation of
the Enterprise Manager Agent. It contains installation-specific information.

=item F<supportedtzs.lst>

This file contains the names of all supported time zones.

=item F<tzmappings.lst>

This file contains supported time zone mappings.

=back

It performs some predefined tests on the configuration properties also. It
reports failures.

=cut

debug ' Inside GRID module, collecting Grid Control configuration'
if $EM_CFG_HOME
{pretoc '2:OMS Configuration'
 var @lst = grepDir(catDir($EM_CFG_HOME,'em'),'^emgc\.properties$','r',1)
}
else
{call display_oms_config($GRID_HOME,\@cfg,\@log)
 var @lst
}
call skip_files(\
  catFile($GRID_HOME,'sysman','config','emoms.properties'),\
  catFile($GRID_HOME,'sysman','config','emomslogging.properties'))
call sort_files(3,$TAIL,\
  catFile($GRID_HOME,'sysman','setupinfo.txt'),\
  catFile($GRID_HOME,'sysman','admin','nsupportedtzs.lst'),\
  catFile($GRID_HOME,'sysman','admin','supportedtzs.lst'),\
  catFile($GRID_HOME,'sysman','admin','tzmappings.lst'),\
  catFile($GRID_HOME,'sysman','admin','discover','discover.lst'),\
  catFile($GRID_HOME,'sysman','config','httpd_em.conf'),\
  catFile($GRID_HOME,'sysman','config','httpd_em.conf.template'),\
  grepDir(catDir($GRID_HOME,'sysman','config'),'\.properties$','np'),\
  grepDir(catDir($GRID_HOME,'sysman','emd'),'\.(ini|xml)$','np'),\
  @lst)
if $EM_CFG_HOME
 unpretoc

=head2 thread_dump - Thread Dump

Displays the thread dump for the Oracle Manager Server Java process. It takes
two thread dumps at an interval of 3 minutes. It produces this report when the
C<emctl dump omsthread> option is available. This option was added to
the 10.2 version. This test is not performed on the 11g version or later.

=cut

if and($cmd,compare('older',$ver,'11'),grepCommand($cmd,'omsthread','f'))
{debug ' Inside GRID module, collecting a OMS thread dump (takes 3 minutes)'
 call dump_oms_threads(concat($cmd,' dump omsthread'),\
   catFile($GRID_HOME,'opmn','logs','OC4J~OC4J_EM~default_island~1'))
}

=head2 file_permissions - OMS Upload Receive File/Directory Details

Displays the details of the Oracle Manager Server receive directory and Oracle
Manager Server receive errors directory, where Enterprise Manager stores all
agent uploads before their upload in the repository. It checks the directory
ownership also (for versions earlier than 12c).

=cut

if compare('older',$ver,'12')
{debug ' Inside GRID module, collecting receive directory details'
 var (@own,%dir,%fil) = ()
 if testDir('d',catDir($GRID_HOME,'sysman','recv'))
 {var $dir{lastDir()} = 'o'
  if testDir('dr',catDir($GRID_HOME,'sysman','recv','errors'))
   var $dir{lastDir()} = 'o'
 }
 elsif $EM_CFG_HOME
 {var $dir = catDir($EM_CFG_HOME,'em')
  loop $sub (grepDir($dir,'.','n'))
  {if testDir('d',catDir($dir,$sub,'sysman','recv'))
   {var $dir{lastDir()} = 'o'
    if testDir('dr',catDir($dir,$sub,'sysman','recv','errors'))
     var $dir{lastDir()} = 'o'
   }
  }
 }
 call check_permissions('OMS Upload Receive File/Directory Details',\
                        \@own,\%dir,\%fil)

=head2 ping_test - Agent Ping Test

When requested, the module performs a ping test to a specified host list (for
versions earlier than 12c).

=cut

 if $PING_TEST
 {debug ' Inside GRID module, performing ping tests'
  call ping_host('Agent Ping Test',split('\|',getSetting('GRID_PING_LIST')))
 }

=head2 log_errors - Log Errors

Filters all the lines with C<ERROR> message from various Oracle Manager Server
log files (for versions earlier than 12c).

=cut

 debug ' Inside GRID module, extracting errors from OMS log files'
 if $EM_CFG_HOME
 {var @fil = ()
  loop $sub (findDir(catDir($EM_CFG_HOME,'em'),'^sysman$','ir',1))
   call push(@fil,grepDir(catDir($sub,'log'),'^emagent_memDump','npv'))
  call extract_errors('log_errors',2,'Log Errors',$TAIL,@fil)
 }
 else
  call extract_errors('log_errors',2,'Log Errors',$TAIL,\
    grepDir(catDir($GRID_HOME,'sysman','log'),'^emagent_memDump','npv'))

=head2 apachelog - Apache Logs

Displays the content of F<GRID_HOME/Apache/Apache/logs> directory (for versions
earlier than 12c).

=cut

 report apachelog
 debug ' Inside GRID module, collecting apache logs directory content'
 prefix
  write '---+!! Apache Logs'
 call statDir('t',catDir($GRID_HOME,'Apache','Apache','logs'))
 if isCreated(true)
  toc '2:[[',getFile(),'][rda_report][Apache Logs]]'
}

=head2 Log Files

Collects the Grid Control log files.

=cut

debug ' Inside GRID module, collecting OMS log files'
pretoc '2:Log Files'
call sort_files(3,$TAIL,\
  grepDir(catDir($GRID_HOME,'sysman','log'),'\.nohup$','np'),\
  grepDir(catDir($GRID_HOME,'j2ee','OC4J_EM','log',\
                 'OC4J_EM_default_island_1'),'.','np'),\
  grepDir(catDir($GRID_HOME,'sysman','log'),'\.(log|trc)$','np'),\
  grepDir(catDir($GRID_HOME,'sysman','log'),'^emoms\.(log|trc)\.\d+$','np'),\
  grepDir(catDir($GRID_HOME,'sysman','log','schemamanager'),\
          '\.(log|trc)$','np'))
if $EM_CFG_HOME
{loop $sub (findDir(catDir($EM_CFG_HOME,'em'),'^sysman$','dir',1))
 {if testDir('d',catDir($sub,'log'))
   call sort_files(3,$TAIL,grepDir(lastDir(),'\.(log|trc)$','np'),\
                           grepDir(lastDir(),'^emoms\.(log|trc)\.\d+$','np'))
 }
}
unpretoc

=head2 Agent Push Log Files

Collects the Grid Control agent push log files (for version 12c).

=cut

if compare('valid',$ver,'12')
{var ($dir,@tbl) = (catDir($GRID_HOME,'sysman','prov','agentpush'))
 if testDir('d',$dir)
 {debug ' Inside GRID module, collecting OMS agent push log files'
  call push(@tbl,grepDir(catDir($dir,'logs'),'^\.+$','pv'))
  loop $sub (findDir($dir,'^\d{4}(-\d{2}){2}_(\d{2}-){3}[AP]M$','ip'))
   call push(@tbl,\
    grepDir(catDir($sub,'applogs'),'^\.+$','rv'),\
    grepDir(catDir($sub,'logs'),'^\.+$','rv'),\
    grepDir(catDir($sub,'prereqlogs','emagent_clone_logs'),'^\.+$','rv'),\
    grepDir(catDir($sub,'prereqlogs','emagent_install_logs'),'^\.+$','rv'),\
    grepDir(catDir($sub,'prereqlogs','nfs_install_logs'),'^\.+$','rv'),\
    grepDir(catDir($sub,'prereqlogs','productprereq_logs'),'^\.+$','rv'))
  if @tbl
  {pretoc '2:Agent Push Log Files'
   call sort_files(3,$TAIL,@tbl)
   unpretoc
  }
  else
  {report no_agentpush
   write '**No EM Cloud Management Agent pushed from this OMS**'
   toc '2:[[',getFile(),'][rda_report][Agent Push Log Files]]'
  }
 }
}

=head2 Grid cfgtoollogs Files

Collects Grid home cfgtoollogs Files

=cut

debug ' Inside GRID module, collecting Grid cfgtoollogs files'
pretoc '2:Cfgtoollogs Files'
call sort_files(3,undef,\
  grepDir(catDir($GRID_HOME,'cfgtoollogs'),'.','np'),\
  grepDir(catDir($GRID_HOME,'cfgtoollogs','cfgfw'),'\.log$','np'),\
  grepDir(catDir($GRID_HOME,'cfgtoollogs','oui'),'\.(err|log|out)$','np'),\
  grepDir(catDir($GRID_HOME,'cfgtoollogs','opatch'),'\.(log|txt)$','np'))
unpretoc

=head2 omscafiles - OMS Configuration Assistant Files

Collects OMS configuration assistant files (for version 12c).

=cut

if compare('valid',$ver,'12')
{debug ' Inside GRID module, collecting OMS configuration assistant files'
 report omscafiles
 var $dir = catDir($GRID_HOME,'cfgtoollogs','omsca')
 prefix
 {write '---+!! OMS Configuration Assistant Files'
  write '---## From: ',$dir
  write '   * Links point to files that have been collected in their original \
              format. Opening them directly in your browser can present \
              risks. To prevent them, access the file outside the browser or \
              use the link to save them and use an adequate viewer.'
  write '   * Last ',$TAIL,' lines captured from the files'
  write '|*File Name*| *Size*|*Last Modified Date*|'
 }
 loop $fil (grepDir($dir,'^[^\.]','pt'))
 {if $buf = new('Buffer','r',$fil)
  {var $lnk = encode($fil)
   var $siz = getSize($fil)
   if $siz
   {output d,concat('ca_',basename($fil))
    if ${CUR.LAST}->write_tail($buf,$TAIL,['F',$fil,'F','T'])
     var $lnk = concat('[[',${CUR.LAST}->get_file,'][_blank][',$lnk,']]')
    end ${CUR.LAST}
   }
   write '|',$lnk,' | ',$siz,'|',\
             getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
  }
 }
 if isCreated(true)
  toc '2:[[',getFile(),'][rda_report][OMS Configuration Assistant Files]]'

=head2 plugincafiles - OMS Plugin Configuration Assistant Files

Collects OMS plugin configuration assistant files (for version 12c).

=cut

 debug ' Inside GRID module, collecting OMS plugin config assistant files'
 pretoc '2:OMS Plugin Configuration Assistant Files'
 loop $dir (\
   catDir($GRID_HOME,'cfgtoollogs','pluginca'),\
   findDir(catDir($MW_HOME,'plugins'),'^cfgtoollogs$','nr',1))
 {output F,plugincafiles
  prefix
  {write '---+!! OMS Plugin Configuration Assistant Files'
   write '   * Links point to files that have been collected in their original \
               format. Opening them directly in your browser can present \
               risks. To prevent them, access the file outside the browser or \
               use the link to save them and use an adequate viewer.'
   write '   * Last ',$TAIL,' lines captured from the files'
   write '|*File Name*| *Size*|*Last Modified Date*|'
  }
  loop $fil (grepDir($dir,'^[^\.]','rt',1))
  {if $buf = new('Buffer','r',$fil)
   {var $lnk = encode($fil)
    var $siz = getSize($fil)
    if $siz
    {output d,concat('pluginca_',basename($fil))
     if ${CUR.LAST}->write_tail($buf,$TAIL,['F',$fil,'F','T'])
      var $lnk = concat('[[',${CUR.LAST}->get_file,'][_blank][',$lnk,']]')
     end ${CUR.LAST}
    }
    write '|',$lnk,' | ',$siz,'|',\
              getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
   }
  }
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][From ',encode($dir),']]'
 }
 unpretoc
}

=head2 OMS Miscellaneous Files

Collects various files. Some of the important files are as follows:

=over 16

=item F<emomsintg.xml>

This file specifies the list of special integration classes to be loaded when
the Enterprise Manager application starts. These integration classes define
and shape which special pages and features are enabled for the various target
types.

=item F<opmn.xml>

This file contains OPMN settings.

=item F<orion-web.xml>

This file contains specific settings for the OC4J application.

=item F<uix-config.xml>

This file contains specific settings for the UIX Web pages including supported
languages.

=item F<web.xml>

This file contains specific settings for the user interface.

=back

=cut

debug ' Inside GRID module, collecting miscellaneous OMS files'
pretoc '2:Miscellaneous Files'
call sort_files(3,undef,\
  grepDir(catDir($GRID_HOME,'Apache','Apache','conf'),'.conf$','np'),\
  grepDir(catDir($GRID_HOME,'config'),'.','np'),\
  grepDir(catDir($GRID_HOME,'chgip','config'),'.','np'),\
  grepDir(catDir($GRID_HOME,'chgip','log'),'.','np'),\
  grepDir(catDir($GRID_HOME,'chgip','scripts'),'.','np'),\
  grepDir(catDir($GRID_HOME,'dcm','config'),'.','np'),\
  grepDir(catDir($GRID_HOME,'dcm','logs'),'^log.xml$','dir'),\
  grepDir(catDir($GRID_HOME,'install'),'.','np'),\
  catFile($GRID_HOME,'inventory','Scripts','ext','lib','oneclick.properties'),\
  catFile($GRID_HOME,'j2ee','OC4J_EM','application-deployments','em','em',\
          'orion-web.xml'),\
  catFile($GRID_HOME,'j2ee','OC4J_EM','applications','em','em',\
          'WEB-INF','uix-config.xml'),\
  catFile($GRID_HOME,'j2ee','OC4J_EM','applications','em','em',\
          'WEB-INF','web.xml'),\
  grepDir(catDir($GRID_HOME,'opmn','logs'),'.','np'),\
  grepDir(catDir($GRID_HOME,'opmn','conf'),'\.(conf|xml)$','np'))
unpretoc

=head1 COMMON HOME INFORMATION

Includes the reports generated by the IREQ module about the common home.

=cut

toc '%PUSH("%SPLIT%")%'
toc '%PUSH("1+:Oracle Common Oracle Home")%'
toc '%INCLUDE("',${CUR.GROUP},'_IREQ_GRID_CH.toc")%'
toc '%POP2%'

=head1 WEB TIER INFORMATION

Includes the reports generated by the IREQ module about the Oracle instance and
its associated Oracle home.

=cut

toc '%PUSH("%SPLIT%")%'
toc '%PUSH("0:      * Oracle WebTier Instance")%'
toc '%PUSH("1++:WebTier Oracle Home")%'
toc '%INCLUDE("',${CUR.GROUP},'_IREQ_GRID_OH.toc",1)%'
toc '%POP%'
toc '%PUSH("%SPLIT%")%'
toc '%PUSH("1++:Instance Home")%'
toc '%INCLUDE("',${CUR.GROUP},'_IREQ_GRID_OI.toc")%'
toc '%POP4%'

=head1 ORACLE WEBLOGIC SERVER INFORMATION

Includes the Oracle WebLogic reports generated by the WREQ module.

=cut

toc '%PUSH("%SPLIT%")%'
toc '%PUSH("1+:Oracle WebLogic Server Overview")%'
toc '%INCLUDE("',${CUR.GROUP},'_WREQ_GRID_TOP.toc")%'
toc '%POP2%'
toc '%PUSH("%SPLIT%")%'
toc '%PUSH("1+:Oracle WebLogic Server Domain")%'
toc '%INCLUDE("',${CUR.GROUP},'_WREQ_GRID_DOM.toc")%'
toc '%POP2%'

=head1 SEE ALSO

L<S313IREQ.def|modules::S313IREQ>,
L<S301WREQ.def|modules::S301WREQ>,
L<EMdiag.def|modules::EMdiag>,
L<FMWdft.def|modules::FMWdft>,
L<INSTinfo.def|modules::INSTinfo>,
L<library.def|modules::library>

=begin credits

=over 10

=item RDA 4.7:  Werner De Gruyter.

=item RDA 4.9:  Smitha Nath.

=item RDA 4.16: Eliane Papillon Le Noc.

=item RDA 4.18: Eliane Papillon Le Noc, David Parker.

=item RDA 4.19: David Parker.

=item RDA 4.21: Eliane Papillon Le Noc.

=item RDA 4.22: David Parker.

=item RDA 4.26: Laurence De Sulzer Wart, Eliane Papillon Le Noc.

=item RDA 4.27: Eliane Papillon Le Noc.

=item RDA 4.28: Laurence De Sulzer Wart.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
