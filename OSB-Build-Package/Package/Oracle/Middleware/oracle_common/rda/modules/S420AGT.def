# S420AGT.def: Collects Enterprise Manager Agent Information
# $Id: S420AGT.def,v 2.21 2012/05/21 21:47:37 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/S420AGT.def,v 2.21 2012/05/21 21:47:37 mschenke Exp $
#
# Change History
# 20120517  KRA  Extend the collection.

=head1 NAME

S420AGT - Collects Oracle Enterprise Manager Agent Information

=cut

=head1 DESCRIPTION

This module collects Oracle Enterprise Manager Agent-related information. The
following reports can be generated and are regrouped under C<Enterprise
Manager Agent>:

=cut

echo tput('bold'),'Processing EM Agent module ...',tput('off')

# Initialization
var $AGT         = getSetting('AGT_BASE_HOME','')
var $AGENT_HOME  = getSetting('AGT_HOME','')
var $ORACLE_HOME = ${AGT_ORACLE_HOME:${ORACLE_HOME:''}}
var $TAIL        = getSetting('RDA_TAIL',1000)

if ${AGT_ORACLE_HOME}
 var $EMCTL = catCommand(last,'bin',${AS.BATCH:'emctl'})
else
 var $EMCTL = catCommand($AGENT_HOME,'bin',${AS.BATCH:'emctl'})

var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
var $ERR = ' (error)'

# Search for the sysman directories
var $SYSMAN = catDir($AGENT_HOME,'sysman')
var @SYSMAN = ($SYSMAN)
if or(testDir('d',catDir($AGENT_HOME,$nod = ${RDA.HOST},'sysman')),\
      testDir('d',catDir($AGENT_HOME,$nod = ${RDA.NODE},'sysman')))
{call push(@SYSMAN,lastDir())
 loop $sub (grepDir($AGENT_HOME,concat('^',quote($nod),'_'),'np'))
 {if testDir('d',catDir($sub,'sysman'))
   call push(@SYSMAN,lastDir())
 }
}

# Load the common macros
run library()
run EMdiag()
run INSTinfo()

# Validate the context
var $CFG = get_config($EMCTL)
if match($CFG,'dbconsole|true')
{echo 'Use the DBC module for this DBControl install.'
 return
}
if get_agent_name($AGENT_HOME)
 toc '1:EM Agent (',last,')'
else
 toc '1:Enterprise Manager Agent'

# Set the Agent home as current target
if ?${AGT_ORACLE_HOME}
{call setCurrent(addTarget(\
  'OI_Agent',{ORACLE_INSTANCE=>$AGENT_HOME,\
              HOME_TARGET    =>addTarget('OH_Agent',\
                                         {ORACLE_HOME=>$ORACLE_HOME,\
                                          OH_ABBR    =>'$OH_AGT'}),\
              ORACLE_BASE    =>$AGT,\
              OB_ABBR        =>'$OB_AGT',\
              OI_ABBR        =>'$OI_AGT'}))
}
else
 call setCurrent(addTarget('OH_Agent',{ORACLE_HOME=>$AGENT_HOME}))

=head2 abbr_used - Abbreviations

Displays the RDA abbreviations defined for Oracle Enterprise Manager Agent
collection.

=cut

report abbr_used
prefix
{write '---+ Oracle Enterprise Manager Agent Home Abbreviations'
 write '|*Abbreviation*|*Location*|'
}
var %hsh = getSymbols()
loop $abr (keys(%hsh))
 write '|',$abr,' |',catDir(@{$hsh{$abr}}),' |'
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Abbreviations]]'

=head2 emctl - emctl Command Output

For version 12c and later, it collects the output of the following F<emctl>
command options:

=over 4

=item o C<emctl getversion agent>

=item o C<emctl status agent>

=item o C<emctl status agent scheduler>

=item o C<emctl status agent jobs>

=item o C<emctl config agent getTZ>

=item o C<emctl status agent -secure>

=item o C<emctl status agent dbconnections>

=item o C<emctl status agent verify>

=item o C<emctl status blackout>

=item o C<emctl pingOMS>

=item o C<emctl verifykey>

=item o C<emctl dumpstate agent>

=item o C<emctl getemhome>

=item o C<emctl listplugins agent>

=back

For earlier versions, it collects the output of the following F<emctl> command
options:

=over 4

=item o C<emctl status agent>

=item o C<emctl upload>

=item o C<emctl status agent scheduler>

=item o C<emctl status agent memory>

=item o C<emctl status agent jobs>

=item o C<emctl config agent getTZ>

=item o C<emctl status agent secure>

=item o C<emctl secure status agent> or C<emctl status agent -secure>

=item o C<emctl pingOMS>

=item o C<emctl verifykey>

=item o C<emctl status agent oci>

=item o C<emctl status agent mutex>

=back

=cut

debug ' Inside AGT module, collecting emctl information'
var $ver = undef
if loadCommand(concat($EMCTL,' status agent'))
{if grepLastFile('\sRelease\s','f')
  var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
 if !$ver
 {if grepLastFile('\sCloud Control\s','f')
   var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
 }
}
if !$ver
{if loadCommand(concat($EMCTL,' getversion agent'))
 {if grepLastFile('\sRelease\s','f')
   var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
  if !$ver
  {if grepLastFile('\sCloud Control\s','f')
    var ($ver) = match(last,'\s(\d+(\.\d+){3,})')
  }
 }
}
if compare('valid',$ver,'12')
{var @opt = ('getversion agent',\
             'status agent',\
             'status agent scheduler',\
             'status agent jobs',\
             'config agent getTZ',\
             'status agent -secure',\
             'status agent dbconnections',\
             'status agent verify',\
             'status blackout',\
             'pingOMS',\
             'verifykey',\
             'dumpstate agent',\
             'getemhome',\
             'listplugins agent')
 var @dsc = ('Agent version',\
             'Current status of the agent',\
             'Collections currently scheduled for the agent',\
             'List of current jobs running in the agent',\
             'Agent Time Zone',\
             'Secure status of the agent',\
             'Agent Database connections details',\
             'Agent communication details',\
             'Agent blackout status',\
             'Agent to Oracle Management Server HTTP(S) ping test',\
             'Verify Key',\
             'Agent dump state',\
             'Agent EM home',\
             'Agent plugins')
}
else
{var @opt = ('status agent',\
             'upload',\
             'status agent scheduler',\
             'status agent memory',\
             'status agent jobs',\
             'config agent getTZ',\
             'status agent secure',\
             cond(compare('older',$ver,'10.2.0.3'),'secure status agent',\
                                                   'status agent -secure'),\
             'pingOMS',\
             'verifykey',\
             'status agent oci',\
             'status agent mutex')
 var @dsc = ('Current status of the agent',\
             'Makes upload request to the Oracle Management Server. Show error \
              message (if any) returned by the Oracle Management Server in \
              response to the request.',\
             'Collections currently scheduled for the agent',\
             'Current memory footprint of agent',\
             'List of current jobs running in the agent.',\
             'Agent Time Zone',\
             'Secure status of the agent',\
             'Secure status of the agent',\
             'Agent to Oracle Management Server HTTP(S) ping test',\
             'Verify Key',\
             'OCI agent status',\
             'Agent Mutex status')
}
var $cmd = exec_emctl($EMCTL,$AGENT_HOME,\@opt,\@dsc)
var $HOM = cond(compare('valid',$ver,'12'),$ORACLE_HOME,$AGENT_HOME)

=head2 monitored_targets - Monitored Targets

Displays the targets in the F<target.xml> file of the Oracle Enterprise Manager
Agent and performs some predefined tests on target properties. It displays the
current state of the target and its blackout information also.

=cut

debug ' Inside AGT module, collecting monitored target information'
call display_targets($cmd,$AGENT_HOME,true,\
                     'v,oracle_database,UserName,.',\
                     'v,oracle_database,password,.',\
                     'f,oracle_listener,ListenerOraDir,.',\
                     'h,oracle_ias,StatusURL,.',\
                     concat('tn,oracle_emd,should start with host name,^',\
                            quote(${RDA.HOST})))

=head2 ping_test - OMS Ping Test

Displays the output of the ping test performed on the Oracle Management
Server. This test picks Oracle Management Server from the C<REPOSITORY_URL>
property in the F<emd.properties> file.

=cut

debug ' Inside AGT module, performing OMS ping test'
call ping_host('OMS Ping Test',get_repository_host($AGENT_HOME))

=head2 product_info - Product Information

Provides the inventory for the Oracle Enterprise Manager Agent home.

=cut

debug ' Inside AGT module, providing the agent inventory (can take time)'
report inventory
prefix
{write '---+!! Agent Product Information'
 write $TOC
}
call inventory_details(catDir($HOM,'inventory'),getSetting('AGT_INTERIM'))
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Product Information]]'

=head2 oh_bin - Oracle Home

Lists the content of the F<$HOM/bin> directory (for version 12c and later).

=head2 oi_bin - Instance Home

Lists the content of the F<$AGENT_HOME/bin> directory (for version 12c and
later).

=head2 bin - bin Directory Content

Lists the content of the F<$AGENT_HOME/bin> directory (for versions earlier
than 12c).

=cut

macro stat_dir
{var ($lvl,$rpt,$ttl,$dir) = @arg

 report $rpt
 prefix
  write '---+!! Content of ',encode($dir)
 call statDir('n',$dir)
 if isCreated(true)
  toc $lvl,':[[',getFile(),'][rda_report][',$ttl,']]'
}

debug ' Inside AGT module, collecting bin directory content'
if compare('valid',$ver,'12')
{pretoc '2:bin Directory Content'
 call stat_dir(3,'oh_bin','Oracle Home',catDir($HOM,'bin'))
 call stat_dir(3,'oi_bin','Instance Home',catDir($AGENT_HOME,'bin'))
 unpretoc
}
else
 call stat_dir(2,'bin','bin Directory Content',catDir($AGENT_HOME,'bin'))

=head2 plugins - Plugins Home

Lists the content of the F<$AGT/plugins> directory (for version 12c and later).

=cut

debug ' Inside AGT module, collecting plugins directory content'
if compare('valid',$ver,'12')
 call stat_dir(2,'plugins','Plugins Home',catDir($AGT,'plugins'))

=head2 ohprop - oraclehomeproperties.xml

Displays the contents of the F<oraclehomeproperties.xml> file from the
F<$AGENT_HOME/inventory/ContentsXML> directory.

=cut

debug ' Inside AGT module, providing the agent oraclehomeproperties.xml'
report ohprop
var $fil = catFile($HOM,'inventory','ContentsXML','oraclehomeproperties.xml')
prefix
{write '---+ Contents of oraclehomeproperties.xml File'
 write '---## Information Taken from ',encode($fil)
}
call writeFile($fil)
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][oraclehomeproperties.xml]]'

=head2 agtvfy - EMDIAG Agtvfy Detail Output

Collects EMDIAG Agent verification results.

=cut

if getSetting('AGT_EMDIAG_IN_USE')
{debug ' Inside AGT module, running agtvfy'
 report agtvfy
 var $EMDIAG_TOP = getSetting('AGT_EMDIAG_TOP')
 if testFile('fx',catFile($EMDIAG_TOP,'bin',${AS.BATCH:'agtvfy'}))
 {if compare('valid',$ver,'12')
   var $cmd = concat(lastCommand(),' /d ',quote($EMDIAG_TOP,'x'),\
                     ' /o ',quote($HOM,'x'),\
                     ' verify all -level 9 -detail 2>&1')
  else
   var $cmd = concat(lastCommand(),' /d ',quote($EMDIAG_TOP,'x'),\
                     ' /o ',quote($AGENT_HOME,'x'),\
                     ' verify -level 9 -detail 2>&1')
  prefix
  {write '---+ EMDIAG Agtvfy Detail Output'
   write '---## Using: ',encode($cmd)
  }
  call writeCommand($cmd)
  if isCreated(true)
   toc '2:[[',getFile(),'][rda_report][EMDIAG Agtvfy Detail Output]]'
 }

 # Collect kit log files
 if $EMDIAG_TOP
 {pretoc '2:EMDIAG Kit Log Files'
  call sort_files(3,$TAIL,grepDir(catDir($EMDIAG_TOP,'log'),'\.log$','np'))
  unpretoc
 }
}

=head2 agent_config - Agent Configuration

Collects the following configuration files:

=over 24

=item F<emd.properties>

This file contains all the operational parameters for the Oracle Enterprise
Manager Agent.

=item F<emdlogging.properties>

This file contains the logging setup for the Java fetchlets.

=back

It performs some predefined tests on the configuration properties also. It
reports failures.

=cut

debug ' Inside AGT module, collecting agent configuration'
var @cfg = ('f,emdRootCertLoc,.')
var @log = ()
call display_agent_config($AGENT_HOME,\@cfg,\@log)
call skip_files(catFile($SYSMAN,'config','emd.properties'),\
                catFile($SYSMAN,'config','emagentlogging.properties'))

=head2 Agent Configuration

Collects all the C<*.lst>, and C<*.properties> files from the F<$SYSMAN/config>
directory.

Collects all the C<*.ini>, C<*.txt>, and C<*.xml> files from the F<$SYSMAN/emd>
directory.

Collects additional Oracle Enterprise Manager Agent files. Some of the
important files are as follows:

=over 20

=item F<agentimage.properties>

This file contains the Agent image details (for version 12c).

=item F<OUIinventories.add>

This file contains the list of all Oracle Universal Installer inventories on
the system to be considered by the Oracle Enterprise Manager Agent (for
versions earlier than 12c).

=item F<agntstmp.txt>

This file contains the time stamp of the last heartbeat to the Oracle
Management Server.

=item F<discover.lst>

This file contains a list of all discovery scripts that must be run for
discovery. Discovery is run only once, typically during the installation of the
Oracle Enterprise Manager Agent (for versions earlier than 12c).

=item F<lastupld.xml>

This file has information about categories properties computed for various
targets (for versions earlier than 12c).

=item F<nsupportedtzs.lst>

This file contains the names of all supported time zones (for versions earlier
than 12c).

=item F<protocol.ini>

This file contains the version-specific information of the Oracle Management
Server, which is required by the Oracle Enterprise Manager Agent to communicate
properly (for versions earlier than 12c).

=item F<readme.txt>

This file contains the timezones update information (for versions earlier
than 12c).

=item F<setupinfo.txt>

This file is generated by Oracle Universal Installer during the installation of
the Oracle Enterprise Manager Agent. It contains installation-specific
information (for versions earlier than 12c).

=item F<supportedtzs.lst>

This file contains the names of all supported time zones (for versions earlier
than 12c).

=item F<tzmappings.lst>

This file contains supported time zone mappings (for versions earlier than 12c).

=back

=cut

var @tbl = ()
if compare('valid',$ver,'12')
{call push(@tbl,\
  catFile($AGT,'agentimage.properties'),\
  catFile($HOM,'sysman','install','agentimage.properties'),\
  grepDir(catDir($SYSMAN,'config'),'\.(lst|properties)$','np'),\
  grepDir(catDir($SYSMAN,'emd'),'\.(ini|xml)$','np'),\
  catFile($SYSMAN,'emd','agntstmp.txt'))
}
else
{call push(@tbl,catFile($AGENT_HOME,'oracore','zoneinfo','readme.txt'))
 loop $dir (@SYSMAN)
 {call push(@tbl,catFile($dir,'setupinfo.txt'),\
                 catFile($dir,'admin','nsupportedtzs.lst'),\
                 catFile($dir,'admin','supportedtzs.lst'),\
                 catFile($dir,'admin','tzmappings.lst'),\
                 catFile($dir,'admin','discover','discover.lst'),\
                 grepDir(catDir($dir,'config'),'\.properties$','np'),\
                 grepDir(catDir($dir,'emd'),'\.(ini|xml)$','np'),\
                 catFile($dir,'emd','agntstmp.txt'))
 }
}
call sort_files(3,undef,@tbl)

=head2 file_permissions - File/Directory Details

Displays the details of some files and directories and checks the ownership and
permissions.

=cut

debug ' Inside AGT module, collecting files/directories details'
var %dir = (catDir($SYSMAN,'emd','upload'),'o',\
            catDir($SYSMAN,'emd','upload','upload'),'o',\
            catDir($SYSMAN,'emd','upload','upload','badfile'),'o',\
            catDir($SYSMAN,'emd','state'),'o',\
            catDir($SYSMAN,'emd','collection'),'o',\
            $AGENT_HOME,'o')
var %fil = ($EMCTL,'xo')
var @own = (catFile($AGENT_HOME,'bin','nmb'),\
            catFile($AGENT_HOME,'bin','nmo'),\
            catFile($AGENT_HOME,'bin','nmhs'))
call check_permissions('File/Directory Details',\@own,\%dir,\%fil)

=head2 log_errors - Log Errors

Filters all the lines with C<ERROR> messages from various Oracle Enterprise
Manager Agent log files. It can generate extra reports in cluster contexts.

=cut

debug ' Inside AGT module, extracting errors from agent log files'
pretoc '2:Log Errors'
var $cnt = undef
loop $dir (@SYSMAN)
{call extract_errors(concat('log_errors',$cnt),3,encode(addSymbol($dir)),\
  $TAIL,grepDir(catDir($dir,'log'),'^emagent_memDump','npv'))
 incr $cnt
}
unpretoc

=head2 Log Files

Collects the Oracle Enterprise Manager Agent log files.

=cut

debug ' Inside AGT module, collecting agent log files'
pretoc '2:Log Files'
if compare('valid',$ver,'12')
{call sort_files(3,undef,\
  grepDir(catDir($AGENT_HOME,'install','logs'),'\.log$','ip'),\
  grepDir(catDir($SYSMAN,'log'),'^emagent_memDump','npv'))
}
else
{loop $dir (@SYSMAN)
 {var @tbl = grepDir(catDir($dir,'log'),'^emagent_memDump.*\.trc$','pt')
  call sort_files(3,undef,\
    splice(@tbl,0,3),\
    grepDir(catDir($dir,'log'),'^emagent_memDump','npv'),\
    grepDir(catDir($dir,'emd'),'.traceback','np'))

  output F,cputrack
  var $loc = catDir($dir,'emd','cputrack')
  prefix
  {write '---+!! Contents of ',$loc
   write '   * Links point to files that have been collected in their original \
               format. Opening them directly in your browser can present \
               risks. To prevent them, access the file outside the browser or \
               use the link to save them and use an adequate viewer.'
   write '|*File Name*| *Size*|*Last Modified Date*|'
  }
  var ($flg,$grp) = (true,addSymbol($loc))
  loop $bas (grepDir($loc,'^[^\.]','t'))
  {if testFile('f',$fil = catFile($loc,$bas))
   {var $lnk = encode(catFile($grp,$bas))
    var $siz = getSize($fil)
    if and($flg,$siz)
    {output d,basename($fil)
     if ${CUR.LAST}->write_file($fil)
      var $lnk = concat('[[',${CUR.LAST}->get_file,'][_blank][',$lnk,']]')
     call $[OUT]->end_report(${CUR.LAST})
     var $flg = false
    }
    write '|',$lnk,' | ',$siz,'|',\
              getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
   }
  }
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][',encode(addSymbol($loc)),']]'

  output F,dump
  var $loc = catDir($dir,'dump')
  prefix
  {write '---+!! Contents of ',$loc
   write '   * Links point to files that have been collected in their original \
               format. Opening them directly in your browser can present \
               risks. To prevent them, access the file outside the browser or \
               use the link to save them and use an adequate viewer.'
   write '|*File Name*| *Size*|*Last Modified Date*|'
  }
  var ($flg,$grp) = (true,addSymbol($loc))
  loop $bas (grepDir($loc,'^[^\.]','t'))
  {if testFile('f',$fil = catFile($loc,$bas))
   {var $lnk = encode(catFile($grp,$bas))
    var $siz = getSize($fil)
    if and($flg,$siz)
    {output d,basename($fil)
     if ${CUR.LAST}->write_file($fil)
      var $lnk = concat('[[',${CUR.LAST}->get_file,'][_blank][',$lnk,']]')
     call $[OUT]->end_report(${CUR.LAST})
     var $flg = false
    }
    write '|',$lnk,' | ',$siz,'|',\
              getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
   }
  }
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][',encode(addSymbol($loc)),']]'
 }
}
unpretoc

=head2 Cfgtoollogs Files

Collects the Oracle Enterprise Manager Agent-related F<cfgtoollogs> files.

=cut

debug ' Inside AGT module, collecting agent cfgtoollogs files'
pretoc '2:Cfgtoollogs Files'
var @tbl = ()
loop $dir (findDir(catDir($AGT,'plugins'),'^cfgtoollogs$','nr',1))
 call push(@tbl,grepDir(catDir($dir,'oui'),'\.(err|log|out)$','np'))
call sort_files(3,undef,\
  grepDir(catDir($HOM,'cfgtoollogs'),'.','np'),\
  grepDir(catDir($HOM,'cfgtoollogs','cfgfw'),'\.log$','np'),\
  grepDir(catDir($HOM,'cfgtoollogs','oui'),'\.(err|log|out)$','np'),\
  grepDir(catDir($HOM,'cfgtoollogs','opatch'),'\.log$','np'),\
  grepDir(catDir($AGT,'sbin','cfgtoollogs','oui'),'\.(err|log|out)$','np'),\
  @tbl)
unpretoc

=head1 SEE ALSO

L<EMdiag.def|modules::EMdiag>,
L<INSTinfo.def|modules::INSTinfo>,
L<library.def|modules::library>

=begin credits

=over 10

=item RDA 4.9:  Smitha Nath.

=item RDA 4.18: Eliane Papillon Le Noc.

=item RDA 4.21: Eliane Papillon Le Noc.

=item RDA 4.22: Eliane Papillon Le Noc.

=item RDA 4.26: Rachel Bridden, Eliane Papillon Le Noc.

=item RDA 4.27: Eliane Papillon Le Noc.

=item RDA 4.28: Laurence De Sulzer Wart.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
