# S573HSV.def: Collects Oracle Hyperion Smart View for Office Information
# $Id: S573HSV.def,v 1.12 2012/08/23 16:38:37 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/S573HSV.def,v 1.12 2012/08/23 16:38:37 mschenke Exp $
#
# Change History
# 20120823  KRA  Extend collection.

=head1 NAME

S573HSV - Collects Oracle Hyperion Smart View for Office information

=head1 DESCRIPTION

This module collects information for Oracle Hyperion Smart View for Office. This
module is applicable for Microsoft Windows only.

The following reports can be generated and are regrouped under C<Hyperion
Smart View for Office>:

=cut

echo tput('bold'),'Processing HSV module ...',tput('off')

# Initialization
var $EPM_HOME      = ${EPM_HOME:${ENV.EPM_ORACLE_HOME:${ENV.HYPERION_HOME:''}}}
var $HSV_REQUESTS  = ${HSV_REQUESTS}

var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'

toc '1:Hyperion Smart View for Office'

# Define common macros
macro write_version
{var ($hom,$dll,$lvl,$lnk) = @arg
 var $dir = $hom

 loop $fil (grepDir($dir,$dll,'ir'))
 {if $inf = getVersionInfo($fil)
  {output F,concat('v_',basename($fil))
   write '---+ ',$lnk,' Version Information'
   write '---## From ',encode($fil)
   loop $key (keys($inf))
    write '|*',$key,' *|',$inf->{$key},' |'
   toc nvl($lvl,4),':[[',getFile(),'][rda_report][',$lnk,']]'
  }
 }
}

=head2 Product Version Information

Gathers product version information.

=cut

debug ' Inside HSV module, gathering version information'
pretoc '2:Product Version Information'
if getRegValue('HKCU\Software\Hyperion Solutions\HyperionSmartView','LOCATION')
 call write_version(catDir(last,'Bin'),'^HsAddin\.dll$',3,'HsAddin.dll')
elsif or(testDir('r',catDir($EPM_HOME,'SmartView','Bin')),\
         testDir('r',catDir($EPM_HOME,'Products','SmartView','Bin')),\
         testDir('r',catDir('C:\Oracle\SmartView')))
 call write_version(lastDir(),'^HsAddin\.dll$',3,'HsAddin.dll')
unpretoc

=head2 Microsoft Office Versions

Gathers the version of various Microsoft Office products.

=cut

debug ' Inside HSV module, gathering the Microsoft Office versions'
pretoc '2:Microsoft Office Versions'
loop $key (grepRegValue('HKLM\SOFTWARE\Microsoft\Office','Path'))
{if match($key,'\\Excel\\InstallRoot$')
  call write_version(getRegValue($key,'Path'),'^excel\.exe$',3,'Excel')
 elsif match($key,'\\Outlook\\InstallRoot$')
  call write_version(getRegValue($key,'Path'),'^outlook\.exe$',3,'Outlook')
 elsif match($key,'\\PowerPoint\\InstallRoot$')
  call write_version(getRegValue($key,'Path'),'^powerpnt\.exe$',3,'PowerPoint')
 elsif match($key,'\\Word\\InstallRoot$')
  call write_version(getRegValue($key,'Path'),'^winword\.exe$',3,'Word')
}
unpretoc

=head2 ieversion - Internet Explorer Version

Gathers the Internet Explorer version.

=cut

debug ' Inside HSV module, gathering the Internet Explorer version'
report ieversion
prefix
 write '---+!! Internet Explorer Version'
var $key = 'HKLM\SOFTWARE\Microsoft\Internet Explorer'
write '|*Version*       |',nvl(getRegValue($key,'Version'),'NA'),'|'
toc '2:[[',getFile(),'][rda_report][Internet Explorer Version]]'

=head2 aspnet - ASP.NET Version

Gathers ASP.NET version. It reports the C<RootVer> value from
C<HKLM\SOFTWARE\Microsoft\ASP.NET> and the versions extracted from the keys.

=cut

debug ' Inside HSV module, gathering ASP.NET version'
report aspnet
prefix
{write '---+!! ASP.NET Version'
 write '|*Key*|*Name*|*Version*|'
}
var $reg = 'HKLM\SOFTWARE\Microsoft\ASP.NET'
if ?getRegValue($reg,'RootVer')
 write '|',$reg,' |RootVer |',last,' |'
loop $key (grepRegValue($reg,'Path'))
 write '|',$key,' | - |',field('\\',-1,$key),' |'
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][ASP.NET Version]]'

=head2 msxml - MSXML Version

Gathers MSXML version information.

=cut

debug ' Inside HSV module, gathering MSXML version'
report msxml
prefix
{write '---+!! MSXML Version'
 write '|*Key*|*Name*|*Version*|'
}
loop $key (grepRegValue('HKLM\SOFTWARE\Microsoft','PatchLevel'))
{if match($key,'MSXML')
  write '|',$key,' |PatchLevel |',getRegValue($key,'PatchLevel'),' |'
}
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][MSXML Version]]'

=head2 registry - Registry Information

Collects Hyperion Smart View-related Registry information.

=cut

debug ' Inside HSV module, gathering HSV registry information'
report registry
prefix
{write '---+!! Hyperion Smart View Registry Information'
 write $TOC
}
if writeRegistry('HKCU\Software\Hyperion Solutions\HyperionSmartView')
 write $TOP
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Registry Information]]'

=head2 Oracle WebLogic Server Information

Includes the Oracle WebLogic Server reports generated by the WREQ module for
the associated Oracle WebLogic Server domain (on versions having a product
registry).

=cut

if ?$HSV_REQUESTS
{loop $uid (split('\|',$HSV_REQUESTS))
 {next !$uid
  var $ins = getSetting(concat('HSV_HOME',$uid))
  call setAbbr(concat('HSV_i',$uid))
  toc '%SPLIT%'
  toc "1+:'",getSetting(concat('HSV_INSTANCE',$uid)),"' Deployment"
  if ?getSetting(concat('HSV_DOM',$uid,'_REQ_DOMAIN'))
  {var $dom = basename(last)
   toc '%PUSH("%SPLIT%")%'
   toc '%PUSH("1++:Oracle WebLogic Server Overview")%'
   toc '%INCLUDE("',${CUR.GROUP},'_WREQ_HSV_TOP',$uid,'.toc",1)%'
   toc '%POP2%'
   toc '%PUSH("%SPLIT%")%'
   toc '%PUSH("1++:',"'",$dom,"'",' Domain")%'
   toc '%INCLUDE("',${CUR.GROUP},'_WREQ_HSV_DOM',$uid,'.toc",1)%'
   toc '%POP2%'
  }
  unpretoc 2
 }
}
elsif ?${HSV_DOM_REQ_DOMAIN}
{var $dom = basename(last)
 toc '%PUSH("%SPLIT%")%'
 toc '%PUSH("1+:Oracle WebLogic Server Overview")%'
 toc '%INCLUDE("',${CUR.GROUP},'_WREQ_HSV_TOP.toc")%'
 toc '%POP2%'
 toc '%PUSH("%SPLIT%")%'
 toc '%PUSH("1+:',"'",$dom,"'",' Domain")%'
 toc '%INCLUDE("',${CUR.GROUP},'_WREQ_HSV_DOM.toc")%'
 toc '%POP2%'
}

=head1 SEE ALSO

L<S301WREQ.def|modules::S301WREQ>

=begin credits

=over 10

=item RDA 4.19: Deepak Sabita.

=item RDA 4.24: Nancy Dailey.

=item RDA 4.29: Andrew Rowland.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
