# S910CCR.def: Collects OCM Diagnostic Information
# $Id: S910CCR.def,v 2.13 2012/01/03 13:34:47 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/S910CCR.def,v 2.13 2012/01/03 13:34:47 mschenke Exp $
#
# Change History
# 20120103  MSC  Change the copyright notice.

=head1 NAME

S910CCR - Collects OCM Diagnostic Information

=head1 DESCRIPTION

This module collects diagnostic information from Oracle Configuration Manager
(OCM) installations detected in Oracle homes provided at RDA setup.

The following reports can be generated and are regrouped under C<OCM>:

=cut

echo tput('bold'),'Processing CCR module ...',tput('off')

# Initialization
var $ORACLE_HOME = catDir(getSetting('ORACLE_HOME',''))
var $SET         = getSetting('CCR_SET')
var $TAIL        = getSetting('RDA_TAIL',1000)

var $UNZIP = findCommand('unzip')

var $OH  = quote($ORACLE_HOME)
var $OH1 = concat('^',$OH,'[\\\/]')
var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'
pretoc '1:OCM'

# Load the common macros
run OCMlib()
run library()

=head2 env - Environment Variables

Collects important environment variables.

=cut

debug ' Inside CCR module, collecting important environment variables'
report env
prefix
{write '---+ Important Environment Variables'
 write '|*Variable*|*Value*|'
}
loop $key (grepEnv('^CCR_'))
 write '|',$key,' |',getEnv($key),' |'
if ?getEnv('ORACLE_CONFIG_HOME')
 write '|ORACLE_CONFIG_HOME |',last,' |'
if isCreated(true)
 toc '2:[[',getFile(),'][rda_report][Environment Variables]]'

# Define the OCM collection macros
macro collect_data
{var ($abr,$top) = @arg
 import $TAIL,$TOC,$TOP
 keep $TAIL,$TOC,$TOP

 if testDir('d',$top)
 {# Define the new context
  pretoc '2:OCM in ',getSetting(concat($abr,'_ITEM'))
  var $old = setAbbr($abr)

=head1 FOR EACH SELECTED OCM INSTALLATION

=head2 status - OCM Status

Collects the OCM status.

=cut

  debug ' Inside CCR module, requesting the OCM status (',$abr,')'
  report status
  prefix
  {write 'OCM Status'
   write 'Using: emCCR status'
  }
  var $cmd = ${AS.BATCH:'emCCR'}
  call writeCommand(concat(catCommand($top,'bin',$cmd),' status 2>&1'))
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][OCM Status]]'

=head2 inventory - OCM Inventory

Lists the Jar files present in the inventory directories and extracts their
manifest when F<unzip> is available.

=cut

  macro dsp_inv
  {var ($dir,$ttl) = @arg
   import $TOP,$UNZIP
   keep $TOP,$UNZIP

   if @tbl = grepDir($dir,'\.jar$','inp')
   {write '---+ ',$ttl
    write '---## From ',$dir
    call statFile('b',@tbl)
    write $TOP
    if $UNZIP
    {loop $jar (@tbl)
     {prefix
       write '---++ Manifest from ',basename($jar)
      call writeCommand(concat($UNZIP,' -p ',catCommand($jar),\
                               ' META-INF/MANIFEST.MF'))
      if hasOutput(true)
       write $TOP
     }
    }
   }
  }

  debug ' Inside CCR module, checking the OCM inventory (',$abr,')'
  report inventory
  prefix
  {write '---+!! OCM Inventory'
   write $TOC
  }
  call dsp_inv(catDir($top,'inventory'),'Installed Components')
  call dsp_inv(catDir($top,'inventory','pending'),'Pending Components')
  if isCreated(true)
   toc '3:[[',getFile(),'][rda_report][OCM Inventory]]'

=head2 hosts - Configured Hosts

Lists the configured hosts.

=cut

  debug ' Inside CCR module, listing configured hosts (',$abr,')'
  var @tbl
  loop $pth (grepDir(catDir($top,'hosts'),'^\.+$','npv'))
  {if testDir('d',$pth)
    call push(@tbl,$pth)
  }
  if @tbl
  {report hosts
   prefix
   {write '---+ Configured Hosts'
    write '---## From ',lastDir()
   }
   call statFile('b',@tbl)
   if isCreated(true)
    toc '3:[[',getFile(),'][rda_report][Configured Hosts]]'
  }

=head2 Configuration Files

Collects the configuration files.

=cut

  debug ' Inside CCR module, collecting configuration files (',$abr,')'
  var $dir1 = catDir($top,'hosts',${RDA.HOST})
  var $dir2 = catDir($top,'hosts',${RDA.NODE})

  pretoc '3:Configuration Files'
  call sort_files(4,$TAIL,\
    catFile($top,'config','ccr.properties'),\
    catFile($top,'config','collector.properties'),\
    catFile($top,'config','sched.properties'),\
    catFile($top,'config','default','ccr.properties'),\
    catFile($top,'config','default','collector.properties'),\
    catFile($top,'config','default','sched.properties'),\
    grepDir(catDir($dir1,'config'),'emCCRenv'),\
    grepDir(catDir($dir1,'config'),'\.properties$','nr',2),\
    grepDir(catDir($dir2,'config'),'emCCRenv'),\
    grepDir(catDir($dir2,'config'),'\.properties$','nr',2))
  unpretoc

=head2 Review Files

Collects the review files.

=cut

  debug ' Inside CCR module, collecting review files (',$abr,')'
  pretoc '3:Review Files'
  call sort_files(4,$TAIL,\
    grepDir(catDir($dir1,'state','review'),'\.xml$','np'),\
    grepDir(catDir($dir2,'state','review'),'\.xml$','np'))
  unpretoc

=head2 db - Database Collections

Gets details about the database collection files.

=cut

  debug ' Inside CCR module, listing database collection files (',$abr,')'
  if @tbl = grepDir(catDir($top,'state'),'\.ll\b','inp')
  {report db
   prefix
   {write '---+ Database Collections'
    write '---## From ',encode(lastDir())
   }
   call statFile('b',@tbl)
   if isCreated(true)
    toc '3:[[',getFile(),'][rda_report][Database Collections]]'
  }

=head2 Log Files

Collects the log files.

=cut

  debug ' Inside CCR module, collecting log files (',$abr,')'
  pretoc '3:Log Files'
  call sort_files(4,$TAIL,\
    grepDir(catDir($dir1,'log'),'^\.','npv'),\
    grepDir(catDir($dir2,'log'),'^\.','npv'))
  unpretoc

  # Restore the abbreviation
  call setAbbr($old)
 }
}

macro collect_config
{var ($cnt,$dir) = @arg

 pretoc '2:Instance Home ',$dir

 debug ' Inside CCR module, collecting configuration files (instance ',$cnt,')'
 pretoc '3:Configuration Files'
 call sort_files(4,$TAIL,\
   catFile($dir,'ccr','config','emCCRenv'),\
   catFile($dir,'ccr','config','ccr.properties'),\
   catFile($dir,'ccr','config','collector.properties'),\
   catFile($dir,'ccr','config','sched.properties'),\
   catFile($dir,'ccr','config','default','ccr.properties'),\
   catFile($dir,'ccr','config','default','collector.properties'),\
   catFile($dir,'ccr','config','default','sched.properties'))
 unpretoc

 debug ' Inside CCR module, collecting review files (instance ',$cnt,')'
 pretoc '3:Review Files'
 call sort_files(4,$TAIL,\
   grepDir(catDir($dir,'ccr','state','review'),'\.xml$','np'))
 unpretoc

 debug ' Inside CCR module, collecting log files (instance ',$cnt,')'
 pretoc '3:Log Files'
 call sort_files(4,$TAIL,\
   grepDir(catDir($dir,'ccr','log'),'^\.','npv'))
 unpretoc 2
}

# Perform the collections
if compare('eq',$SET,'*')
{loop $key (grepSetting('^CCR_.*._PATH$'))
  call collect_data(substr($key,0,-5),getSetting($key))
 var $cnt = 0
 loop $dir (get_selected_instances(get_all_instances()))
  call collect_config(incr($cnt),$dir)
}
else
{loop $key (split ('\|',$SET))
 {if compare('eq',$key,'INS')
  {var $cnt = 0
   loop $dir (get_selected_instances(get_all_instances()))
    call collect_config(incr($cnt),$dir)
  }
  else
   call collect_data($key,getSetting(catDir(concat($key,'_PATH'))))
 }
}

=head1 SEE ALSO

L<OCMlib.def|modules::OCMlib>,
L<library.def|modules::library>

=begin credits

=over 10

=item RDA 4.18: Eliane Papillon Le Noc.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
