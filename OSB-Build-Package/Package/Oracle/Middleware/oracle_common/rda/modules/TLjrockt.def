# TLjrockt.def: Collects Oracle JRockit Process Information
# $Id: TLjrockt.def,v 1.7 2012/05/23 12:23:05 mschenke Exp $
# ARCS: $Header: /home/cvs/cvs/RDA_4/src/scripting/lib/modules/TLjrockt.def,v 1.7 2012/05/23 12:23:05 mschenke Exp $
#
# Change History
# 20120523  KRA  Improve dump files collection.

=head1 NAME

TLjrockt - Collects Oracle JRockit Process Information

=head1 DESCRIPTION

This tool collects information about an Oracle JRockit process. The tool covers
Oracle JRockit R27 and later.

For Oracle JRockit R28 and later, it collects the output of the following
F<jrcmd> command options:

=over 4

=item o C<jrcmd version>

=item o C<jrcmd timestamp>

=item o C<jrcmd print_threads>

=item o C<jrcmd print_object_summary>

=item o C<jrcmd print_class_summary>

=item o C<jrcmd print_vm_state>

=item o C<jrcmd print_properties>

=item o C<jrcmd print_exceptions>

=item o C<jrcmd print_memusage>

=item o C<jrcmd list_vmflags>

=item o C<jrcmd hprofdump>

=item o C<jrcmd heap_diagnostics>

=back

For Oracle JRockit R27, it collects the output of the following F<jrcmd>
command options:

=over 4

=item o C<jrcmd version>

=item o C<jrcmd timestamp>

=item o C<jrcmd print_threads>

=item o C<jrcmd print_object_summary>

=item o C<jrcmd print_class_summary>

=item o C<jrcmd print_exceptions>

=item o C<jrcmd print_memusage>

=item o C<jrcmd heap_diagnostics>

=item o C<jrcmd jrarecording>

=back

=head1 USAGE

This tool can be used in two ways:

=over 3

=item a)

Runs interactively. It requests the user to enter the required information.

<rda> -T jrockt

=item b)

Runs from the command line. The input can be given in the command line using
the following syntax:

<rda> -T jrockt:<pid>|<domain_home>[|<advanced>|<jra_duration>]

Where:

 <pid> is the process identifier of the Oracle JRockit process to analyze

 <domain_home> is the Oracle WebLogic Server domain home

 <advanced> is the advanced mode for detailed report collection

 <jra_duration> is the duration (in minutes) for collecting JRA data

=back

The tool collects Oracle JRockit data, generates reports, and displays key
information about the results. The reports can be viewed in the C<External
Data Collections> submenu of the final RDA output package also. If it is not
disabled, you can refresh that section by the following command:

<rda> -vdCRP LOAD

=cut

if !match(${RDA.OS},'(cygwin|linux|solaris|MSWin32|MSWin64)')
 die 'Platform not supported'

echo tput('bold'),'Collecting Oracle JRockit data ...',tput('off')

# Set the abbreviation and purge old reports
call setAbbr('JROCKIT')
call purge('E','.',15,0)

# Get the arguments
if ${TST_ARGS}
{var ($PID,$DOM,$ALL,$DUR) = split('\|',last)

 # Check the process identifier
 if !match($PID,'^\d+$')
  die 'Invalid or missing process identifier'

 # Validate the constants
 if !and(isNumber($DUR),expr('>=',$DUR = int($DUR),0))
  var $DUR = 5
}
else
{call requestSetting('TLjrockt')
 var $PID = ${JROC_PID}
 var $DOM = ${JROC_DOMAIN:''}
 var $ALL = ${JROC_ADVANCED:0}
 var $DUR = ${JROC_JRA_DURATION:5}
}

# Validate the domain and get the JRockit home
if or(isWindows(),isCygwin())
{if loadFile(catFile($DOM,'bin','setDomainEnv.cmd'))
 {if grepLastFile('^\s*set\s+BEA_JAVA_HOME=.*?\s*$','f')
   var ($HOM) = match(last,'^\s*set\s+BEA_JAVA_HOME=(.*?)\s*$')
 }
}
elsif loadFile(catFile($DOM,'bin','setDomainEnv.sh'))
{if grepLastFile('^[^\043]*\bBEA_JAVA_HOME=([\042\047]).*?\1','f')
  var (undef,$HOM) = match(last,'^[^\043]*\bBEA_JAVA_HOME=([\042\047])(.*?)\1')
 elsif grepLastFile('^[^\043]*\bBEA_JAVA_HOME=\S+','f')
  var ($HOM) = match(last,'^[^\043]*\bBEA_JAVA_HOME=(\S+)')
}
if !?$HOM
 die 'Invalid domain'

# Initialization
var $JRCMD = catCommand($HOM,'bin',${AS.EXE:'jrcmd'})
var ($REL) = match(pop(splitDir($HOM)),'jrockit_.*_R(\d+)\.')

# Check for the release
if expr('<',$REL,27)
 die 'The tool supports Oracle JRockit R27 and later'

var $TOC = '%TOC%'
var $TOP = '[[#Top][Back to top]]'

# Set the report prefix and initiate the result report
call setAbbr(concat('JROCKIT_',$PID))
output E,result
title '---+!! Oracle JRockit Data Collection'
title $TOC
title '---+ Parameters'
title '|*Process Identifier*|',$PID,' |'
title '|*Domain Home*|',encode($DOM),' |'
title '|*JRockit Home*|',encode($HOM),' |'
title '|*Advanced collection enabled?*|',cond($ALL,'Yes','No'),' |'
if and($ALL,$DUR,expr('==',$REL,27))
 title '|*JRA Recording Duration (minutes)*|',$DUR,' |'
title $TOP

# Get the JRockit related data
debug ' - Gathering JRockit-related information using jrcmd'
var @dat = (\
 ['version',             'Version'],\
 ['timestamp',           'Timestamp'],\
 ['print_threads',       'Threads'],\
 ['print_object_summary','Object Summary'],\
 ['print_class_summary', 'Class Summary'],\
 ['print_exceptions',    'Exceptions'],\
 ['print_memusage',      'Memory Usage'])

# Release specific options
if expr('==',$REL,27)
{if $ALL
  call push(@dat,['heap_diagnostics','Heap Diagnostics'])
}
else
{call push(@dat,\
 ['print_vm_state',  'VM State'],\
 ['print_properties','Properties'],\
 ['list_vmflags',    'VM Flags'])
 if $ALL
 {call push(@dat,\
   ['hprofdump',       'hprof Dump'],\
   ['heap_diagnostics','Heap Diagnostics'])
 }
}

# Get the jrcmd command output
title '---+ jrcmd Command Output'
loop $dat (@dat)
{var ($opt,$ttl) = @{$dat}
 var $cmd = join(' ',$JRCMD,$PID,$opt)
 debug ' - Getting ',$opt,' data'
 prefix
 {write '---++ jrcmd ',$opt
  write '---### Using: ',encode($cmd)
 }
 call writeCommand(concat($cmd,' 2>&1'))
 if hasOutput(true)
  write $TOP
}

# Get the JRA recording output
if and($ALL,$DUR,expr('==',$REL,27))
{debug 'Starting JRA recording ...'
 var $fil = catFile(${OUT.E},concat(${CUR.PREFIX},'recording.jra'))
 var ($sec,$dur) = (60,expr('*',$DUR,60))
 call system(concat($JRCMD,' ',$PID,' jrarecording recordingtime=',$dur,\
                    ' filename=',quote($fil,'x')))
 sleep 10 # Extra time to sync
 var $max = time()
 incr $max,$dur
 while testFile('f',concat($fil,'.xml'))
 {echo ' - please wait (',$dur,' seconds remaining) ...'
  sleep $sec
  var $dur = $max
  decr $dur,time()
  break expr('<=',$dur,0)
  if expr('<',$dur,$sec)
   var $sec = $dur
 }
 prefix
 {write '---+ Recorded JRA'
  write '   * Links point to files that have been collected in their \
              original format. Opening them directly in your browser can \
              present security risks. To prevent them, access the file \
              outside the browser or use the link to save them and use an \
              adequate viewer.'
  write '|*File Name*| *Size*|*Last Modification*|'
 }
 if testFile('f',$fil)
 {var $lnk = concat('[[',basename($fil),'][_blank][',encode($fil),']]')
  write '|',$lnk,'| ',getSize($fil),'|',\
        getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
 }
 if hasOutput(true)
  write $TOP
}

# Get the JRockit related dump file
debug ' - Gathering JRockit-related dump file'
prefix
{write '---+ JRockit Dump Files'
 write '   * Links point to files that have been collected in their original \
             format. Opening them directly in your browser can present \
             risks. To prevent them, access the file outside the browser or \
             use the link to save them and use an adequate viewer.'
 write '|*File Name*| *Size*|*Last Modified Date*|'
}
loop $fil (grepDir($DOM,'\.dump$','inp'))
{var $siz = getSize($fil)
 var $nam = basename($fil)
 var $lnk = encode($nam)
 if $siz
 {var $rpt = $[OUT]->add_report('e',$nam,0,'.log')
  if $rpt->write_data($fil)
   var $lnk = concat('[[',$rpt->get_raw(true),'][_blank][',$lnk,']]')
  end $rpt
 }
 write '|',$lnk,' | ',$siz,'|',\
        getLastModify($fil,'%d-%b-%Y&nbsp;%H:%M:%S'),' |'
}
if hasOutput(true)
 write $TOP

# Render the report
if isCreated(true)
{call renderFile()
 dump 'Result file: ',last
}
else
 echo 'No information collected'

=head1 SEE ALSO

L<S919LOAD|modules::S919LOAD>

=begin credits

=over 10

=item RDA 4.23: Arun Boddapati.

=item RDA 4.28: Arun Boddapati.

=back

=end credits

=head1 COPYRIGHT NOTICE

Copyright (c) 2002, 2012, Oracle and/or its affiliates. All rights reserved.

=head1 TRADEMARK NOTICE

Oracle and Java are registered trademarks of Oracle and/or its
affiliates. Other names may be trademarks of their respective owners.

=cut
