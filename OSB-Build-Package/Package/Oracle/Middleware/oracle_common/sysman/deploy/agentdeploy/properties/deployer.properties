##########################################################################
#                     WARNING                                            #
# If you are changing any properties, this will be appllicable to all    #
# the current/future sessions. So, make sure that you are running only   #
# sessions that needs these property changes and you REMOVE these        #
# changes once the current sessions are done.                            #
#                                                                        #
##########################################################################

#Variables that are used in this property file
#-------------------------------------------------------
#<BASE_DIR_TMP> is the dir under Install Base Dir,
#used for TMP of agentdeploy on target boxo
#<JRE_LOC> is the folder under BASE_DIR_TMP for JRE
#<OMS_HOME>  is the OMSHOME
#<AGENTKIT_LOC> is the location of agent kit, it may be on 
# OMS or on target box
#<version> is the version of the agent software 
#<platform> is the platform of the agent software
#<OMSHOST> the host where oms is running 
#<OMSPORT> the port used for accessing agent_download kit over http 
#if a '*' appears in a file name, then it will be resolved with patterns as listed below for 10.2 install 
#--------------General Options----------------------------------------
oracle.sysman.core.agentdeploy.deploy.resolveAsteriskFor={_<platform>}
oracle.sysman.core.agentdeploy.deploy.agentKitLocOnOMS={<OMS_HOME>/sysman/agent_download/<version>}
#--------------PREREQ OPTIONS -----------------------------------------
#options to be used  for prereqs(e.g -debug)
oracle.sysman.core.agentdeploy.deploy.LOCAL_PREREQ_OPTIONS={UNIX=},{NT=},{}
oracle.sysman.core.agentdeploy.deploy.REMOTE_PREREQ_OPTIONS={UNIX=},{NT=},{}
#List of files to be zipped to be copied to remote box
oracle.sysman.core.agentdeploy.initSetupFileList_PREREQ={<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentpush_appprereqs.jar,<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/properties/deployer.properties,<OMS_HOME>/sysman/deploy/agentdeploy/initSetup/<version>/<platform>/oui<PLAT_SUFFIX>.jar}
#unjar files on target node for remote prereq
oracle.sysman.core.agentdeploy.unjarFiles_PREREQ={<BASE_DIR_TMP>/jre.jar,<BASE_DIR_TMP>/agentpush_appprereqs.jar}
#unjar files on target node for remote prereq if stage is already not there
oracle.sysman.core.agentdeploy.unjarFilesConditional_PREREQ={<BASE_DIR_TMP>/kitprereqs/kitprereqs.jar,<BASE_DIR_TMP>/oui<PLAT_SUFFIX>.jar}
#after unjarring do chmod on these files
oracle.sysman.core.agentdeploy.doCHMODList_PREREQ={<BASE_DIR_TMP>/<JRE_LOC>/bin,<BASE_DIR_TMP>/Disk1}
#Ifapp is copying shiphome, we need to chmod on following files, unless not
#oracle.sysman.core.agentdeploy.doCHMODConditionalList_PREREQ={<AGENTKIT_LOC>/<platform>/agent/install/runInstaller,<AGENTKIT_LOC>/<platform>/agent/runInstaller,<AGENTKIT_LOC>/<platform>/agent/install/unzip}
oracle.sysman.core.agentdeploy.doCHMODConditionalList_PREREQ={<BASE_DIR_TMP>/oui/,<BASE_DIR_TMP>/unzip}
#------------------END OF PREREQ OPTIONS-----------------------------

#Description for following options for install/upgrade:
#Format: 
#oracle.sysman.core.agentdeploy.deploy + (DEF_SH/NON_DEF_SH/"") +_+ (CLUSTER_SHARED/"")+_+ (UPGRADE/INSTALL/NFS) +_+ (INSTALLER/CONFIG) +_+ OPTIONS 
#anything after 'UNIX=' will be picked up as arguments for unix platforms, same for NT
#Last entry inside {} is applicable for all platforms

#Example:oracle.sysman.core.agentdeploy.deploy.DEF_SH_INSTALL_OPTIONS={UNIX=
#FROM_LOCATION=/ade/spramani_emcorem/oracle/sysman/agent_download/10.2.0.3.0/
#linux/agent/stage/products.xml},{NT= },{}

#---------------- NFS INSTALL PROPERTIES -------------------------
oracle.sysman.core.agentdeploy.deploy.NFS_CONFIG_OPTIONS={}
#These are entries that will be pre-pend in the response file 
#"{s_OMSHost=<OMSHOST>} will add the OMS Host value as calculated by application in the response File
#"{var=val}" will add var=val in the rsp file as it is example: {s_OMSHost=example-host.domain.com}
oracle.sysman.core.agentdeploy.updateResponseFileFor_NFS={oracle.sysman.top.agent|b_secureAgent=true},{oracle.sysman.top.agent|s_stateDir=<STATE_DIR>}
#These entries will be put in config response file
oracle.sysman.core.agentdeploy.updateConfigResponseFileFor_NFS=
#List of files to be zipped to be copied to remote box
oracle.sysman.core.agentdeploy.initSetupFileList_NFS={<OMS_HOME>/sysman/deploy/agentdeploy/scripts/agentdeployroot.sh,<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/scripts/nfsagentupdate.pl}
#unjar files on target node for remote prereq
oracle.sysman.core.agentdeploy.unjarFiles_NFS=
#after unjarring do chmod on these files
oracle.sysman.core.agentdeploy.doCHMODList_NFS={<BASE_DIR_TMP>/agentdeployroot.sh}
#If app is copying shiphome, we need to chmod on following files, unless not
oracle.sysman.core.agentdeploy.doCHMODConditionalList_NFS={}


#----------------END OF NFS INSTALL PROPERTIES ------------------

#---------------- CLONE INSTALL PROPERTIES -------------------------
#Install Options for Clone Install
oracle.sysman.core.agentdeploy.deploy.CLONE_INSTALLER_OPTIONS=
#Config Options for Clone Install
oracle.sysman.core.agentdeploy.deploy.CLONE_CONFIG_OPTIONS=
#These are entries that will be pre-pend in the response file 
#"{s_OMSHost=<OMSHOST>} will add the OMS Host value as calculated by application in the response File
#"{var=val}" will add var=val in the rsp file as it is example: {s_OMSHost=example-host.domain.com}
oracle.sysman.core.agentdeploy.updateResponseFileFor_CLONE=
#These entries will be put in config response file
oracle.sysman.core.agentdeploy.updateConfigResponseFileFor_CLONE=
#List of files to be zipped to be copied to remote box
oracle.sysman.core.agentdeploy.initSetupFileList_CLONE={<OMS_HOME>/sysman/deploy/agentdeploy/scripts/agentdeployroot.sh,<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar}
#unjar files on target node for remote prereq
oracle.sysman.core.agentdeploy.unjarFiles_CLONE=
#after unjarring do chmod on these files
oracle.sysman.core.agentdeploy.doCHMODList_CLONE={<BASE_DIR_TMP>/agentdeployroot.sh}
#If app is copying shiphome, we need to chmod on following files, unless not
oracle.sysman.core.agentdeploy.doCHMODConditionalList_CLONE={}


#----------------END OF CLONE INSTALL PROPERTIES ------------------



#-----------------FRESH INSTALL OPTIONS -------------------------
#Options for Default Shiphome (cluster/non-cluster)
oracle.sysman.core.agentdeploy.deploy.DEF_SH_INSTALL_INSTALLER_OPTIONS={UNIX= },{NT= },{}
oracle.sysman.core.agentdeploy.deploy.DEF_SH_INSTALL_CONFIG_OPTIONS=

#Options for Default Shiphome, Cluster Shared Install 
oracle.sysman.core.agentdeploy.deploy.DEF_SH_CLUSTER_SHARED_INSTALL_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.DEF_SH_CLUSTER_SHARED_INSTALL_CONFIG_OPTIONS=

#Options for Non-Default Shiphome, (cluster/Standalone Install)
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_INSTALL_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_INSTALL_CONFIG_OPTIONS=

#Options for Non-Default Shiphome, Cluster Shared Install 
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_CLUSTER_SHARED_INSTALL_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_CLUSTER_SHARED_CONFIG_OPTIONS=
#These are entries that will be pre-pend in the response file 
#"{s_OMSHost=<OMSHOST>} will add the OMS Host value as calculated by application in the response File
#"{var=val}" will add var=val in the rsp file as it is example: {s_OMSHost=example-host.domain.com}
oracle.sysman.core.agentdeploy.updateResponseFileFor_INSTALL={oracle.sysman.top.agent:b_secureAgent=false},{s_OMSHost=<OMSHOST>},{s_OMSPort="<OMSPORT>"},{oracle.sysman.ccr:b_useRegistration=<USEREGISTRATION>},{oracle.sysman.ccr:s_csiNumber="<CSINUMBER>"},{oracle.sysman.ccr:s_countryCode="<COUNTRYCODE>"},{oracle.sysman.ccr:s_metaLink="<METALINK>"},{oracle.sysman.ccr:b_proxyused=<USEPROXY>},{oracle.sysman.ccr:s_serverName="<SERVERNAME>"},{oracle.sysman.ccr:s_portNumber="<PORTNUMBER>"},{oracle.sysman.ccr:s_userName="<USERNAME>"},{oracle.sysman.ccr:s_obf_proxyPassword="<OBF_PROXYPASSWORD>"}

#these entris will go in config response file
oracle.sysman.core.agentdeploy.updateConfigResponseFileFor_INSTALL={oracle.sysman.top.agent|b_secureAgent=false}
# files to jar up to copy to target node 
#oracle.sysman.core.agentdeploy.initSetupFileListDefSH_INSTALL={<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/properties/deployer.properties,<AGENTKIT_LOC>/agentdeployroot.sh}
##TODO to remove the oui.jar from copying in non-def SH
oracle.sysman.core.agentdeploy.initSetupFileListNonDefSH_INSTALL={<OMS_HOME>/sysman/deploy/agentdeploy/scripts/agentdeployroot.sh,<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/properties/deployer.properties}
#unjar these files on target node after unjarring the above jar
#oracle.sysman.core.agentdeploy.unjarFilesDefSH_INSTALL={<BASE_DIR_TMP>/jre.jar}
oracle.sysman.core.agentdeploy.unjarFilesNonDefSH_INSTALL={<BASE_DIR_TMP>/jre.jar}
#do chmod on following files target node after unjarring
oracle.sysman.core.agentdeploy.doCHMODList_INSTALL={<BASE_DIR_TMP>/<JRE_LOC>/bin,<BASE_DIR_TMP>/agentdeployroot.sh,<BASE_DIR_TMP>/Disk1}
#If app is copying shiphome, we need to chmod on following files, unless not
oracle.sysman.core.agentdeploy.doCHMODConditionalList_INSTALL={}
#-----------------------END FRESH INSTALL OPTIONS--------------------------

#----------------------- UPGRADE AGENT OPTIONS ------------------------
#Options for Default Shiphome (cluster/standalone)
oracle.sysman.core.agentdeploy.deploy.DEF_SH_UPGRADE_INSTALLER_OPTIONS={UNIX= },{NT= },{}
oracle.sysman.core.agentdeploy.deploy.DEF_SH_UPGRADE_CONFIG_OPTIONS=

#Options for Default Shiphome, Cluster Shared Install 
oracle.sysman.core.agentdeploy.deploy.DEF_SH_CLUSTER_SHARED_UPGRADE_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.DEF_SH_CLUSTER_SHARED_UPGRADE_CONFIG_OPTIONS=

#Options for Non-Default Shiphome (cluster/Standalone Install)
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_UPGRADE_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_UPGRADE_CONFIG_OPTIONS=

#Options for Non-Default Shiphome, Cluster Shared Install 
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_CLUSTER_SHARED_UPGRADE_INSTALLER_OPTIONS=
oracle.sysman.core.agentdeploy.deploy.NON_DEF_SH_CLUSTER_SHARED_UPGRADE_CONFIG_OPTIONS=
#These are entries that will be pre-pend in the response file 
#"{s_OMSHost=<OMSHOST>} will add the OMS Host value as calculated by application in the response File
#"{var=val}" will add var=val in the rsp file as it is example: {s_OMSHost=example-host.domain.com}
oracle.sysman.core.agentdeploy.updateResponseFileFor_UPGRADE={s_OMSHost=<OMSHOST>},{s_OMSPort="<OMSPORT>"},{oracle.sysman.ccr:b_useRegistration=<USEREGISTRATION>},{oracle.sysman.ccr:s_csiNumber="<CSINUMBER>"},{oracle.sysman.ccr:s_countryCode="<COUNTRYCODE>"},{oracle.sysman.ccr:s_metaLink="<METALINK>"},{oracle.sysman.ccr:b_proxyused=<USEPROXY>},{oracle.sysman.ccr:s_serverName="<SERVERNAME>"},{oracle.sysman.ccr:s_portNumber="<PORTNUMBER>"},{oracle.sysman.ccr:s_userName="<USERNAME>"},{oracle.sysman.ccr:s_obf_proxyPassword="<OBF_PROXYPASSWORD>"}
#these entris will go in config response file
oracle.sysman.core.agentdeploy.updateConfigResponseFileFor_UPGRADE=
# file to jar up to copy to target node
#oracle.sysman.core.agentdeploy.initSetupFileListDefSH_UPGRADE={<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/agent_download/<version>/<platform>/oui/oui*.jar,<OMS_HOME>/sysman/agent_download/<version>/agentdeployroot.sh}
#TODO to remove the oui.jar from copying in non-def SH
oracle.sysman.core.agentdeploy.initSetupFileListNonDefSH_UPGRADE={<OMS_HOME>/sysman/deploy/agentdeploy/scripts/agentdeployroot.sh,<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/properties/deployer.properties}
#unjar these files on target node after unjarring the above jar
#oracle.sysman.core.agentdeploy.unjarFilesDefSH_UPGRADE={<BASE_DIR_TMP>/oui.jar,<BASE_DIR_TMP>/jre.jar}
oracle.sysman.core.agentdeploy.unjarFilesNonDefSH_UPGRADE={<BASE_DIR_TMP>/jre.jar}
#do chmod on following files target node after unjarring
oracle.sysman.core.agentdeploy.doCHMODList_UPGRADE={<BASE_DIR_TMP>/<JRE_LOC>/bin,<BASE_DIR_TMP>/agentdeployroot.sh}
#If app is copying shiphome, we need to chmod on following files, unless not
oracle.sysman.core.agentdeploy.doCHMODConditionalList_UPGRADE={<AGENTKIT_LOC>/<platform>/agent/install/runInstaller,<AGENTKIT_LOC>/<platform>/agent/runInstaller,<AGENTKIT_LOC>/<platform>/agent/install/unzip}

# -------------- END UPGRADE AGENT OPTIONS --------------------------------

#------------------PORT CHECK PROPERTIES-----------------------------------
#files to jar up to copy to target node
oracle.sysman.core.agentdeploy.initSetupFileList_PORTCHECK={<OMS_HOME>/sysman/deploy/agentdeploy/lib/agentdeploy_remoteops.jar,<OMS_HOME>/sysman/deploy/agentdeploy/properties/deployer.properties}
#unjar these files on target node after unjarring the above jar
oracle.sysman.core.agentdeploy.unjarFiles_PORTCHECK={<BASE_DIR_TMP>/jre.jar}
#do chmod on following files on target node after unjar
oracle.sysman.core.agentdeploy.doCHMODList_PORTCHECK={<BASE_DIR_TMP>/<JRE_LOC>/bin}
#If app is copying shiphome, we need to chmod on following files, unless not
oracle.sysman.core.agentdeploy.doCHMODConditionalList_PORTCHECK={}
# platformcode:platform display name: platform dir name 
#
# 46:Linux:linux;
# 453:Solaris (SPARC 32):solaris;
# 912:Windows 32:win32;
# 2:HP-UX:hpunix;
# 610:IBM SP AIX:aix;
# 23:Solaris Operating System (SPARC 64-bit):solaris_64;
# 59:HP-UX PA-RISC (64-bit):hpi;
# 212:AIX5L Based Systems (64-bit):aix5l;
# 197:HP-UX Itanium:hpia64;
# 249:Linux on POWER:linux_ppc;
# 214:Linux Itanium:linux_ia64;
# 226:Linux x86-64:linux_x86-64;
# 173:Solaris Operating System (x86):solaris_x86;
# 267:Solaris Operating System (x86-64):solaris_x86-64;
# 211:linux_zseries64:linux_zseries;
# 87:HP Tru64 UNIX:decunix;
# 233:Microsoft Windows Server 2003 (64-bit AMD64 and Intel EM64T):win_amd;
# 208:Microsoft Windows Server 2003 (64-bit Itanium):win_ia64;
# 227:IBM Power Based Linux:linux_ppc64 
#
# NTGrp/UNIXGrp
# The platforms are categorized into two groups: UNIX and NT groups.
# Generally speaking, Linux, Solaris, AIX and so on belong to UNIX group.
# Instead, Windows XP, Windows NT, Windows 2000, Windows 2003 belong to NT group.
oracle.sysman.core.agentdeploy.deploy.remote.port.platformParams=\
{PLATFORM_CODE=46|PLATFORM=LINUX|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=453|PLATFORM=SOLARIS|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=912|PLATFORM=WIN32|PLATFORM_GRP=NTGrp},\
{PLATFORM_CODE=2|PLATFORM=HPUNIX|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=610|PLATFORM=AIX|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=23|PLATFORM=SOLARIS_64|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=59|PLATFORM=HPI|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=212|PLATFORM=AIX5L|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=197|PLATFORM=HPIA64|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=249|PLATFORM=LINUX_PPC|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=226|PLATFORM=LINUX_X86-64|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=173|PLATFORM=SOLARIS_X86|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=267|PLATFORM=SOLARIS_X86-64|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=211|PLATFORM=LINUX_ZSERIES|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=87|PLATFORM=DECUNIX|PLATFORM_GRP=UNIXGrp},\
{PLATFORM_CODE=233|PLATFORM=WIN_AMD|PLATFORM_GRP=NTGrp},\
{PLATFORM_CODE=208|PLATFORM=WIN_IA64|PLATFORM_GRP=NTGrp},\
{PLATFORM_CODE=227|PLATFORM=LINUX_PPC64|PLATFORM_GRP=UNIXGrp}
}
# 
# NETSTAT_PORT_ADDR_SEPARATOR
# There are two symbols, COLON and DOT,used for separator of port & ip address.
# By default, ex, Linux/Win32 platform, the output uses character like ':' to 
# separator address and port,
# i.e 127.0.0.1:21, for confusion avoiding, you need to use the word COLON, 
# instead of the characted ':'.
#
# MAPPING_CMD
# For different platforms, they use different command to get the process name.
# For example, 
# Win32 uses "tasklist" to get the process name by given process id,( pid), 
# however, for Linux/Solaris, "lsof -i" with port is used to get the process 
# name for specific port.
# 
oracle.sysman.core.agentdeploy.deploy.remote.port.portCheckParams={46:\
NETSTAT_HEADER_LINES=2|\
NETSTAT_CMD=/bin/netstat -ano|NETSTAT_COLUMN=7|\
NETSTAT_LOCALIP_COL=2|\
NETSTAT_PID_EXIST=false|\
NETSTAT_PORT_ADDR_SEPARATOR=COLON|NETSTAT_PID_COL=3|\
MAPPING_CMD=/usr/sbin/lsof -i|\
MAPPING_HEADER_LINES=1|\
MAPPED_NAME_COL=1|\
MAPPING_COLUMN=9},\
{912:\
NETSTAT_HEADER_LINES=4|\
NETSTAT_CMD=\\WINDOWS\\system32\\netstat -ano|\
NETSTAT_COLUMN=5|\
NETSTAT_LOCALIP_COL=2|\
NETSTAT_PID_EXIST=true|\
NETSTAT_PORT_ADDR_SEPARATOR=COLON|\
NETSTAT_PID_COL=5|\
MAPPING_CMD=\\WINDOWS\\system32\\tasklist|\
MAPPING_HEADER_LINES=0|\
MAPPED_NAME_COL=1|\
MAPPING_COLUMN=5},\
{453:\
NETSTAT_HEADER_LINES=2|\
NETSTAT_CMD=/bin/netstat -n|\
NETSTAT_COLUMN=7|\
NETSTAT_LOCALIP_COL=1|\
NETSTAT_PID_EXIST=false|\
NETSTAT_PORT_ADDR_SEPARATOR=DOT|\
NETSTAT_PID_COL=3|\
MAPPING_CMD=/usr/local/bin/lsof -i|\
MAPPING_HEADER_LINES=1|\
MAPPED_NAME_COL=1|\
MAPPING_COLUMN=9}
# MIN_PORT/MAX_PORT:This standards for the rage of port for agent deployment ex. 1830/1849
oracle.sysman.core.agentdeploy.deploy.remote.port.agentPortRange=\
{MIN_PORT=1830|MAX_PORT=1850}

#------------------END OF PORT CHECK PROPERTIES ---------------------------

#------------------ DEPLOYER LOGGER PROPERTIES  --------------------------------------
# possible values are INFO, FINE(for debug)
oracle.sysman.core.agentdeploy.deploy.loggerLevel=INFO
# possible values are INFO, FINE(for debug)
oracle.sysman.core.agentdeploy.deploy.remote.loggerLevel=INFO
#----------------END OF DEPLOYER LOGGER PROPERTIES ------------------------------------

#------------------ PORT CHECK PROPERTIES  --------------------------------------
# Properties for port check
# All properties specified here will be set as platform properties
#
#This property specifies the parameters in the parsing process since the 
#output of commands varies on different platforms.
#


#------------------END OF PORT CHECK PROPERTIES ---------------------------
#------------------START SOURCE SOFTWARE CHECKS ---------------------------
#List of files and dirs to validate for a Shiphome to be valid
#This list is checked on the remote boxes
oracle.sysman.core.agentdeploy.sourceSoftwareShiphomeFileCheckList=response/additional_agent.rsp,agent/stage/products.xml
oracle.sysman.core.agentdeploy.sourceSoftwareShiphomeDirCheckList=agent,agentdeploy,oui,prereqs

#List of files and dirs to validate the shiphome on the oms
#Used by oracle.sysman.core.agentdeploy.deploy.prereqs.util.CheckShiphome.java
oracle.sysman.core.agentdeploy.shiphomeCheckList=addons,agent,agentDownload<.platform>,agent_scripts.jar,agentdeploy,oui,prereqs,response,agent/stage/products.xml
#------------------END SOURCE SOFTWARE CHECKS -----------------------------
#------------------START PATH CHECK:check list ----------------------------
# The list of properties to check for on local host
oracle.sysman.core.agentdeploy.localpathchecklist=PING_PATH,SSH_PATH,SCP_PATH,SH_PATH,SHELL_PATH,UNZIP_PATH,ZIP_PATH,MKDIR_PATH,RMDIR_PATH,RM_PATH,CHMOD_PATH,SSH_KEYGEN_PATH,CP_PATH,TAR_PATH
# The list of properties to check for on remote hosts
oracle.sysman.core.agentdeploy.remotepathchecklist=SH_PATH,SHELL_PATH,ZIP_PATH,TRUE,MKDIR_PATH,RM_PATH,RMDIR_PATH,CHMOD_PATH,SUDO_PATH,TOUCH_PATH,CP_PATH,MV_PATH,CAT_PATH,TAR_PATH
#------------------END PATH CHECK :check list -----------------------------
oracle.sysman.core.agentdeploy.masteragentpathchecklist=oui/bin/runInstaller,jdk/bin/java,bin/unzip,sysman/install/nfsagentinstall,bin/emctl

#oracle.sysman.core.agentdeploy.masteragentpathchecklist=""
#Command to run on remote node when checking for banner messages
oracle.sysman.core.agentdeploy.bannercommand="/bin/true"
oracle.sysman.core.agentdeploy.bannerargs=
