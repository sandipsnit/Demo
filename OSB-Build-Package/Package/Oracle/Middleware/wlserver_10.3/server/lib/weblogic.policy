//
// To use this file you must turn on the java security manager by defining
// java.security.manager and setting the java.security.policy property to
// point to the security policy which should be in the lib directory.
// For example: 
//   java -Djava.security.manager
//        -Djava.security.policy==C:/Oracle/Middleware/wlserver_10.3/server/lib/weblogic.policy
//           weblogic.Server
//
// You can edit this file and change the permissions for your applications
// or update the codeBase line to point to where your server is installed 
//
// You should grant all permissions to classes in
// .internal, and .wlnotdelete folders located in your server directory.
// You can set 
//   -Duser.domain=<user domain folder> 
//   -Dweblogic.Name=<server name> 
// command line properties and use them in your policy file.
// For example, the basic grant statements for servers in a user domain would be:
//
// grant codeBase "file:${user.domain}/servers/${weblogic.Name}/tmp/.internal/-" {
//   permission java.security.AllPermission;
// };
// grant codeBase "file:${user.domain}/servers/${weblogic.Name}/tmp/.wlnotdelete/-" {
//   permission java.security.AllPermission;
// };
//
// The codeBase location must be a URL, not a file path
// so Windows users beware of backslashes.
//
// For further information on "Using Java Security to Protect WebLogic Resources", check out
// http://e-docs.bea.com/wls/docs100/security/server_prot.html
//
//

grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/server/lib/-" {
  permission java.security.AllPermission;
};

grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/../modules/-" {
  permission java.security.AllPermission;
};

grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/server/ext/-" {
  permission java.security.AllPermission;
};

//
// For standard extensions directories
//
grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/common/lib/ext/*" {
  permission java.security.AllPermission;
};

grant codeBase "file:${weblogic.ext.dirs}/*" {
 permission java.security.AllPermission;
};

grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/common/eval/pointbase/lib/-" {
  permission java.security.AllPermission;
};

//
// For the petstore demo
//
//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/domains/petstore/servers/petstoreServer/tmp/-" {
//  permission java.security.AllPermission;
//};

//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/domains/petstore/-" {
//	permission java.util.PropertyPermission "*", "read";
//};

//
// For the examples
//
//
//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/domains/wl_server/servers/examplesServer/tmp/-" {
//  permission java.security.AllPermission;
//};


//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/server/examples/build/-" {
//	permission java.io.FilePermission "C:${/}Oracle${/}Middleware${/}wlserver_10.3${/}samples${/}server${/}examples${/}src${/}-", "read";
//	permission java.io.FilePermission "C:${/}Oracle${/}Middleware${/}wlserver_10.3${/}samples${/}domains${/}wl_server${/}servers${/}examplesServer${/}data${/}ldap", "read,write";
//};

//
// For the MedRec
//
//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/domains/medrec/servers/MedRecServer/tmp/-" {
//  permission java.security.AllPermission;
//};


//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/server/medrec/-" {
//	permission java.io.FilePermission "C:${/}Oracle${/}Middleware${/}wlserver_10.3${/}samples${/}server${/}medrec${/}src${/}-", "read";
//	permission java.io.FilePermission "C:${/}Oracle${/}Middleware${/}wlserver_10.3${/}samples${/}domains${/}medrec${/}servers${/}MedRecServer${/}data${/}ldap", "read,write";
//};

//
// For the workshop
//
//grant codeBase "file:C:/Oracle/Middleware/wlserver_10.3/samples/workshop/-" {
//  permission java.security.AllPermission;
//};


//
// For Oracle JRF to load OPSS Policy provider 
//
 grant codeBase "file:${oracle.home}/modules/oracle.jps_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 

//grant to alternative location as well for some FMW install
 grant codeBase "file:${common.components.home}/modules/oracle.jps_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 


//
// For jps Audit to bootstrap during server starup
//
 grant codeBase "file:${oracle.home}/modules/oracle.iau_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 

 grant codeBase "file:${common.components.home}/modules/oracle.iau_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 


//
// For Oracle JRF to load Oracle Wallet 
//
 grant codeBase "file:${oracle.home}/modules/oracle.pki_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 

//grant to alternative location as well  for some FMW install
 grant codeBase "file:${common.components.home}/modules/oracle.pki_${jrf.version}/*" { 
    permission java.security.AllPermission; 
 }; 

//
// These are for the three app types
//

// EJB default permissions
grant codebase "file:/weblogic/application/defaults/EJB" {
    permission java.lang.RuntimePermission "queuePrintJob"; 
    permission java.net.SocketPermission "*", "connect"; 
    permission java.util.PropertyPermission "*", "read";
    permission java.io.FilePermission "WEBLOGIC-APPLICATION-ROOT${/}-", "read";
    permission java.lang.management.ManagementPermission "control", "";
};

// Web App default permissions
grant codebase "file:/weblogic/application/defaults/Web" {
    permission java.lang.RuntimePermission "loadLibrary"; 
    permission java.lang.RuntimePermission "queuePrintJob"; 
    permission java.net.SocketPermission "*", "connect"; 
    permission java.io.FilePermission "WEBLOGIC-APPLICATION-ROOT${/}-", "read,write";
    permission java.io.FilePermission "WEBLOGIC-APPLICATION-ROOT${/}..${/}-", "read";
    permission java.util.PropertyPermission "*", "read";
    permission java.lang.management.ManagementPermission "control", "";
};

// Connector default permissions
grant codebase "file:/weblogic/application/defaults/Connector" {
    permission java.net.SocketPermission "*", "connect"; 
    permission java.io.FilePermission "WEBLOGIC-APPLICATION-ROOT${/}-", "read,write";
    permission java.io.FilePermission "WEBLOGIC-APPLICATION-ROOT${/}..${/}-", "read";
    permission java.util.PropertyPermission "*", "read";
    permission java.lang.management.ManagementPermission "control", "";
};


// Standard extensions get all permissions by default
grant codeBase "file:${{java.ext.dirs}}/*" {
	permission java.security.AllPermission;
};
grant codeBase "file:${java.home}/lib/ext/*" {
	permission java.security.AllPermission;
};

//Granting MBeanPermission(all actions) to the WLS Administrators Subject
//grant principal weblogic.security.principal.WLSGroupImpl "Administrators" {
//  permission javax.management.MBeanPermission "*", "*";
//}; 

// Grant notification listener actions to standard roles
grant principal weblogic.security.principal.WLSGroupImpl "Administrators" {
    permission javax.management.MBeanPermission "*", "addNotificationListener";
    permission javax.management.MBeanPermission "*", "removeNotificationListener";
}; 
grant principal weblogic.security.principal.WLSGroupImpl "Deployers" {
    permission javax.management.MBeanPermission "*", "addNotificationListener";
    permission javax.management.MBeanPermission "*", "removeNotificationListener";
}; 
grant principal weblogic.security.principal.WLSGroupImpl "Operators" {
    permission javax.management.MBeanPermission "*", "addNotificationListener";
    permission javax.management.MBeanPermission "*", "removeNotificationListener";
}; 
grant principal weblogic.security.principal.WLSGroupImpl "Monitors" {
    permission javax.management.MBeanPermission "*", "addNotificationListener";
    permission javax.management.MBeanPermission "*", "removeNotificationListener";
}; 
grant principal weblogic.security.principal.WLSKernelIdentity * {
    permission javax.management.MBeanPermission "*", "addNotificationListener";
    permission javax.management.MBeanPermission "*", "removeNotificationListener";
}; 

// default permissions granted to all domains
grant { 
	// "standard" properies that can be read by anyone

	permission java.util.PropertyPermission "java.version", "read";
	permission java.util.PropertyPermission "java.vendor", "read";
	permission java.util.PropertyPermission "java.vendor.url", "read";
	permission java.util.PropertyPermission "java.class.version", "read";
	permission java.util.PropertyPermission "os.name", "read";
	permission java.util.PropertyPermission "os.version", "read";
	permission java.util.PropertyPermission "os.arch", "read";
	permission java.util.PropertyPermission "file.separator", "read";
	permission java.util.PropertyPermission "path.separator", "read";
	permission java.util.PropertyPermission "line.separator", "read";

	permission java.util.PropertyPermission "java.specification.version", "read";
	permission java.util.PropertyPermission "java.specification.vendor", "read";
	permission java.util.PropertyPermission "java.specification.name", "read";

	permission java.util.PropertyPermission "java.vm.specification.version", "read";
	permission java.util.PropertyPermission "java.vm.specification.vendor", "read";
	permission java.util.PropertyPermission "java.vm.specification.name", "read";
	permission java.util.PropertyPermission "java.vm.version", "read";
	permission java.util.PropertyPermission "java.vm.vendor", "read";
	permission java.util.PropertyPermission "java.vm.name", "read";
};


